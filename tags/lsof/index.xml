<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Lsof on 良宏</title>
        <link>/tags/lsof/</link>
        <description>Recent content in Lsof on 良宏</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Fri, 25 Mar 2022 20:17:18 +0800</lastBuildDate><atom:link href="/tags/lsof/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>lsof</title>
        <link>/post/tech/lsof/</link>
        <pubDate>Fri, 25 Mar 2022 20:17:18 +0800</pubDate>
        
        <guid>/post/tech/lsof/</guid>
        <description>&lt;h2 id=&#34;介绍&#34;&gt;介绍
&lt;/h2&gt;&lt;p&gt;linux环境下，任何事物都以文件的形式存在。不仅仅可以访问常规数据，还可以访问网络连接和硬件。系统在后台为应用程序分配一个文件描述符，文件描述符为应用程序与基础操作系统之间的交互提供了通用接口。应用程序打开文件的描述符列表提供了大量关于这个应用程序本身的信息，通过lsof工具能够查看这个列表对系统监测以及排错很有帮助。&lt;/p&gt;
&lt;p&gt;列出所有打开的文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@ecs-centos-7 ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# lsof | more&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;COMMAND     PID   TID    USER   FD      TYPE             DEVICE  SIZE/OFF       NODE NAME
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemd       &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;          root  cwd       DIR              253,1      &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt;          &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; /
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemd       &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;          root  rtd       DIR              253,1      &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt;          &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; /
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemd       &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;          root  txt       REG              253,1   &lt;span style=&#34;color:#ae81ff&#34;&gt;1624520&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;530313&lt;/span&gt; /usr/lib/systemd/systemd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemd       &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;          root  mem       REG              253,1     &lt;span style=&#34;color:#ae81ff&#34;&gt;20064&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;528340&lt;/span&gt; /usr/lib64/libuuid.so.1.3.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;......
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;输出信息&#34;&gt;输出信息
&lt;/h2&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;COMMAND(进程名) 、PID(进程ID)、USER(所属用户)、DEVICE(设备ID)、SIZE/OFF(进程大小)、NODE(文件的Inode号)、NAME(路径/链接)
FD(文件描述符):
  cwd	当前目录
  txt	txt文件
  rtd	root目录
  mem	内存映射文件
TYPE(文件类型):
  DIR	目录
  REG	普通文件
  CHR	字符
  a_inode	Inode文件
  FIFO	管道或者socket文件
  netlink	网络
  unknown	未知
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;是&#34;&gt;是
&lt;/h2&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;lsof   /filepath/file # 查看谁正在使用某个文件
lsof +D /filepath/filepath2/ # 递归查看某个目录的文件信息 # 使用了+D，对应目录下的所有子目录和文件都会被列出
lsof | grep ‘/filepath/filepath2/’ # 比使用+D选项，遍历查看某个目录的所有文件信息 的方法
lsof  -u username # 列出某个用户打开的文件信息 # -u 选项，u其实是user的缩写
lsof -c mysql # 列出某个程序所打开的文件信息 # -c 选项将会列出所有以mysql开头的程序的文件，其实你也可以写成lsof | grep mysql,但是第一种方法明显比第二种方法要少打几个字符了
lsof -c mysql -c apache # 列出多个程序多打开的文件信息
lsof -u test -c mysql # 列出某个用户以及某个程序所打开的文件信息
lsof -u ^root # 列出除了某个用户外的被打开的文件信息 ^这个符号在用户名之前，将会把是root用户打开的进程不让显示
lsof -p 1 # 通过某个进程号显示该进行打开的文件
lsof -p 123,456,789 # 列出多个进程号对应的文件信息
lsof -p ^1 # 列出除了某个进程号，其他进程号所打开的文件信息
lsof -i # 列出所有的网络连接
lsof  -i tcp # 列出所有tcp 网络连接信息
lsof  -i udp # 列出所有udp网络连接信息
lsof -i :3306 # 列出谁在使用某个端口
lsof -i TCP:3306
lsof -i udp:55 # 列出谁在使用某个特定的udp端口
lsof -i tcp:80 # 特定的tcp端口
lsof  -a -u test -i # 列出某个用户的所有活跃的网络端口
lsof -N # 列出所有网络文件系统
lsof -u # 域名socket文件
lsof -g 5555 # 某个用户组所打开的文件信息
lsof -d description(like 2) # 根据文件描述列出对应的文件信息
lsof -d 2-3 # 根据文件描述范围列出文件信息
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;实用命令&#34;&gt;实用命令
&lt;/h2&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;lsof `which httpd` //那个进程在使用apache的可执行文件
lsof /etc/passwd //那个进程在占用/etc/passwd
lsof /dev/hda6 //那个进程在占用hda6
lsof /dev/cdrom //那个进程在占用光驱
lsof -c sendmail //查看sendmail进程的文件使用情况
lsof -c courier -u ^zahn //显示出那些文件被以courier打头的进程打开，但是并不属于用户zahn
lsof -p 30297 //显示那些文件被pid为30297的进程打开
lsof -D /tmp 显示所有在/tmp文件夹中打开的instance和文件的进程。但是symbol文件并不在列
lsof -u1000 //查看uid是100的用户的进程的文件使用情况
lsof -utony //查看用户tony的进程的文件使用情况
lsof -u^tony //查看不是用户tony的进程的文件使用情况(^是取反的意思)
lsof -i //显示所有打开的端口
lsof -i:80 //显示所有打开80端口的进程
lsof -i -U //显示所有打开的端口和UNIX domain文件
lsof -i UDP@[url]www.akadia.com:123 //显示那些进程打开了到www.akadia.com的UDP的123(ntp)端口的链接
lsof -i tcp@ohaha.ks.edu.tw:ftp -r //不断查看目前ftp连接的情况(-r，lsof会永远不断的执行，直到收到中断信号,+r，lsof会一直执行，直到没有档案被显示,缺省是15s刷新)
lsof -i tcp@ohaha.ks.edu.tw:ftp -n //lsof -n 不将IP转换为hostname，缺省是不加上-n参数
&lt;/code&gt;&lt;/pre&gt;</description>
        </item>
        
    </channel>
</rss>
