<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Command on 良宏</title>
        <link>/categories/command/</link>
        <description>Recent content in Command on 良宏</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Sat, 12 Oct 2024 11:42:47 +0800</lastBuildDate><atom:link href="/categories/command/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>hurl</title>
        <link>/post/tech/hurl/</link>
        <pubDate>Sat, 12 Oct 2024 11:42:47 +0800</pubDate>
        
        <guid>/post/tech/hurl/</guid>
        <description>&lt;h2 id=&#34;install&#34;&gt;Install
&lt;/h2&gt;&lt;p&gt;官网： &lt;a class=&#34;link&#34; href=&#34;https://hurl.dev&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://hurl.dev&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo pacman -S hurl
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;use&#34;&gt;Use
&lt;/h2&gt;&lt;p&gt;movies.hurl&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-hurl&#34; data-lang=&#34;hurl&#34;&gt;# 以下内容测试用例来自于官方教程
# 测试服务来自于官方提供的 docker 服务
# docker run --name movies -d --detach --publish 3000:3000 ghcr.io/jcamiel/hurl-express-tutorial:latest
#
# 测试方法：
#     hurl --test movies.hurl                      # 直接测试全部，输出测试结果，不要细节
#     hurl --verbose movies.hurl                   # 输出包含调试信息，请求细节以及响应头信息
#     hurl --very-verbose movies.hurl              # 输出包含调试信息，以及非常详细的请求和响应，甚至 libcurl 日志，响应时间等
#     hurl --error-format long --test movies.hurl  # 可以在有断言错误时输出错误详情，在CI/CD 时尤其有用
#     hurl --verbose --interactive movies.hurl     # 可以以互动的模式运行
#     hurl -i movies.hurl                          # 仅出HTTP头
#
# 使用变量:
#     hurl --variable host=http://localhost:3000 --test basic.hurl # 可以在内部使用 `GET {{host}}` 来指代要请求的地址，不必硬编码
#     hurl --variable host=http://localhost:3000 --test *.hurl     # 测试多个脚本
#
# 代理方法:
# 搭建代理:
#     mitmweb -p 8888 --web-port 8889 --web-open-browser
#     Web server listening at http://127.0.0.1:8889/
#     Proxy server listening at http://*:8888
# 使用代理:
#     hurl --proxy localhost:8888 basic.hurl






# Checking our home page:
GET http://localhost:3000

HTTP 200
[Asserts]
xpath &amp;#34;string(//head/title)&amp;#34; == &amp;#34;Movies Box&amp;#34;
xpath &amp;#34;//h3&amp;#34; count == 2
xpath &amp;#34;string((//h3)[1])&amp;#34; contains &amp;#34;Popular&amp;#34;
xpath &amp;#34;string((//h3)[2])&amp;#34; contains &amp;#34;Featured Today&amp;#34;
# Testing HTTP response headers:
header &amp;#34;Content-Type&amp;#34; == &amp;#34;text/html; charset=utf-8&amp;#34;
header &amp;#34;Set-Cookie&amp;#34; startsWith &amp;#34;x-session-id=&amp;#34;
cookie &amp;#34;x-session-id&amp;#34; exists
cookie &amp;#34;x-session-id[HttpOnly]&amp;#34; exists



# Check that we have a 404 response for broken links:
GET http://localhost:3000/not-found

HTTP 404
[Asserts]
header &amp;#34;Content-Type&amp;#34; == &amp;#34;text/html; charset=utf-8&amp;#34;
xpath &amp;#34;string(//h2)&amp;#34; == &amp;#34;Error&amp;#34;
xpath &amp;#34;string(//h3)&amp;#34; == &amp;#34;Not Found&amp;#34;



# Check our health API:
GET http://localhost:3000/api/health
[Options]
very-verbose: true
# use - to output on standard output, foo.bin to save on disk 
output: -
HTTP 200
[Asserts]
header &amp;#34;Content-Type&amp;#34; == &amp;#34;application/json; charset=utf-8&amp;#34;
jsonpath &amp;#34;$.status&amp;#34; == &amp;#34;RUNNING&amp;#34;
jsonpath &amp;#34;$.healthy&amp;#34; == true
jsonpath &amp;#34;$.operationId&amp;#34; exists



# Check search API:
GET http://localhost:3000/api/search?q=1982&amp;amp;sort=name

HTTP 200
[Asserts]
header &amp;#34;Content-Type&amp;#34; == &amp;#34;application/json; charset=utf-8&amp;#34;
jsonpath &amp;#34;$&amp;#34; count == 5
jsonpath &amp;#34;$[0].name&amp;#34; == &amp;#34;Blade Runner&amp;#34;
jsonpath &amp;#34;$[0].director&amp;#34; == &amp;#34;Ridley Scott&amp;#34;
jsonpath &amp;#34;$[0].release_date&amp;#34; == &amp;#34;1982-06-25&amp;#34;




# Check search API:
GET http://localhost:3000/api/search
[Options]
verbose: true
[QueryStringParams]
q: 1982
sort: name

HTTP 200
[Asserts]
header &amp;#34;Content-Type&amp;#34; == &amp;#34;application/json; charset=utf-8&amp;#34;
jsonpath &amp;#34;$&amp;#34; count == 5
jsonpath &amp;#34;$[0].name&amp;#34; == &amp;#34;Blade Runner&amp;#34;
jsonpath &amp;#34;$[0].director&amp;#34; == &amp;#34;Ridley Scott&amp;#34;
jsonpath &amp;#34;$[0].release_date&amp;#34; == &amp;#34;1982-06-25&amp;#34;




# Check search API:
GET http://localhost:3000/api/search
[QueryStringParams]
q: 1982
sort: name

HTTP 200
[Asserts]
header &amp;#34;Content-Type&amp;#34; == &amp;#34;application/json; charset=utf-8&amp;#34;
jsonpath &amp;#34;$&amp;#34; count == 5
jsonpath &amp;#34;$[0].name&amp;#34; == &amp;#34;Blade Runner&amp;#34;
jsonpath &amp;#34;$[0].director&amp;#34; == &amp;#34;Ridley Scott&amp;#34;
jsonpath &amp;#34;$[0].release_date&amp;#34; startsWith &amp;#34;1982&amp;#34;




# Check search API:
GET http://localhost:3000/api/search
[QueryStringParams]
q: 1982
sort: name

HTTP 200
[Asserts]
header &amp;#34;Content-Type&amp;#34; == &amp;#34;application/json; charset=utf-8&amp;#34;
jsonpath &amp;#34;$&amp;#34; count == 5
jsonpath &amp;#34;$[0].name&amp;#34; == &amp;#34;Blade Runner&amp;#34;
jsonpath &amp;#34;$[0].director&amp;#34; == &amp;#34;Ridley Scott&amp;#34;
jsonpath &amp;#34;$[0].release_date&amp;#34; regex /(\d{4})-\d{2}-\d{2}/ == &amp;#34;1982&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;csrf.hurl&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-hurl&#34; data-lang=&#34;hurl&#34;&gt;# https://hurl.dev/docs/tutorial/captures.html

# First, display the login page to capture
# the CSRF token (see https://en.wikipedia.org/wiki/Cross-site_request_forgery)
GET http://localhost:3000/login
HTTP 200
[Captures]
csrf_token: xpath &amp;#34;string(//input[@name=&amp;#39;_csrf&amp;#39;]/@value)&amp;#34;


# Log in user, using the captured CSRF token:
POST http://localhost:3000/login
[FormParams]
username: fab
password: 12345678
_csrf: {{csrf_token}}
HTTP 302
[Asserts]
header &amp;#34;Location&amp;#34; == &amp;#34;/my-movies&amp;#34;


# Follow redirection and open favorites:
GET http://localhost:3000/my-movies
HTTP 200
[Asserts]
xpath &amp;#34;string(//title)&amp;#34; == &amp;#34;My Movies&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;signup_ok.hurl&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-hurl&#34; data-lang=&#34;hurl&#34;&gt;# https://hurl.dev/docs/tutorial/security.html
# First we obtain an available username:
GET http://localhost:3000/api/usernames/available
HTTP 200
[Captures]
username: jsonpath &amp;#34;$.username&amp;#34;

# Create a new valid user: get the CSRF token the signup:
GET http://localhost:3000/signup
HTTP 200
[Captures]
csrf_token: xpath &amp;#34;string(//input[@name=&amp;#39;_csrf&amp;#39;]/@value)&amp;#34;


POST http://localhost:3000/signup
[Options]
location: true
[FormParams]
_csrf: {{csrf_token}}
username: {{username}}
name: Bob
email: {{username}}@example.net
password: 12345678
HTTP 200
[Asserts]
url endsWith &amp;#34;/my-movies&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;signup_fail.hurl&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-hurl&#34; data-lang=&#34;hurl&#34;&gt;# https://hurl.dev/docs/tutorial/security.html
#

# First we obtain an available username:
GET http://localhost:3000/api/usernames/available
HTTP 200
[Captures]
username: jsonpath &amp;#34;$.username&amp;#34;


# Create a new valid user: get the CSRF token the signup:
GET http://localhost:3000/signup
HTTP 200
[Captures]
csrf_token: xpath &amp;#34;string(//input[@name=&amp;#39;_csrf&amp;#39;]/@value)&amp;#34;
[Asserts]
xpath &amp;#34;//comment&amp;#34; count == 0     # Check that we don&amp;#39;t leak comments


POST http://localhost:3000/signup
[Options]
location: true
[FormParams]
_csrf: {{csrf_token}}
username: {{username}}
name: Bob
email: {{username}}@example.net
password: 12345678
HTTP 200
[Asserts]
url endsWith &amp;#34;/my-movies&amp;#34;


# Play some checks on signup form: username too short
# email already taken, invalid pattern for username
GET http://localhost:3000/signup
HTTP 200
[Captures]
csrf_token: xpath &amp;#34;string(//input[@name=&amp;#39;_csrf&amp;#39;]/@value)&amp;#34;


# Create a new user, username too short
POST http://localhost:3000/signup
[Options]
location: true
[FormParams]
_csrf: {{csrf_token}}
username: bo
name: Bob
email: bob78@example.net
password: 12345678
HTTP 200
[Asserts]
url endsWith &amp;#34;/signup&amp;#34;
xpath &amp;#34;string(//div[@class=&amp;#39;form-errors&amp;#39;])&amp;#34; contains &amp;#34;Username must be 3 to 32 chars long&amp;#34;


# Test CSRF is mandatory:
POST http://localhost:3000/signup
[FormParams]
username: bob
name: Bob
email: bob78@example.net
password: 12345678
HTTP 403
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;integration.sh&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/sh
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set -eu
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wait_for_url&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Testing &lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;GET %s\nHTTP 200&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; | hurl --retry &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$2&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &amp;gt;/dev/null
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Starting container&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run --name movies --rm --detach --publish 3000:3000 ghcr.io/jcamiel/hurl-express-tutorial:latest
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Waiting server to be ready&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wait_for_url &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Running Hurl tests&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hurl --variable host&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; --test integration/*.hurl
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Stopping container&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker stop movies
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;test.hurl&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-hurl&#34; data-lang=&#34;hurl&#34;&gt;GET http://httpbin.org/get
HTTP 200                                           # 隐式断言
Content-Type: application/json                     # 隐式断言
[Asserts]                                          # 显示断言
jsonpath &amp;#34;$.url&amp;#34; contains &amp;#34;http://httpbin.org/get&amp;#34;
# header &amp;#34;User-Agent&amp;#34; contains &amp;#34;hurl&amp;#34;

POST http://httpbin.org/post
HTTP 200                                           # 隐式断言
Content-Type: application/json                     # 隐式断言
[Asserts]                                          # 显示断言
jsonpath &amp;#34;$.url&amp;#34; contains &amp;#34;http://httpbin.org/post&amp;#34;
# header &amp;#34;User-Agent&amp;#34; contains &amp;#34;hurl&amp;#34;
&lt;/code&gt;&lt;/pre&gt;</description>
        </item>
        <item>
        <title>iptables</title>
        <link>/post/tech/iptables/</link>
        <pubDate>Wed, 03 Jul 2024 14:17:18 +0800</pubDate>
        
        <guid>/post/tech/iptables/</guid>
        <description>&lt;h2 id=&#34;介绍&#34;&gt;介绍
&lt;/h2&gt;&lt;p&gt;linux 环境下，使用 iptables 可以执行 netfilter 的复杂流量过滤逻辑。
包含 filter, nat, managle, raw, security 五个表，分别对应不同的网络层，传输层，应用层，网络层，安全层。一般使用 filter, nat 两个表最多。&lt;/p&gt;
&lt;h2 id=&#34;理解流量路径中的链&#34;&gt;理解流量路径中的链
&lt;/h2&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;网卡      -&amp;gt;                netfilter              -&amp;gt;        应用
网卡      -&amp;gt;  prerouting链 -&amp;gt;  -&amp;gt;    -&amp;gt; input链     -&amp;gt;        应用
             数据包抵达系统时    |    数据包目标是本机时
                              |forward链
                              |数据包目标不是本机只是经过本机时
网卡       &amp;lt;-  postrouting链 &amp;lt;-v  &amp;lt;-    &amp;lt;- output链           应用
             数据包离开系统时          数据包从本机出去时
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;filter 表管理 input,forward,output 三个链
至此，只要在对应的链里添加规则，即可管理有关本机的所有流量。&lt;/p&gt;
&lt;h2 id=&#34;理解链中添加规则&#34;&gt;理解链中添加规则
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;iptables --table filter --list &lt;span style=&#34;color:#75715e&#34;&gt;# 列出 filter 表中所有链&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;iptables --list &lt;span style=&#34;color:#75715e&#34;&gt;# 列出 filter 表(默认filter表)中所有链&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;iptables --table filter --list-rules &lt;span style=&#34;color:#75715e&#34;&gt;# 列出 filter 表中所有链的规则&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;iptables --table filter --append INPUT --source 192.168.3.20 --jump REJECT &lt;span style=&#34;color:#75715e&#34;&gt;# 添加规则，从192.168.3.20来的数据包，跳转到 REJECT 链，即拒绝&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 两次执行会添加两条规则，比如将 REJECT 改为 DROP，将会多一条 DROP 规则，最终会从上往下执行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 所以，如果想要删除第一条规则，避免后面添加的规则不受影响，可以先查看规则的行数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;iptables --table filter --list --line-numbers
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 然后执行删除命令，删除第一条规则&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;iptables --table filter --delete INPUT &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;查看规则&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;iptables --table filter --list --line-numbers
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;target     prot opt source               destination
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ACCEPT     tcp  --  anywhere             172.17.0.3           tcp dpt:cslistener
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# prot 表示协议，常见值有: tcp, udp, icmp, all&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# target 表示动作，常见值有: ACCEPT, DROP, REJECT, LOG, MARK, SNAT, DNAT, RETURN, JUMP&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# opt 表示选项，常见值有: dpt, sport, dport, sport, saddr, daddr,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;ip段的获取和处理&#34;&gt;IP段的获取和处理
&lt;/h2&gt;&lt;p&gt;查看 ipdeny.com 的 ip 段，通过 Country IP blocks 获取要屏蔽的国家地址段。
以印度为例，ipdeny.com 的 ip 段如下：
使用 aggregated 可以用更少的 IP 段，更高效的屏蔽工作。
下载了 aggregated 文件后，会发现，即使是使用 shell 来全部添加到 iptables 规则里，也会消耗不少CPU。 ipset 可以让我们更优雅的处理这个问题。&lt;/p&gt;
&lt;h2 id=&#34;ipset&#34;&gt;ipset
&lt;/h2&gt;&lt;p&gt;可以把众多IP地址段汇集到一个集合中，然后通过集合，集合可以生成唯一的哈希值，来添加到 iptables 规则里。
当为 iptables 添加 IP 地址时，只需要用这个哈希值来代表背后的IP地址段集合。会自动将 IP 地址添加到集合中。&lt;/p&gt;
&lt;h3 id=&#34;创建集合&#34;&gt;创建集合
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ipset create indiaip hash:net &lt;span style=&#34;color:#75715e&#34;&gt;# 因为我们要处理的是网络地址而不是主机名，所以使用 hash:net&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ipset list indiaip &lt;span style=&#34;color:#75715e&#34;&gt;# 查看集合，加入好的IP会在 Members 字段显示出来&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;编写脚本&#34;&gt;编写脚本
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#  cat block-india.sh&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ipset create indiaip hash:net -exist &lt;span style=&#34;color:#75715e&#34;&gt;# 如果存在就忽略，避免报错&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ipset flush indiaip &lt;span style=&#34;color:#75715e&#34;&gt;# 清空集合，避免重复添加&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;in-aggregated.zone&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -f in-aggregated.zone &lt;span style=&#34;color:#75715e&#34;&gt;# 删除旧的文件，保证下载的是最新文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget https://www.ipdeny.com/ipblocks/data/aggregated/in-aggregated.zone
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; $? -eq &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Download success&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; ip in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;cat in-aggregated.zone&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ipset add indiaip $ip -exist
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Download failed&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 添加规则&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 当访问来自印度的IP时，丢弃请求数据包&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;iptables &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--table filter &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--append INPUT &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--match set --match-set indiaip src &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;--jump DROP
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chmod +x block-india.sh
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ping -c3auth-dns-01.skyberbrroadband.co.in. &lt;span style=&#34;color:#75715e&#34;&gt;# ping  一个印度域名测试&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./block-india.sh &lt;span style=&#34;color:#75715e&#34;&gt;# 运行脚本&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ipset list indiaip | less &lt;span style=&#34;color:#75715e&#34;&gt;# 查看集合，加入好的IP会在 Members 字段显示出来&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ipset list indiaip | grep 103.130.110 &lt;span style=&#34;color:#75715e&#34;&gt;# 检查 ping 测试的 IP 是否在集合里&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;iptables --table filter --list --line-numbers &lt;span style=&#34;color:#75715e&#34;&gt;# 检查规则，如果有多于的规则，应及时删除&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ping -c3auth-dns-01.skyberbrroadband.co.in. &lt;span style=&#34;color:#75715e&#34;&gt;# 再次 ping  一个印度域名测试，ping 会 loss 100%&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;持久化&#34;&gt;持久化
&lt;/h3&gt;&lt;p&gt;重启服务后，像刚刚的设置方式 添加的 iptables 规则都会丢失，所以需要持久化。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ipset save &amp;gt; /etc/rules.ipset &lt;span style=&#34;color:#75715e&#34;&gt;# 将集合保存到文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;iptables-save &amp;gt; /etc/rules.iptables &lt;span style=&#34;color:#75715e&#34;&gt;# 将 iptables 规则保存到文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;iptables -L &lt;span style=&#34;color:#75715e&#34;&gt;# 查看 iptables 规则&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ipset list &lt;span style=&#34;color:#75715e&#34;&gt;# 查看集合&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ipset restore &amp;lt; /etc/rules.ipset &lt;span style=&#34;color:#75715e&#34;&gt;# 恢复集合&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;iptables-restore &amp;lt; /etc/rules.iptables &lt;span style=&#34;color:#75715e&#34;&gt;# 恢复 iptables 规则&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 如果不想把原来的内容覆盖掉，可以在 iptables-restore 前加上 --noflush 或者 -n 参数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 同理 ipset restore 也可以加上 -exist 参数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;net服务&#34;&gt;net服务
&lt;/h3&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# 域名
dns 解析的默认端口号是 53，所以可以做一条 iptables 规则去拦截 53 端口的请求
做一下 dns 的解析，然后能拿到一个 ip list，之后只要将 list 中所有的 ip 都传给 iptables 就 ok 了。
&lt;/code&gt;&lt;/pre&gt;</description>
        </item>
        <item>
        <title>dlv</title>
        <link>/post/tech/dlv/</link>
        <pubDate>Fri, 10 Nov 2023 15:54:47 +0800</pubDate>
        
        <guid>/post/tech/dlv/</guid>
        <description>&lt;p&gt;使用 dlv (Delve) 工具调试 Golang 程序。它是理解Go程序时 GDB 调试器的有效替代品。&lt;/p&gt;
&lt;h2 id=&#34;install&#34;&gt;Install
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# go install github.com/go-delve/delve/cmd/dlv@latest&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g&amp;#39;&lt;/span&gt; /etc/apk/repositories
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apk add go
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export GOPROXY&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;https://goproxy.cn,direct
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export CGO_ENABLED&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export GO111MODULE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;on
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;go install github.com/go-delve/delve/cmd/dlv@latest
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls -lah /root/go/bin/dlv
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;go version
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dlv version
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;use&#34;&gt;Use
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 开始&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dlv debug ./cmd/main.go
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dlv exec /opt/iam/bin/iam-apiserver
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 如果希望二进制文件被调试，在编译二进制文件时需要关闭内联优化：&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# go build -gcflags=all=&amp;#34;-N -l&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 如果不希望二进制文件被调试，则可以使用以下编译选项：&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# go build -ldflags &amp;#34;-s -w&amp;#34; # -s: 去掉符号信息；-w: 去掉 DWARF 调试信息。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dlv core &amp;lt;executable-file&amp;gt; &amp;lt;core-file&amp;gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 使用core文件启动调试，这种方式可以找出可执行文件core的原因&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 查看源码组&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;dlv&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; list main.main &lt;span style=&#34;color:#75715e&#34;&gt;# 定位 main包main 函数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;dlv&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; list main.init &lt;span style=&#34;color:#75715e&#34;&gt;# 定位 main包init&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;dlv&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; funcs fib &lt;span style=&#34;color:#75715e&#34;&gt;# 搜索函数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;dlv&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; vars main &lt;span style=&#34;color:#75715e&#34;&gt;# 查看 main包变量&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 添加断点&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;dlv&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; break ./main.go:10 &lt;span style=&#34;color:#75715e&#34;&gt;#b ./main.go:10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;dlv&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; b main.main
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;dlv&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; b main.init
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;dlv&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; list ./main.go:10 &lt;span style=&#34;color:#75715e&#34;&gt;#l ./main.go:10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;dlv&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; breakpoints &lt;span style=&#34;color:#75715e&#34;&gt;#bp # 查看设置了哪些断点&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 删除断点&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;dlv&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; clear &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 删除标识ID为1的断点&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;dlv&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; clearall &lt;span style=&#34;color:#75715e&#34;&gt;# 清除所有断点&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 调试断点(一旦设置断点，能用list命令查源代码)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;dlv&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;continue&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#c # 运行到下一个断点处&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;dlv&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; next &lt;span style=&#34;color:#75715e&#34;&gt;#n # 运行到源代码下一行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;dlv&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; step &lt;span style=&#34;color:#75715e&#34;&gt;#s # 进入到函数调用的内部&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;dlv&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; stepout &lt;span style=&#34;color:#75715e&#34;&gt;#so # 跳出函数调用内部&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;dlv&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; restart &lt;span style=&#34;color:#75715e&#34;&gt;#r # 在程序终止或准备重新开始调试时，重启程序，断点不丢失&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 退出调试&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;dlv&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; exit &lt;span style=&#34;color:#75715e&#34;&gt;# quit # q&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;我这里要查找的是使用 &lt;code&gt;https://github.com/eddycjy/fake-useragent&lt;/code&gt; 后，一开始很卡的原因(main函数前)，通过以下函数定位到了这个包&lt;/p&gt;&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GODEBUG&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;inittrace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;进而找到了&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// https://github.com/eddycjy/fake-useragent/blob/master/b.go#L30&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;defaultBrowser&lt;/span&gt; = &lt;span style=&#34;color:#a6e22e&#34;&gt;NewBrowser&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;Client&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;MaxPage&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;setting&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;BROWSER_MAX_PAGE&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;Delay&lt;/span&gt;:   &lt;span style=&#34;color:#a6e22e&#34;&gt;setting&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;HTTP_DELAY&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;Timeout&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;setting&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;HTTP_TIMEOUT&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}, &lt;span style=&#34;color:#a6e22e&#34;&gt;Cache&lt;/span&gt;{})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NewBrowser&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;client&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Client&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;cache&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Cache&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;browser&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;maxPage&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setting&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;GetMaxPage&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;client&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;MaxPage&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;delay&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setting&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;GetDelay&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;client&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Delay&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;timeout&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setting&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;GetTimeout&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;client&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Timeout&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;browser&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;Client&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;Client&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#a6e22e&#34;&gt;MaxPage&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;maxPage&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#a6e22e&#34;&gt;Delay&lt;/span&gt;:   &lt;span style=&#34;color:#a6e22e&#34;&gt;delay&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#a6e22e&#34;&gt;Timeout&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;timeout&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;Cache&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;Cache&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#a6e22e&#34;&gt;UpdateFile&lt;/span&gt;: &lt;span style=&#34;color:#a6e22e&#34;&gt;cache&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;UpdateFile&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;load&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;browser&lt;/span&gt;) &lt;span style=&#34;color:#a6e22e&#34;&gt;load&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;browser&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;fileCache&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cache&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;NewFileCache&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;cache&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;GetTempDir&lt;/span&gt;(), &lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Sprintf&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;setting&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;TEMP_FILE_NAME&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;setting&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;VERSION&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;fileExist&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fileCache&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;IsExist&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Fatalf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fileCache.IsExist err: %v&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#75715e&#34;&gt;// handle cache.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;b&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;UpdateFile&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#a6e22e&#34;&gt;isCache&lt;/span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;bool&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#a6e22e&#34;&gt;cacheContent&lt;/span&gt; []&lt;span style=&#34;color:#66d9ef&#34;&gt;byte&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#a6e22e&#34;&gt;m&lt;/span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;map&lt;/span&gt;[&lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;][]&lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fileExist&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#a6e22e&#34;&gt;cacheContent&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; = &lt;span style=&#34;color:#a6e22e&#34;&gt;fileCache&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Read&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Fatalf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fileCache.Read err: %v&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#a6e22e&#34;&gt;isCache&lt;/span&gt; = &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		} &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#a6e22e&#34;&gt;rawCache&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;cache&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;NewRawCache&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;setting&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;CACHE_URL&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;fmt&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Sprintf&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;setting&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;TEMP_FILE_NAME&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;setting&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;CACHE_VERSION&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#a6e22e&#34;&gt;rawResp&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;rawExist&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;err&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rawCache&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Get&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;而后发现&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// https://github.com/eddycjy/fake-useragent/blob/master/setting/setting.go#L13&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;VERSION&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.2.0&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;BROWSER_URL&lt;/span&gt;            = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://developers.whatismybrowser.com/useragents/explore/%s/%s/%d&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;BROWSER_MAX_PAGE&lt;/span&gt;       = &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;BROWSER_ALLOW_MAX_PAGE&lt;/span&gt; = &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;CACHE_VERSION&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.2.0&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;CACHE_URL&lt;/span&gt;     = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://raw.githubusercontent.com/EDDYCJY/fake-useragent/v0.2.0/static/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;HTTP_TIMEOUT&lt;/span&gt;         = &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Second&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;HTTP_DELAY&lt;/span&gt;           = &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Millisecond&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;HTTP_ALLOW_MIN_DELAY&lt;/span&gt; = &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;time&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;Millisecond&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;TEMP_FILE_NAME&lt;/span&gt;      = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fake_useragent_%s.json&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;TEMP_FILE_TEST_NAME&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fake_useragent_test_%s.json&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;推荐使用这个包:&lt;code&gt;https://github.com/brianvoe/gofakeit&lt;/code&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>vultr</title>
        <link>/vultr/</link>
        <pubDate>Tue, 20 Sep 2022 19:54:47 +0800</pubDate>
        
        <guid>/vultr/</guid>
        <description>&lt;h2 id=&#34;介绍&#34;&gt;介绍
&lt;/h2&gt;&lt;p&gt;Vultr提供的CLI命令行工具采用Golang语言编写，提供的命令行可以完成绝大部分操作，包括：vps的创建、删除、重装等，甚至你可以修改修改账号的用户名、密码等。&lt;/p&gt;
&lt;h2 id=&#34;安装命令行&#34;&gt;安装命令行
&lt;/h2&gt;&lt;p&gt;安装 Vultr-CLI 命令行有多种方法：&lt;/p&gt;
&lt;h3 id=&#34;github安装&#34;&gt;github安装
&lt;/h3&gt;&lt;p&gt;前往 &lt;a class=&#34;link&#34; href=&#34;https://github.com/vultr/vultr-cli/releases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;github releases&lt;/a&gt; 下载安装对应操作系统的文件。&lt;/p&gt;
&lt;h3 id=&#34;源码安装&#34;&gt;源码安装
&lt;/h3&gt;&lt;p&gt;安装前确保你已经安装好了Golang。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;go get -u github.com/vultr/vultr-cli
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;配置api-key&#34;&gt;配置api key
&lt;/h2&gt;&lt;p&gt;首先登陆 Vultr 后台，右上角获取你的 api key，然后在下方白名单允许所有 ipv4, ipv6 可以访问。&lt;/p&gt;
&lt;p&gt;将 api key 添加到系统环境变量里，vultr-cli 工具在使用时会自动查找 VULTR_API_KEY 变量并使用。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;export VULTR_API_KEY=your_api_key
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;export只对当前 bash 环境有效，下次使用再重新导入比较麻烦。我们可以变量添加到 /etc/profile 文件里，或者使用 Vultr-CLI 提供的配置文件里。默认的配置文件路径 &lt;code&gt;~/.vultr-cli.yaml&lt;/code&gt;。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;api-key: your-api-key
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;创建sshkey&#34;&gt;创建sshkey
&lt;/h2&gt;&lt;p&gt;现在最新版的 Vultr CLI 创建 vps 不再返回root密码，也不能使用参数添加root密码，官方的意思很明确，就是推荐使用sshkey，所以我们需要先创建 sshkey。如果不创建sshkey，那么创建 vps 后的root密码只能登陆 Vultr 后台查看了。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;vultr-cli ssh create --name ssh-cli --key SSH public key
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;name：ssh名，自定义&lt;/li&gt;
&lt;li&gt;key：公钥内容，非路径&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回示例：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;{
    &amp;#34;ssh_key&amp;#34;: {
    &amp;#34;id&amp;#34;: &amp;#34;cb676a46-66fd-4dfb-b839-443f2e6c0b60&amp;#34;,
    &amp;#34;date_created&amp;#34;: &amp;#34;2020-10-10T01:56:20+00:00&amp;#34;,
    &amp;#34;name&amp;#34;: &amp;#34;ssh-cli&amp;#34;,
    &amp;#34;ssh_key&amp;#34;: &amp;#34;ssh-rsa AA... user@example.com&amp;#34;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;创建 ssh 后，记住此 ssh 的 id，之后创建 vps 需要通过 id 来指定 ssh。&lt;/p&gt;
&lt;h2 id=&#34;创建密码&#34;&gt;创建密码
&lt;/h2&gt;&lt;p&gt;官方虽然明确表示 password 无法查看，相比较而言密钥登陆是安全的更多，但他们是不是忽略了一个问题：Windows系统。当你创建 Windows系统 就知道有多难受，password看不到、密钥还没用！密码要去控制台查看是不是“有悖” CLI？这里提供一个“绕过”它的方法。
Vultr 提供 Startup Scripts 方法，一段创建后运行的脚本，通过修改密码来达到获取密码。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;vultr-cli script -n script-name -s script-string -t script-type
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;参数n：脚本名&lt;/li&gt;
&lt;li&gt;参数s：脚本内容以base64加密&lt;/li&gt;
&lt;li&gt;参数t：可选值 pxe 和 boot，默认boot&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果我们要修改 root 密码为 Abcd1234，那么我们的shell脚本可以这么写：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;echo root:Abcd1234 | chpasswd root
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后我们将其转换成base64加密&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;echo &amp;#34;echo root:Abcd1234 | chpasswd root&amp;#34; | base64
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;得到结果：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ZWNobyByb290OkFiY2QxMjM0Cg==
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;那么这段 Startup Script 可以写成：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;vultr-cli script -n setpasswd -s ZWNobyByb290OkFiY2QxMjM0Cg== -t boot
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;创建后返回这条脚本的一些基本信息，记住脚本的 id。现在添加 script-id 参数通过添加脚本来创建一台实例&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;vultr-cli instance create --region region-id --plan plan-id --os os-id --ssh-keys ssh-id --script-id script-id --label label
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;上面命令的各项参数参考下方介绍。创建后我们使用 ssh 命令快速验证一下 root 密码是否生效。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ssh -p 22 root@ip
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;创建vps&#34;&gt;创建vps
&lt;/h2&gt;&lt;p&gt;基本命令如下：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;vultr-cli instance create --region region-id --plan plan-id --os os-id --ssh-keys ssh-id --label label
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;region：指定地区&lt;/li&gt;
&lt;li&gt;plan：指定套餐，套餐对应配置&lt;/li&gt;
&lt;li&gt;os：操作系统&lt;/li&gt;
&lt;li&gt;ssh-keys：ssh的id&lt;/li&gt;
&lt;li&gt;label：标签&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过如上参数，我们就可以正常创建一台 vps 了，非常方便。创建vps后的返回里不带 ip 地址，我们需要下面的命令查看：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;vultr-cli instance list
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果我们创建了比较多的 vps，那么我们指定 label 就可以派上用场了，通过 label 即可快速找到刚创建的 vps。&lt;/p&gt;
&lt;h3 id=&#34;地区&#34;&gt;地区
&lt;/h3&gt;&lt;p&gt;Vultr 一共有17个数据中心，美国数据中心就占了8个。地区及其对应的 id 只能通过 api 获取，这里我获取整理了一下，方便使用（地址：id）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;荷兰阿姆斯特丹：ams&lt;/li&gt;
&lt;li&gt;法国巴黎：cdg&lt;/li&gt;
&lt;li&gt;德国法兰克福：fra&lt;/li&gt;
&lt;li&gt;韩国首尔：icn&lt;/li&gt;
&lt;li&gt;英国伦敦：lhr&lt;/li&gt;
&lt;li&gt;日本东京：nrt&lt;/li&gt;
&lt;li&gt;美国硅谷：sjc&lt;/li&gt;
&lt;li&gt;美国芝加哥：ord&lt;/li&gt;
&lt;li&gt;美国迈亚密：mia&lt;/li&gt;
&lt;li&gt;美国洛杉矶：lax&lt;/li&gt;
&lt;li&gt;美国达拉斯：dfw&lt;/li&gt;
&lt;li&gt;美国新泽西：ewr&lt;/li&gt;
&lt;li&gt;美国亚特兰大：atl&lt;/li&gt;
&lt;li&gt;美国西雅图：Seattle&lt;/li&gt;
&lt;li&gt;新加坡：sgp&lt;/li&gt;
&lt;li&gt;澳洲悉尼：syd&lt;/li&gt;
&lt;li&gt;加拿大多伦多：yto&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;套餐&#34;&gt;套餐
&lt;/h3&gt;&lt;p&gt;plan 指的是价格，在这里它更多意味“配置”，因为不同套餐价格对应不同配置。整理如下（id：配置）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;vc2-1c-1gb：1G内存、1vCPU、25G SSD、1T流量，价格 $5&lt;/li&gt;
&lt;li&gt;vc2-1c-2gb：2G内存、1vCPU、55G SSD、2T流量，价格 $10&lt;/li&gt;
&lt;li&gt;vc2-2c-4gb：4G内存、2vCPU、80G SSD、3T流量，价格 $20&lt;/li&gt;
&lt;li&gt;vc2-4c-8gb：8G内存、4vCPU、160G SSD、4T流量，价格 $40&lt;/li&gt;
&lt;li&gt;vc2-8c-32gb：32G内存、8vCPU、640G SSD、6T流量，价格 $160&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;操作系统&#34;&gt;操作系统
&lt;/h3&gt;&lt;p&gt;os参数指定的操作系统，跟 os 相近的是 iso 参数，它指定的是镜像。下面是我整理的操作系统及其对应id（id：操作系统）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;124：Windows 2012 R2 x64&lt;/li&gt;
&lt;li&gt;240：Windows 2016 x64&lt;/li&gt;
&lt;li&gt;371：Windows 2019 x64&lt;/li&gt;
&lt;li&gt;167：CentOS 7 x64&lt;/li&gt;
&lt;li&gt;381：CentOS 7 SELinux x64&lt;/li&gt;
&lt;li&gt;194：Debian 8 i386 (jessie)&lt;/li&gt;
&lt;li&gt;352：Debian 10 x64 (buster)&lt;/li&gt;
&lt;li&gt;244：Debian 9 x64 (stretch)&lt;/li&gt;
&lt;li&gt;216：Ubuntu 16.04 i386&lt;/li&gt;
&lt;li&gt;270：Ubuntu 18.04 x64&lt;/li&gt;
&lt;li&gt;387：Ubuntu 20.04 x64&lt;/li&gt;
&lt;li&gt;413：Ubuntu 20.10 x64&lt;/li&gt;
&lt;li&gt;445：Ubuntu 21.04 x64&lt;/li&gt;
&lt;li&gt;230：FreeBSD 11 x6&lt;/li&gt;
&lt;li&gt;327：FreeBSD 12 x64&lt;/li&gt;
&lt;li&gt;401：CentOS 8 Stream x64&lt;/li&gt;
&lt;li&gt;362：CentOS 8 x64&lt;/li&gt;
&lt;li&gt;389：Fedora 32 x6&lt;/li&gt;
&lt;li&gt;391：Fedora CoreOS&lt;/li&gt;
&lt;li&gt;415：Fedora 33 x64&lt;/li&gt;
&lt;li&gt;446：Fedora 34 x64&lt;/li&gt;
&lt;li&gt;412：OpenBSD 6.8 x64&lt;/li&gt;
&lt;li&gt;450：OpenBSD 6.9 x64&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;更换ip地址&#34;&gt;更换ip地址
&lt;/h2&gt;&lt;p&gt;Vultr 提供一项名为 保留ip（Reserved IP）的功能。当我们销毁一台 vps ，跟随这台 vps 的 ip 地址也将一同“丢失”，保留 ip 可以允许我们销毁 vps 而保留 ip。借助 保留ip 和 备份 功能，我们可以实现同地区 vps 的迁移而不丢失数据（备份）和ip（保留ip）。
除了它常规的用法，保留ip 其实也可以充当动态ip的功能，实现更换 ip地址 目的。接触过 aws 和阿里云 的用户应该对 动态IP 不陌生，动态ip 并不是完全意义上的 “更换ip”。
举个例子：现在创建一台 vps A，创建的同时会自带一个 ip地址，我们将其自带的ip地址称为固定ip。创建一个 保留ip，因为它没有依附任何实例，那么保留ip可以看作是动态ip。我们可以将动态ip绑定到 vps A上作为其第二个ip地址，也可以解绑然后删除。虽然 vps A 自带的固定ip可以转换成动态ip，但是它还是属于 vps A，只有当 vps A 被销毁后，这种 “隐形绑定” 关系才被解除。&lt;/p&gt;
&lt;h3 id=&#34;创建一个新的保留ip&#34;&gt;创建一个新的保留ip
&lt;/h3&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;vultr-cli reserved-ip create -r region-id -l label -t v4
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;参数r：地区id&lt;/li&gt;
&lt;li&gt;参数l：标签&lt;/li&gt;
&lt;li&gt;参数t：ip类型，只能是v4或者v6&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;需要注意的是ip地址有 “区域限制”，你必需指定要创建哪个地址的ip，ip也只能绑定在同地区的vps上。创建之后返回保留ip的信息，包括id、地区、ip地址等。&lt;/p&gt;
&lt;h3 id=&#34;绑定到实例&#34;&gt;绑定到实例
&lt;/h3&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;vultr-cli reserved-id attach &amp;lt;reservedIPID&amp;gt; -i instance-id
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;reservedIPID：保留ip的id&lt;/li&gt;
&lt;li&gt;instance-id：实例id&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;绑定之后我们需要重启这台实例。必需要用 Vultr-CLI 命令行工具重启，在实例里 &lt;code&gt;reboot&lt;/code&gt; 是无效的。&lt;/p&gt;
&lt;h3 id=&#34;配置多ip&#34;&gt;配置多ip
&lt;/h3&gt;&lt;p&gt;重启后还需要手动配置网卡，才能使绑定的ip可用。不同的系统配置方式不同，具体方法参见 单网卡多ip 的配置方式，或者参考 Vultr 给出的教程：
&lt;a class=&#34;link&#34; href=&#34;https://www.mebi.me/go/aHR0cHM6Ly93d3cudnVsdHIuY29tL2RvY3MvYWRkLXNlY29uZGFyeS1pcHY0LWFkZHJlc3M&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;/docs/add-secondary-ipv4-address&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下面是我写的，仅供参考。系统是 debian 10，默认的网卡配置：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;auto lo
iface lo inet loopback

allow-hotplug ens3
iface ens3 inet dhcp
iface ens3 inet6 auto
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可以看到 Vultr 默认使用 DHCP 自动配置网络，我们要将其改成手动配置。先将网卡配置文件备份，备份是个好习惯。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cp /etc/network/interfaces /etc/network/interfaces.bak
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;修改 &lt;code&gt;/etc/network/interfaces&lt;/code&gt; 配置文件：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;auto lo
iface lo inet loopback

auto ens3
iface ens3 inet static
address ipv4
netmask xx.xx.xx.xx
gateway xx.xx.xx.xx
dns-nameservers 108.61.10.10
post-up ip route add 169.254.0.0/16 dev ens3

auto ens3:1
iface ens3:1 inet static
address 保留ip
netmask 255.255.255.255
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;上面的 ipv4 就是 vps A 的固定ip，使用 &lt;code&gt;instance get&lt;/code&gt; 命令不仅可以看到 ipv4，还能看到子网掩码（netmask）和网关（gateway）信息。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;vultr-cli instance get instance-id
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后重启网络。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;systemctl restart networking.service
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使用 &lt;code&gt;ip a&lt;/code&gt; 命令，可以看到 ens3 网卡下面两个ip都在了，现在 ping 绑定到保留地址，发现通了。&lt;/p&gt;
&lt;h3 id=&#34;解绑&#34;&gt;解绑
&lt;/h3&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;vultr-cli reserved-id detach &amp;lt;reservedIPID&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;解绑之后 保留ip 可以绑定到任何其他同地区实例上，实例需要恢复网卡配置文件然后使用命令行重启。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mv /etc/network/interfaces.bak /etc/network/interfaces
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;价格&#34;&gt;价格
&lt;/h3&gt;&lt;p&gt;保留ip 的价格为每小时$0.0003，或者每月$2，现在很多博客说是$3/月的该更新了。如果不想要，解绑后删除就可以停止收费。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;vultr-cli reserved-ip delete &amp;lt;reservedIPID&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;其他操作&#34;&gt;其他操作
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;列出所有创建的vps&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;vultr-cli instance list
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这里可以看到 vps 的一些重要信息，除了 ip 外，我们还可以看到 id，这个 id 就是 instance-id。如果要对某个 vps 进行操作，就要用到这个 id。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;删除vps&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;vultr-cli instance delete instance-id
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;重启vps&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;vultr-cli instance restart instance-id
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;开机&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;vultr-cli instance start instance-id
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;关机&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;vultr-cli instance stop instance-id
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;重装&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;vultr-cli instance reinstall instance-id
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;获取具体信息&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;vultr-cli instance get instance-id
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;添加标签&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;vultr-cli instance label instance-id -l label-name
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;升级套餐&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;vultr-cli instance plan upgrade instance-id -p plan-id
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;更改操作系统&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;vultr-cli instance os change instance-id -o os-id
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;通过 CLI 命令行无法更换 ip 地址，还是需要先创建一个 vps，再删除原来的 vps 来达到目的。&lt;/p&gt;
&lt;h2 id=&#34;install&#34;&gt;Install
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get install apache2-utils
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;use&#34;&gt;Use
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./ab -c &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; -n &lt;span style=&#34;color:#ae81ff&#34;&gt;10000&lt;/span&gt; http://127.0.0.1/index.php
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#-c 100 即：每次并发100个&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#-n 10000 即： 共发送10000个请求&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#用ab测试时，最大并发不能超过1024，其实ab本身没有做这个限制，而是系统限制每个进程打开的最大的文件数为1024&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#ulimit -a&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#ulimit -n 1020&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#-n 可以指定最大请求数，但是也不能超过50000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#-v n   当n&amp;gt;=2 时，可以显示发送的http请求头，和响应的http头及内容； 压力测试时不要这么做&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>readline</title>
        <link>/post/tech/readline/</link>
        <pubDate>Mon, 19 Sep 2022 08:07:25 +0800</pubDate>
        
        <guid>/post/tech/readline/</guid>
        <description>&lt;p&gt;光标移动
快捷键	描述
Ctrl + a	移动光标到行首
Ctrl + e	移动光标到行尾
Alt + b	移动光标后退一个单词（词首）
Alt + f	移动光标前进一个单词（词首）
Ctrl + f	光标前进一个字母
Ctrl + b	光标后退一个字母
Ctrl + xx	当前位置与行首之间光标切换&lt;/p&gt;
&lt;p&gt;剪切粘贴
快捷键	描述
Ctrl + k	删除从光标到行尾
Ctrl + u	删除从光标到行首
Ctrl + w	从光标向前删除一个单词
Alt + d	从光标向后删除一个单词
Ctrl + d	删除光标下一个字母
Ctrl + h	删除光标前一个字母
Alt + t	swap(当前单词, 上一个单词)
Ctrl + t	swap(当前字母, 上一个字母)
Ctrl + y	粘贴上一次删除的文本&lt;/p&gt;
&lt;p&gt;大小写转换
快捷键	描述
Alt + c	大写当前字母，并移动光标到单词尾
Alt + u	大写从当光标到单词尾
Alt + l	小写从当光标到单词尾&lt;/p&gt;
&lt;p&gt;历史命令
快捷键	描述
Ctrl + r	向后搜索历史命令
Ctrl + g	退出搜索
Ctrl + p	历史中上一个命令
Ctrl + n	历史中下一个命令
Alt + .	上一个命令的最后一个单词&lt;/p&gt;
&lt;p&gt;终端指令
快捷键	描述
Ctrl + l	清屏
Ctrl + s	停止输出（在Zsh中为向前搜索历史命令）
Ctrl + q	继续输出
Ctrl + c	终止当前命令
Ctrl + z	挂起当前命令
Ctrl + d	结束输入（产生一个EOF）&lt;/p&gt;
</description>
        </item>
        <item>
        <title>direnv</title>
        <link>/post/tech/direnv/</link>
        <pubDate>Fri, 08 Jul 2022 08:01:47 +0800</pubDate>
        
        <guid>/post/tech/direnv/</guid>
        <description>&lt;h1 id=&#34;install&#34;&gt;install
&lt;/h1&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install direnv
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;eval &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;direnv hook bash&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;eval &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;direnv hook zsh&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 目前没有发现 bash 和 zsh 的区别&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;use&#34;&gt;use
&lt;/h1&gt;&lt;p&gt;保存以下内容为 &lt;code&gt;.envrc&lt;/code&gt; 放在需要的目录下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export myenv&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;myenv1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\e[1;34m##################################################\e[0m&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\e[1;34m#               Welcome to &lt;/span&gt;$myenv&lt;span style=&#34;color:#e6db74&#34;&gt;                #\e[0m&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\e[1;34m##################################################\e[0m&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>fdleak</title>
        <link>/post/pipe/</link>
        <pubDate>Wed, 06 Jul 2022 00:00:00 +0000</pubDate>
        
        <guid>/post/pipe/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;在进行网络编程时，正确关闭资源是一件很重要的事。在高并发场景下，未正常关闭的资源数逐渐积累会导致系统资源耗尽，影响系统整体服务能力，但是这件重要的事情往往又容易被忽视。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;fd&#34;&gt;fd
&lt;/h1&gt;&lt;p&gt;在linux系统中有“一切皆文件”的概念。打开和创建普通文件、Socket（套接字）、Pipeline（管道）等，在linux内核层面都需要新建一个文件描述符来进行状态跟踪和使用。我们使用HttpClient发起请求，其底层需要首先通过系统内核创建一个Socket连接，相应地就需要打开一个fd。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为什么我们的应用最多只能创建655350个fd呢？这个值是如何控制的，能否调整呢？
linux系统对打开文件数有多个层面的限制:
1)限制单个Shell进程以及其派生子进程能打开的&lt;code&gt;fd&lt;/code&gt;数量。用&lt;code&gt;ulimit&lt;/code&gt;命令能查看到这个值。
2）限制每个user能打开的文件总数。具体调整方法是修改&lt;code&gt;/etc/security/limits.conf&lt;/code&gt;文件，比如下图中的红框部分就是限制了&lt;code&gt;userA&lt;/code&gt;用户只能打开&lt;code&gt;65535&lt;/code&gt;个文件，&lt;code&gt;userB&lt;/code&gt;用户只能打开&lt;code&gt;655350&lt;/code&gt;个文件。由于我们的应用在服务器上是以&lt;code&gt;userB&lt;/code&gt;身份运行的，自然就受到这里的限制，不允许打开多于&lt;code&gt;655350&lt;/code&gt;个文件。
3）系统层面允许打开的最大文件数限制，可以通过 &lt;code&gt;cat /proc/sys/fs/file-max&lt;/code&gt; 查看。
错误的管理方式导致连接使用完成后没有成功断开，连接长时间保持CLOSE_WAIT状态，则fd需要继续指向这个套接字信息，无法被回收，进而出现了故障。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h1 id=&#34;管道&#34;&gt;管道
&lt;/h1&gt;&lt;p&gt;无名管道（一般说的管道就是指无名管道）
无名管道是一种特殊类型的文件，在内核空间中对应的资源是一段内存空间，内核在这段空间中以循环队列的方式临时存入一个进程发送给另一个进程的信息，这段内核空间完全由操作系统管理和维护，应用程序只需要也只能通过系统调用来访问它。
无名管道和普通文件有很大的差异：无名管道的内核资源在通信的两个进程退出后会自动释放。而普通文件如果不显示的删除会一直存在&lt;/p&gt;
&lt;p&gt;特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;仅用于亲缘关系进程中&lt;/li&gt;
&lt;li&gt;单向数据流：单向指的是，只能读端读，写端写&lt;/li&gt;
&lt;li&gt;大小有限制（一般是65536）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关于管道的读写
（1）读管道：&lt;/p&gt;
&lt;p&gt;管道中有数据，read返回实际读到的字节数。
管道中无数据：
①管道写端被全部关闭，read返回0
② 写端没有全部被关闭，read阻塞等待(不久的将来可能有数据抵达，此时会让出cpu资源)
（2）写管道：&lt;/p&gt;
&lt;p&gt;管道读端全部被关闭， 进程异常终止 (操作系统发出SIGPIPE信号)
管道读端没有全部关闭：
①管道已满，write阻塞。无名管道的大小为64K
②管道未满，write将数据写入，并返回实际写入的字节数。&lt;/p&gt;
&lt;h2 id=&#34;创建和关闭-pipeclose&#34;&gt;创建和关闭 pipe/close
&lt;/h2&gt;&lt;p&gt;pipe 最常见的地方是shell中，比如：&lt;code&gt;ls | wc -l&lt;/code&gt;。该命令，shell创建了两个进程来分别执行ls和ws(通过fork()和exec()完成)，如下：&lt;/p&gt;
&lt;p&gt;使用管道连接两个进程&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;                                管道
    ls    stdout    ==&amp;gt;     字节流   单向    ==&amp;gt;    stdin   wc
          (fd 1)                                    (fd 0)
                管道写入端               管道读取端
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可以将管道看成是一组水管，它允许数据从一个进程流向另一个进程(这也是管道名称的由来)
两个进程连接到了管道上，这样写入进程(ls)就将其标准输出(文件描述符为1)连接到来管道的写入段，读取进程(wc)就将其标准输入(文件描述符为0)连接到管道的读取端。实际上，这两个进程并不知道管道的存在，它们只是从标准文件描述符中读取和写入数据。shell必须要完成相关的工作。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;一个管道是一个字节流&lt;/p&gt;
&lt;p&gt;管道是一个字节流&amp;mdash;&amp;mdash;即使用管道时没有消息或者消息边界的概念&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;管道中读取数据的进程可以读取任意大小的数据块，而不管写入进程写入管道的数据块的大小是什么&lt;/li&gt;
&lt;li&gt;通过管道传递的数据是顺序的，读取出来的字节顺序和写入时完全一致&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;在管道中无法使用lseek()来随机的访问数据&lt;/p&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;从管道中读取数据&lt;/p&gt;
&lt;p&gt;为空的管道中读取数据会被阻塞直至有至少一字节被写入到管道中
如果管道写入端被关闭，那么从管道中读取数据的进程在读完管道中剩余的所有数据之后将会看到文件结束（即 read()返回 0）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;管道是单向的&lt;/p&gt;
&lt;p&gt;传递方向是单向的，只能一端写入，另一端读取
在其他一些 UNIX 实现上——特别是那些从 System V Release 4 演化而来的系统——管道是双向的（所谓的流管道）。双向管道并没有在任何 UNIX 标准中进行规定，因此即使在提供了双向管道的实现上最好也避免依赖这种语义。作为替代方案，可以使用 UNIX domain 流socket 对（通过socketpair()系统调用来创建），它提供了一种标准的双向通信机制，并且其语义与流管道是等价的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可以确保写入不超过 &lt;code&gt;pipe_buf&lt;/code&gt; 字节的操作是原子的&lt;/p&gt;
&lt;p&gt;如果多个进程写入同一个管道，那么如果它们在一个时刻写入的数据量不超过PIPE_BUF字节，那么久可以确保写入的数据不会发生相互混合的情况。
SUSv3 要求 PIPE_BUF 至少为_POSIX_PIPE_BUF（512）。一个实现应该定义 PIPE_BUF（在&amp;lt;limits.h&amp;gt;中）并/或允许调用fpathconf(fd,_PC_PIPE_BUF)来返回原子写入操作的实际上限。
不同 UNIX 实现上的 PIPE_BUF 不同，如在 FreeBSD 6.0 其值为 512 字节，在 Tru64 5.1 上其值为 4096 字节，在 Solaris 8 上其值为 5120 字节。在 Linux 上，PIPE_BUF 的值为 4096。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;写入管道的数据块的大小超过了PIPE_BUF字节，则内核可能会将数据分割成几个较小的片段来传输，在读者从管道中消耗数据时再附加上后继的数据(write()调用会阻塞直到所有数据被写入到管道为止)。&lt;/li&gt;
&lt;li&gt;当只有一个进程向管道写入数据时（通常的情况），PIPE_BUF的取值就没有关系了。&lt;/li&gt;
&lt;li&gt;但如果有多个写入进程，那么大数据块的写入可能会被分解成任意大小的段（可能会小于 PIPE_BUF 字节），并且可能会出现与其他进程写入的数据交叉的现象。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;只有在数据被传输到管道的时候PIPE_BUF限制才会起作用。当写入的数据达到PIPE_BUF字节时，write()会在必要的时候阻塞知道管道中的可用空间足以院子的完成此操作。如果写入的数据大于PIPE_BUF字节，那么write()会尽可能的多传输数据以充满整个管道，然后阻塞直到一些读取进程从管道中移除了数据。如果此类阻塞的write()被一个信号处理器中断了，那么这个调用会被解除阻塞并返回成功传输到管道中的字节数，这个字节数会少于请求写入的字节数（所谓的部分写入）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在 Linux 2.2 上，向管道写入任意数量的数据都是原子的，除非写入操作被一个信号处理器中断了。在 Linux 2.4 以及后续的版本上，写入数据量大于 PIPE_BUF 字节的所有操作都可能会与其他进程的写入操作发生交叉&lt;/p&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;管道的容量是有限的&lt;/p&gt;
&lt;p&gt;管道其实是一个在内核内存中维护的缓冲器，这个缓冲器的存储能力是有限的。一旦管道被填满之后，后继向管道的写入操作就会被阻塞直到读者从管道中移除了一些数据为止。&lt;/p&gt;
&lt;p&gt;SUSv3 并没有规定管道的存储能力。在早于 2.6.11 的 Linux 内核中，管道的存储能力与系统页面的大小是一致的（如在 x86-32 上是 4096 字节），而从 Linux 2.6.11 起，管道的存储能力是 65,536 字节。其他 UNIX 实现上的管道的存储能力可能是不同的。&lt;/p&gt;
&lt;p&gt;一般来讲，一个应用程序无需知道管道的实际存储能力。如果需要防止写者进程阻塞，那么从管道中读取数据的进程应该被设计成以尽可能快的速度从管道中读取数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;关于-pipe-的通信&#34;&gt;关于 pipe 的通信
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;管道可以用于进程内部自己通信(用的不多)&lt;/li&gt;
&lt;li&gt;管道可以用于亲缘关系(子进程会继承父进程中的文件描述符的副本)进程中通信&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;管道与shell通信popen和pclose&#34;&gt;管道与shell通信—popen和pclose
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;管道的一个常见用途是执行 shell 命令并读取其输出或向其发送一些输入。popen()和pclose()函数简化了这个任务。
pipe和close是最底层的系统调用，它的进一步封装是popen和pclose&lt;/p&gt;&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/*
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;* 功能：创建一个管道并启动另外一个进程，该进程要么从管道读出标准输入，要么往管道写入标准输出
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;* 参数：
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;* 	 __command： shell命令行
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;* 	 __modes：  popen会在调用进程与所指定的命令之间创建一个管道，这个管道是用于读还是写取决于 __modes
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;*            __modes为r，那么调用从__command读出
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;* 			 __modes为r， 那么调用往__command写
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;* 返回： 如果成功返回文件指针，如果出错为null
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;* */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;FILE &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;popen&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;__command, &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;__modes) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/*
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;* 功能： 关闭由popen创建的标准IO流，等待其中的命令终止 ，然后返回shell的终止状态
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;**/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; pclose ( FILE &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; stream );
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;popen()&lt;/code&gt;函数创建了一个管道，然后创建了一个子进程来执行 &lt;code&gt;shell&lt;/code&gt;，而 &lt;code&gt;shell&lt;/code&gt; 又创建了一个子进程来执行&lt;code&gt;command&lt;/code&gt; 字符串。
&lt;code&gt;mode&lt;/code&gt; 参数是一个字符串:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;它确定调用进程是从管道中读取数据（&lt;code&gt;mode&lt;/code&gt; 是 &lt;code&gt;r&lt;/code&gt;）还是将数据写入到管道中（&lt;code&gt;mode&lt;/code&gt; 是 &lt;code&gt;w&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;（由于管道是单向的，因此无法在执行的 &lt;code&gt;command&lt;/code&gt; 中进行双向通信。）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;mode&lt;/code&gt; 的取值确定了所执行的命令的标准输出是连接到管道的写入端还是将其标准输入连接到管道的读取端&lt;/strong&gt;
&lt;code&gt;popen()&lt;/code&gt;在成功时会返回可供 &lt;code&gt;stdio&lt;/code&gt; 库函数使用的文件流指针。当发生错误时，&lt;code&gt;popen()&lt;/code&gt;会返回 &lt;code&gt;NULL&lt;/code&gt; 并设置 &lt;code&gt;errno&lt;/code&gt;以标示出发生错误的原因&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在&lt;code&gt;popen()&lt;/code&gt;调用之后，&lt;strong&gt;调用进程使用管道来读取command的输出或使用管道向其发送输入&lt;/strong&gt;。与使用pipe()创建的管道一样，当从管道中读取数据时，调用进程在command关闭管道的写入端之后会看到文件结束；当&lt;strong&gt;向管道写入数据时，如果command已经关闭了管道的读取端，那么调用进程就会收到SIGPIPE信号并得到EPIPE错误&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;一旦IO结束之后可以使用&lt;code&gt;pclose()&lt;/code&gt;函数关闭管道并等待子进程中的&lt;code&gt;shell&lt;/code&gt;终止（不应该使用 &lt;code&gt;fclose()&lt;/code&gt;函数，因为它不会等待子进程。）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pclose()&lt;/code&gt;在成功时会返回子进程中 &lt;code&gt;shell&lt;/code&gt; 的终止状态（即 &lt;code&gt;shell&lt;/code&gt; 所执行的最后一条命令的终止状态，除非 shell 是被信号杀死的）&lt;/li&gt;
&lt;li&gt;和&lt;code&gt;system()&lt;/code&gt;一样，如果无法执行&lt;code&gt;shell&lt;/code&gt;，那么&lt;code&gt;pclose()&lt;/code&gt;会返回一个值就像子进程中的&lt;code&gt;shell&lt;/code&gt;通过调用&lt;code&gt;_exit(127)&lt;/code&gt;来终止一样。&lt;/li&gt;
&lt;li&gt;如果发生了其他错误，那么 &lt;code&gt;pclose()&lt;/code&gt;返回&lt;code&gt;−1&lt;/code&gt;。其中可能发生的一个错误是无法取得终止状态&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当执行等待以获取子进程中 &lt;code&gt;shell&lt;/code&gt; 的状态时，&lt;code&gt;SUSv3&lt;/code&gt; 要求 &lt;code&gt;pclose()&lt;/code&gt;与 &lt;code&gt;system()&lt;/code&gt;一样，即在内部的&lt;code&gt;waitpid()&lt;/code&gt;调用被一个信号处理器中断之后自动重启该调用。&lt;/p&gt;
&lt;p&gt;与 &lt;code&gt;system()&lt;/code&gt; 一样，在特权进程中永远都不应该使用 &lt;code&gt;popen()&lt;/code&gt; ， 因为 参数来源可能非法或参数被恶意构建(&lt;code&gt;...;sh trojan&lt;/code&gt;)，不会像 &lt;code&gt;exec(familyFunc)&lt;/code&gt; 一样整体一起被识别为 一个参数，任何字符(&lt;code&gt;;&lt;/code&gt;)都被识别为参数的一部分。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;popen&lt;/code&gt;优缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点： 在&lt;code&gt;Linux&lt;/code&gt;中所有的参数扩展都是由&lt;code&gt;shell&lt;/code&gt;来完成的。所以在启动&lt;code&gt;command&lt;/code&gt;命令之前程序先启动&lt;code&gt;shell&lt;/code&gt;来分析&lt;code&gt;command&lt;/code&gt;字符串，就可以使用各种&lt;code&gt;shell&lt;/code&gt;扩展(比如通配符)，这样我们可以通过&lt;code&gt;popen&lt;/code&gt;调用非常复杂的&lt;code&gt;shell&lt;/code&gt;命令&lt;/li&gt;
&lt;li&gt;缺点： 对于每个&lt;code&gt;popen&lt;/code&gt;调用，不仅要启动一个被请求的程序，还需要启动一个&lt;code&gt;shell&lt;/code&gt;。即每一个&lt;code&gt;popen&lt;/code&gt;将启动两个进程。从效率和资源的角度看，&lt;code&gt;popen()&lt;/code&gt;函数的调用比正常方式要慢一些&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;pipe&lt;/code&gt; VS &lt;code&gt;popen&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pipe&lt;/code&gt;是一个底层调用，&lt;code&gt;popen&lt;/code&gt;是一个高级的函数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pipe&lt;/code&gt;单纯的创建管道，而&lt;code&gt;popen&lt;/code&gt;创建管道的同时&lt;code&gt;fork&lt;/code&gt;子进程&lt;/li&gt;
&lt;li&gt;&lt;code&gt;popen&lt;/code&gt;在两个进程中传递数据时需要调用&lt;code&gt;shell&lt;/code&gt;来解释请求命令；&lt;code&gt;pipe&lt;/code&gt;在两个进程中传递数据不需要启动&lt;code&gt;shell&lt;/code&gt;来解释请求命令，同时提供了对读写数据的更多控制(&lt;code&gt;popen&lt;/code&gt;必须时&lt;code&gt;shell&lt;/code&gt;命令，&lt;code&gt;pipe&lt;/code&gt;无硬性要求)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;popen()&lt;/code&gt;函数是基于文件流（&lt;code&gt;FILE&lt;/code&gt;）工作的，而&lt;code&gt;pipe&lt;/code&gt;是基于文件描述符工作的，所以在使用&lt;code&gt;pipe&lt;/code&gt;后，数据必须要用底层的&lt;code&gt;read()&lt;/code&gt;和&lt;code&gt;write()&lt;/code&gt;调用来读取和发送。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上述管道虽然实现了进程间通信，但是它具有一定的局限性：&lt;/p&gt;
&lt;p&gt;匿名管道只能是具有血缘关系的进程之间通信；
它只能实现一个进程写另一个进程读，而如果需要两者同时进行时，就得重新打开一个管道。&lt;/p&gt;
&lt;p&gt;为了使任意两个进程之间能够通信，就提出了命名管道（named pipe 或 FIFO）。&lt;/p&gt;
&lt;h1 id=&#34;命名管道fifo&#34;&gt;命名管道(FIFO)
&lt;/h1&gt;&lt;p&gt;有名管道:有自己的名字，但是&lt;strong&gt;有名管道名称保存在磁盘上&lt;/strong&gt;，但是&lt;strong&gt;内容保存在内核中&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;进程间通信必须通过内核提供的通道，而且必须由一种方法在进程中标识提供的某个通道，上面说到的匿名管道是通过打开的文件描述符标识的，只要互相通信的进程们可以访问到这个文件标识符，就可以使用它通信。 那如果相互通信的线程没有从公共祖先那么继承文件描述符，它们该如何通信呢？&lt;/li&gt;
&lt;li&gt;这个时候我们可以使用命名管道。命名管道是使用文件系统的某个路径名来标记的，而文件系统中的路径名是全局的，各个进程都可以访问&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;在linux系统调用中,标准输入描述字用&lt;code&gt;stdin&lt;/code&gt;,标准输出用&lt;code&gt;stdout&lt;/code&gt;,标准出错用&lt;code&gt;stderr&lt;/code&gt;表示,但在一些调用函数,引用了&lt;code&gt;STDIN_FILENO&lt;/code&gt;表示标准输入才,同样,标准出入用&lt;code&gt;STDOUT_FILENO&lt;/code&gt;,标准出错用&lt;code&gt;STDERR_FILENO.&lt;/code&gt;&lt;br&gt;
请问,他们有什么区别吗?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;stdin&lt;/code&gt;等是FILE *类型，属于标准I/O，在&amp;lt;stdio.h&amp;gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;STDIN_FILENO&lt;/code&gt;等是文件描述符，是非负整数，一般定义为0, 1, 2，属于没有buffer的I/O，直接调用系统调用，在&amp;lt;unistd.h&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;shell中的有名管道&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ls
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;src.log
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat src.log 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;111111111111111&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mkfifo -m &lt;span style=&#34;color:#ae81ff&#34;&gt;664&lt;/span&gt; myfifo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ls
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;myfifo  src.log
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tee dst.log &amp;lt; myfifo &amp;amp;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;39437&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ls
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;myfifo  src.log
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat src.log &amp;gt; myfifo 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ &lt;span style=&#34;color:#ae81ff&#34;&gt;111111111111111&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;+  完成                  tee dst.log &amp;lt; myfifo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ls
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dst.log  myfifo  src.log
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat dst.log 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;111111111111111&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;一次调试的记录&#34;&gt;一次调试的记录
&lt;/h1&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;watch cat /proc/sys/fs/file-nr
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 数据有上升有下降&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 12416/12384/12448/12416/12448&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#        /12512/12768&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;watch cat /proc/sys/fs/nr-open
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 1048576/ 一直没有变化&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo lsof | wc -l
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 287603&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pidof lithium
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 29973 29564&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls /proc/29973
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat cmdline
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# /opt/lithium/lithium ...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls /proc/29973/fd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls /proc/29973/fd | wc -l
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 352&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ps aux | grep &lt;span style=&#34;color:#ae81ff&#34;&gt;29492&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo ls of -p &lt;span style=&#34;color:#ae81ff&#34;&gt;29492&lt;/span&gt; | wc -l
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i in &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;ls&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; ls $i/fd | wc -l;&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i in &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;ls&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; echo pid $i; ls $i/fd | wc -l;&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;LITHIUM_ENABLE_XPC_URLS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;http://localhost:8000 valgrind --leak-check&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;full ./build/dist/lithium/lithium http://localhost:8000/apps/pipe.html &amp;gt; valgrind.log 2&amp;gt;&amp;amp;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>ssh into termux</title>
        <link>/post/tech/ssh2termux/</link>
        <pubDate>Tue, 10 May 2022 12:14:17 +0800</pubDate>
        
        <guid>/post/tech/ssh2termux/</guid>
        <description>&lt;h1 id=&#34;安装-termux&#34;&gt;安装 termux
&lt;/h1&gt;&lt;p&gt;从&lt;a class=&#34;link&#34; href=&#34;https://github.com/termux/termux-app/releases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这里&lt;/a&gt;下载 termux&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;adb install ~/Downloads/termux-app_v0.118.0+github-debug_arm64-v8a.apk
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;安装-ssh-服务&#34;&gt;安装 ssh 服务
&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;请求权限时，总是选择默认选项，不让修改任何设置&lt;/p&gt;&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pkg install root-repo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pkg upgrade
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pkg install openssh
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;passwd &lt;span style=&#34;color:#75715e&#34;&gt;# 设置好密码&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sshd &lt;span style=&#34;color:#75715e&#34;&gt;# 启动服务&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;链接-ssh-服务&#34;&gt;链接 ssh 服务
&lt;/h1&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh &amp;lt;ip of android device&amp;gt; -p &lt;span style=&#34;color:#ae81ff&#34;&gt;8022&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 使用刚刚设置的密码&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# scp 本地文件路径 远程主机用户名@远程主机名或IP:远程文件保存的位置路径&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# scp local_file remote_username@remote_ip:remote_folder&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# scp -P 8022 .ssh.tar.gz 192.168.1.132:~/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# scp -r 本地文件夹路径 远程主机用户名@远程主机名或IP:远程文件夹保存的位置路径&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# scp -r local_folder remote_username@remote_ip:remote_folder&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;扩展&#34;&gt;扩展
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.sqlsec.com/2018/05/termux.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Termux高级玩法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 批量安装需要的包&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pkg add git wget curl
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 更换国内源&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# https://mirrors.tuna.tsinghua.edu.cn/help/termux/  # 换源工具termux-change-repo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s@^\(deb.*stable main\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/termux-packages-24 stable main@&amp;#39;&lt;/span&gt; $PREFIX/etc/apt/sources.list
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s@^\(deb.*games stable\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/game-packages-24 games stable@&amp;#39;&lt;/span&gt; $PREFIX/etc/apt/sources.list.d/game.list
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s@^\(deb.*science stable\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/science-packages-24 science stable@&amp;#39;&lt;/span&gt; $PREFIX/etc/apt/sources.list.d/science.list
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pkg update
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 发起手机存储的请求权限&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;termux-setup-storage
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# proot可以为手机没有root的设备模拟root环境，不是真正的 root&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pkg install proot
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;termux-chroot
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# tsu 是su的 Termux 版本，是一个真正的 root 权限，root设备才能用，操作有风险&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pkg install tsu
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tsu &lt;span style=&#34;color:#75715e&#34;&gt;# 切换 root用户&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 备份&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;termux-setup-storage
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd /data/data/com.termux/files
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar -zcf /sdcard/termux-backup.tar.gz home usr
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 不要将备份文件存储在 Termux 私有目录中，因为从设置中清除 Termux 数据后，这些目录也将被删除&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 恢复&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;termux-setup-storage
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd /data/data/com.termux/files
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar -zxf /sdcard/termux-backup.tar.gz --recursive-unlink --preserve-permissions
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 操作完成重启 Termux 即可恢复数据。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;开发环境&#34;&gt;开发环境
&lt;/h1&gt;&lt;p&gt;Termux 可以完美的运行 C、Python、Java、PHP、Ruby等开发环境&lt;/p&gt;
&lt;h2 id=&#34;编辑器&#34;&gt;编辑器
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 汉字乱码&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim .vimrc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# set fileencodings=utf-8,gb2312,gb18030,gbk,ucs-bom,cp936,latin1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# set enc=utf8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# set fencs=utf8,gbk,gb2312,gb18030&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;source .vimrc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;php&#34;&gt;PHP
&lt;/h2&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# apache
pkg install apache2
apachectl start
# http://127.0.0.1:8080
# $PREFIX/share/apache2/default-site/htdocs/index.html
apachectl restart
apachectl stop

# 配置 PHP解析
# pkg install php-apache
# $PREFIX/etc/apache2/httpd.conf
# 文件末尾添加以下行
# LoadModule php7_module /data/data/com.termux/files/usr/libexec/apache2/libphp7.so
# &amp;lt;FilesMatch \.php$&amp;gt;
#   SetHandler application/x-httpd-php
# &amp;lt;/FilesMatch&amp;gt;
# 查找修改配置默认首页
# &amp;lt;IfModule dir_module&amp;gt;
#   DirectoryIndex index.php index.html
# &amp;lt;/IfModule&amp;gt;
# apachectl restart

# Apache is running a threaded MPM, but your PHP Module is not compiled to be threadsafe.  You need to recompile PHP.
# AH00013: Pre-configuration failed
# 注释行 LoadModule mpm_worker_module libexec/apache2/mod_mpm_worker.so
# 启用行 LoadModule mpm_worker_module libexec/apache2/mod_mpm_prefork.so

# echo &amp;#39;&amp;lt;?php phpinfo(); ?&amp;gt;&amp;#39; &amp;gt; $PREFIX/share/apache2/default-site/htdocs/index.php
# http://127.0.0.1:8080

# 数据库
pkg install mariadb
cd /data/data/com.termux/files/usr/etc/
mkdir my.cnf.d
mysql_install_db # 初始化 mysql.user 表
nohup mysqld &amp;amp;
ps aux|grep mysql
mysql -u $(whoami) # 登录 Termux 用户
use mysql;
set password for &amp;#39;root&amp;#39;@&amp;#39;localhost&amp;#39; = password(&amp;#39;你设置的密码&amp;#39;);# 修改 root 密码的 SQL语句
grant all on *.* to root@&amp;#39;%&amp;#39; identified by &amp;#39;P@ssw0rd&amp;#39; with grant option; # 允许root远程访问
flush privileges;
quit;
# mysql_secure_installation # 以后可以使用这个命令设置密码

# nginx
pkg install nginx
nginx -t # 测试文件是否正常
nginx # 启动 nginx 服务 http://127.0.0.1:8080
pgrep nginx # 查看 nginx 进程PID号
nginx -s reload # 重启服务
nginx -s stop # 停止服务

# 解析PHP
pkg install php-fpm
vim $PREFIX/etc/php-fpm.d/www.conf
# 搜索 listen = /data/data/com.termux/files/usr/var/run/php-fpm.sock
# 改为 listen = 127.0.0.1:9000
vim $PREFIX/etc/nginx/nginx.conf
# worker_processes  1;
# events {
#     worker_connections  1024;
# }
# http {
#     include       mime.types;
#     default_type  application/octet-stream;
#     sendfile        on;
#     keepalive_timeout  65;
#     server {
#         listen       8080;
#         server_name  localhost;
#         location / {
#             root   /data/data/com.termux/files/usr/share/nginx/html;
#             index  index.html index.htm index.php;
#         }
#         error_page   500 502 503 504  /50x.html;
#         location = /50x.html {
#             root   /data/data/com.termux/files/usr/share/nginx/html;
#         }
#         location ~ \.php$ {
#             root           html;
#             fastcgi_pass   127.0.0.1:9000;
#             fastcgi_index  index.php;
#             fastcgi_param  SCRIPT_FILENAME  /data/data/com.termux/files/usr/share/nginx/html$fastcgi_script_name;
#             include        fastcgi_params;
#         }
#     }
# }
echo &amp;#39;&amp;lt;?php phpinfo(); ?&amp;gt;&amp;#39; &amp;gt; $PREFIX/share/nginx/html/info.php
php-fpm # 启动 php-fpm 服务
nginx # 启动 nginx 服务

# pkg install php
# php -S 0.0.0.0:8888 -t www/
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;nodejs&#34;&gt;nodejs
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pkg install nodejs-lts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm install -g http-server
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;http-server &lt;span style=&#34;color:#75715e&#34;&gt;# 启动 http-server 服务&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Cannot read property &amp;#39;length&amp;#39; of undefined&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim $PREFIX/lib/node_modules/npm/node_modules/worker-farm/lib/farm.js
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 查找    , maxConcurrentWorkers : require(&amp;#39;os&amp;#39;).cpus().length&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 改为    , maxConcurrentWorkers : (require(&amp;#39;os&amp;#39;).cpus() || { length: 1}).length&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;python3&#34;&gt;python3
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pkg install python -y
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python -m pip install --upgrade pip -i https://pypi.tuna.tsinghua.edu.cn/simple some-package
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;其它linux发行版&#34;&gt;其它linux发行版
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;https://github.com/sqlsec/termux-install-linux
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;termux-api&#34;&gt;termux-api
&lt;/h1&gt;&lt;p&gt;从&lt;a class=&#34;link&#34; href=&#34;https://github.com/termux/termux-api/releases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这里&lt;/a&gt;下载并安装termux-api最新匹配版本的 app。安装后给出需要的所有权限。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pkg install termux-api
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.sqlsec.com/2018/05/termuxapi.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;更多细节玩法&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>custom linux live</title>
        <link>/post/tech/create.custom.linux.live.iso/</link>
        <pubDate>Wed, 04 May 2022 13:14:17 +0800</pubDate>
        
        <guid>/post/tech/create.custom.linux.live.iso/</guid>
        <description>&lt;h1 id=&#34;准备gnulinux-debianubuntu&#34;&gt;准备（GNU/Linux Debian/Ubuntu）
&lt;/h1&gt;&lt;p&gt;安装构建环境所需的应用程序。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get install &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    binutils &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    debootstrap &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    squashfs-tools &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    xorriso &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    grub-pc-bin &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    grub-efi-amd64-bin &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    mtools
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir $HOME/live-ubuntu-from-scratch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;引导程序&#34;&gt;引导程序
&lt;/h1&gt;&lt;h2 id=&#34;构建基础系统&#34;&gt;构建基础系统
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo debootstrap &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   --arch&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;amd64 &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   --variant&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;minbase &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   22.04 &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   $HOME/live-ubuntu-from-scratch/chroot &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   https://mirrors.aliyun.com/ubuntu/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;debootstrap&lt;/code&gt; 用于从头开始创建 &lt;code&gt;Debian&lt;/code&gt; 基础系统，而不需要&lt;code&gt;dpkg&lt;/code&gt;或&lt;code&gt;apt&lt;/code&gt;的可用性。它通过从镜像站点下载 &lt;code&gt;.deb&lt;/code&gt; 文件并将其解压缩到最终可以chroot到的目录中来做到这一点。&lt;/p&gt;
&lt;h2 id=&#34;外部挂载点&#34;&gt;外部挂载点
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo mount --bind /dev $HOME/live-ubuntu-from-scratch/chroot/dev
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo mount --bind /run $HOME/live-ubuntu-from-scratch/chroot/run
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;由于将更新和安装的一些软件包（其中包括grub），这些挂载点在chroot环境中是必需的。&lt;/p&gt;
&lt;h2 id=&#34;定义-chroot-环境&#34;&gt;定义 chroot 环境
&lt;/h2&gt;&lt;p&gt;Unix操作系统上的&lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Chroot&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;chroot&lt;/a&gt;是一种更改当前运行进程及其子进程的明显根目录的操作。在这种修改后的环境中运行的程序无法命名（因此通常无法访问）指定目录树之外的文件。术语“chroot”可以指 &lt;code&gt;chroot&lt;/code&gt; 系统调用或 &lt;code&gt;chroot&lt;/code&gt; 包装程序。修改后的环境称为 &lt;code&gt;chroot jail&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&#34;访问chroot环境&#34;&gt;访问chroot环境
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;sudo chroot $HOME/live-ubuntu-from-scratch/chroot&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;配置挂载点家庭和语言环境&#34;&gt;配置挂载点、家庭和语言环境
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;挂载无 -t proc /proc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;挂载无 -t sysfs /sys
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;挂载无 -t devpts /dev/pts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;导出 HOME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/root
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;导出 LC_ALL&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;C
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;这些挂载点在chroot环境中是必需的，因此我们能够顺利完成安装。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;设置自定义主机名
&lt;code&gt;echo &amp;quot;ubuntu-fs-live&amp;quot; &amp;gt; /etc/hostname&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;配置-apt-sourceslist&#34;&gt;配置 apt sources.list
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;EOF &amp;gt; /etc/apt/sources.list
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;deb http://us.archive.ubuntu.com/ubuntu/ focal main restricted universe multiverse
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;deb-src http://us.archive.ubuntu.com/ubuntu/ focal main restricted universe multiverse
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;deb http://us.archive.ubuntu.com/ubuntu/ focal-security main restricted universe multiverse
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;deb-src http://us.archive.ubuntu.com/ubuntu/ focal-security main restricted universe multiverse
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;deb http://us.archive.ubuntu.com/ubuntu/ focal-updates main restricted universe multiverse
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;deb-src http://us.archive.ubuntu.com/ubuntu/ focal-updates main restricted universe multiverse
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;更新包索引&#34;&gt;更新包索引
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;apt-get update&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;安装systemd&#34;&gt;安装&lt;code&gt;systemd&lt;/code&gt;
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;apt-get install -y libterm-readline-gnu-perl systemd-sysv&lt;/code&gt;
systemd是 Linux 的系统和服务管理器。它提供了积极的并行化能力，使用套接字和 D-Bus 激活来启动服务，提供守护进程的按需启动，使用 Linux 控制组跟踪进程，维护挂载和自动挂载点，并实现精细的基于事务依赖的服务控制逻辑。&lt;/p&gt;
&lt;h2 id=&#34;配置-machine-id-并转移&#34;&gt;配置 &lt;code&gt;machine-id&lt;/code&gt; 并转移
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dbus-uuidgen &amp;gt; /etc/machine-id
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ln -fs /etc/machine-id /var/lib/dbus/machine-id
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;该/etc/machine-id文件包含在安装或引导期间设置的本地系统的唯一机器 ID。机器 ID 是一个以换行符结尾的十六进制 32 个字符的小写 ID。从十六进制解码时，这对应于 16 字节/128 位值。此 ID 可能并非全为零。&lt;/p&gt;&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dpkg-divert --local --rename --add /sbin/initctl
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ln -s /bin/true /sbin/initctl
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;dpkg-divert是用于设置和更新转移列表的实用程序。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;安装-live-system-所需的软件包&#34;&gt;安装 Live System 所需的软件包
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get install -y &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    sudo &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    ubuntu-standard &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    casper &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    lupin-casper &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    discover &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    laptop-detect &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    os-prober &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    network-manager &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    resolvconf &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    net-tools &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    wireless-tools &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    wpagui &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    locales &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    grub-common &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    grub-gfxpayload-lists &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    grub-pc &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    grub-pc-bin &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    grub2-common
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get install -y --no-install-recommends linux-generic
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;图形安装程序&#34;&gt;图形安装程序
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get install -y &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    ubiquity &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    ubiquity-casper &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    ubiquity-frontend-gtk &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    ubiquity-slideshow-ubuntu &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    ubiquity-ubuntu-artwork
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;安装过程中将出现&lt;code&gt;tui&lt;/code&gt;对话框，无需做任何配置修改。&lt;/p&gt;
&lt;h2 id=&#34;安装窗口管理器&#34;&gt;安装窗口管理器
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get install -y &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    plymouth-theme-ubuntu-logo &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    ubuntu-gnome-desktop &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    ubuntu-gnome-wallpapers
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;安装有用的应用程序&#34;&gt;安装有用的应用程序
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get install -y &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    clamav-daemon &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    terminator &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    apt-transport-https &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    curl &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    vim &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    nano &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    less
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;安装-visual-studio-code-可选&#34;&gt;安装 Visual Studio Code (可选)
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor &amp;gt; microsoft.gpg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;install -o root -g root -m &lt;span style=&#34;color:#ae81ff&#34;&gt;644&lt;/span&gt; microsoft.gpg /etc/apt/trusted.gpg.d/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main&amp;#34;&lt;/span&gt; &amp;gt; /etc/apt/sources.list.d/vscode.list
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm microsoft.gpg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get update
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get install -y code
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;安装-google-chrome-可选&#34;&gt;安装 Google Chrome (可选)
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;deb http://dl.google.com/linux/chrome/deb/ stable main&amp;#34;&lt;/span&gt; &amp;gt; /etc/apt/sources.list.d/google-chrome.list
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get update
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get install google-chrome-stable
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;安装-jdk-可选&#34;&gt;安装 JDK (可选)
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get install -y &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;     openjdk-8-jdk &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;     openjdk-8-jre
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;移除不需要的应用-可选&#34;&gt;移除不需要的应用 (可选)
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get purge -y &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;     transmission-gtk &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;     transmission-common &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;     gnome-mahjongg &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;     gnome-mines &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;     gnome-sudoku &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;     aisleriot &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;     hitori
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;删除不用的软件包&#34;&gt;删除不用的软件包
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get autoremove -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;重新配置&#34;&gt;重新配置
&lt;/h1&gt;&lt;h2 id=&#34;生成语言配置&#34;&gt;生成语言配置
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dpkg-reconfigure locales
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 选择语言和默认语言&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;重新配置-resolvconf&#34;&gt;重新配置 &lt;code&gt;resolvconf&lt;/code&gt;
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dpkg-reconfigure resolvconf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;配置网络&#34;&gt;配置网络
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;EOF &amp;gt; /etc/NetworkManager/NetworkManager.conf
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[main]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;rc-manager=resolvconf
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;plugins=ifupdown,keyfile
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;dns=dnsmasq
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[ifupdown]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;managed=false
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dpkg-reconfigure network-manager
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;清理-chroot-环境&#34;&gt;清理 chroot 环境
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# If have installed software&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;truncate -s &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; /etc/machine-id
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Remove the diversion&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm /sbin/initctl
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dpkg-divert --rename --remove /sbin/initctl
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Clean up&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get clean
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm -rf /tmp/* ~/.bash_history
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;umount /proc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;umount /sys
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;umount /dev/pts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export HISTSIZE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;exit
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Unbind mount points&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo umount $HOME/live-ubuntu-from-scratch/chroot/dev
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo umount $HOME/live-ubuntu-from-scratch/chroot/run
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;映像目录并填充&#34;&gt;映像目录并填充
&lt;/h1&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd $HOME/live-ubuntu-from-scratch
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir -p image/&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;casper,isolinux,install&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo cp chroot/boot/vmlinuz-**-**-generic image/casper/vmlinuz
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo cp chroot/boot/initrd.img-**-**-generic image/casper/initrd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo cp chroot/boot/memtest86+.bin image/install/memtest86+
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget --progress&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dot https://www.memtest86.com/downloads/memtest86-usb.zip -O image/install/memtest86-usb.zip
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;unzip -p image/install/memtest86-usb.zip memtest86-usb.img &amp;gt; image/install/memtest86
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm image/install/memtest86-usb.zip
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;grub-配置&#34;&gt;Grub 配置
&lt;/h1&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd $HOME/live-ubuntu-from-scratch
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;touch image/ubuntu
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;创建-imageisolinuxgrubcfg&#34;&gt;创建 /image/isolinux/grub.cfg
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;EOF &amp;gt; image/isolinux/grub.cfg
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;search --set=root --file /ubuntu
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;insmod all_video
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;set default=&amp;#34;0&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;set timeout=30
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;menuentry &amp;#34;Try Ubuntu FS without installing&amp;#34; {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   linux /casper/vmlinuz boot=casper quiet splash ---
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   initrd /casper/initrd
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;menuentry &amp;#34;Install Ubuntu FS&amp;#34; {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   linux /casper/vmlinuz boot=casper only-ubiquity quiet splash ---
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   initrd /casper/initrd
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;menuentry &amp;#34;Check disc for defects&amp;#34; {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   linux /casper/vmlinuz boot=casper integrity-check quiet splash ---
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   initrd /casper/initrd
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;menuentry &amp;#34;Test memory Memtest86+ (BIOS)&amp;#34; {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   linux16 /install/memtest86+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;menuentry &amp;#34;Test memory Memtest86 (UEFI, long load time)&amp;#34; {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   insmod part_gpt
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   insmod search_fs_uuid
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   insmod chain
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   loopback loop /install/memtest86
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;   chainloader (loop,gpt1)/efi/boot/BOOTX64.efi
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;创建-manifest&#34;&gt;创建 &lt;code&gt;manifest&lt;/code&gt;
&lt;/h1&gt;&lt;p&gt;在接下来的步骤中，清单的创建很重要，因为它告诉我们每个包的哪个版本安装在 Live 版本中，以及哪些包将在将要安装的版本中删除或维护（保留在硬盘中）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd $HOME/live-ubuntu-from-scratch
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo chroot chroot dpkg-query -W --showformat&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;${Package} ${Version}\n&amp;#39;&lt;/span&gt; | sudo tee image/casper/filesystem.manifest
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo cp -v image/casper/filesystem.manifest image/casper/filesystem.manifest-desktop
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/ubiquity/d&amp;#39;&lt;/span&gt; image/casper/filesystem.manifest-desktop
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/casper/d&amp;#39;&lt;/span&gt; image/casper/filesystem.manifest-desktop
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/discover/d&amp;#39;&lt;/span&gt; image/casper/filesystem.manifest-desktop
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/laptop-detect/d&amp;#39;&lt;/span&gt; image/casper/filesystem.manifest-desktop
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/os-prober/d&amp;#39;&lt;/span&gt; image/casper/filesystem.manifest-desktop
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;压缩-chroot&#34;&gt;压缩 &lt;code&gt;chroot&lt;/code&gt;
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd $HOME/live-ubuntu-from-scratch
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 创建 squashfs&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo mksquashfs chroot image/casper/filesystem.squashfs
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 生成 filesystem.size&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;printf &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;sudo du -sx --block-size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; chroot | cut -f1&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; &amp;gt; image/casper/filesystem.size
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;Squashfs是一个高度压缩的 Linux 只读文件系统。它使用 zlib 压缩来压缩文件、inode 和目录。系统中的 inode 非常小，所有块都被打包以最小化数据开销。支持大于 4K 的块大小，最大支持 64K。
Squashfs旨在用于一般只读文件系统、存档使用（即在可能使用 .tar.gz 文件的情况下）以及需要低开销的受限块设备/内存系统（例如嵌入式系统）。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;创建磁盘说明&#34;&gt;创建磁盘说明
&lt;/h2&gt;&lt;p&gt;README文件通常可以在 Linux LiveCD 安装光盘上找到，例如 Ubuntu Linux 安装光盘；通常命名为“ README.diskdefines ”并且可以在安装过程中被引用。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd $HOME/live-ubuntu-from-scratch
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Create file image/README.diskdefines&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;EOF &amp;gt; image/README.diskdefines
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;#define DISKNAME  Ubuntu from scratch
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;#define TYPE  binary
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;#define TYPEbinary  1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;#define ARCH  amd64
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;#define ARCHamd64  1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;#define DISKNUM  1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;#define DISKNUM1  1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;#define TOTALNUM  0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;#define TOTALNUM0  1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;为-livecd-创建-iso-映像-bios--uefi&#34;&gt;为 LiveCD 创建 ISO 映像 (BIOS + UEFI)
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd $HOME/live-ubuntu-from-scratch/image
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 创建 grub UEFI 映像&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grub-mkstandalone &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   --format&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;x86_64-efi &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   --output&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;isolinux/bootx64.efi &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   --locales&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   --fonts&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;boot/grub/grub.cfg=isolinux/grub.cfg&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 创建包含 EFI 引导加载程序的 FAT16 UEFI 引导磁盘映像&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   cd isolinux &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   dd &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/dev/zero of&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;efiboot.img bs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;1M count&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   sudo mkfs.vfat efiboot.img &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   LC_CTYPE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;C mmd -i efiboot.img efi efi/boot &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   LC_CTYPE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;C mcopy -i efiboot.img ./bootx64.efi ::efi/boot/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 创建 grub BIOS 映像&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grub-mkstandalone &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   --format&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;i386-pc &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   --output&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;isolinux/core.img &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   --install-modules&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;linux16 linux normal iso9660 biosdisk memdisk search tar ls&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   --modules&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;linux16 linux normal iso9660 biosdisk search&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   --locales&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   --fonts&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;boot/grub/grub.cfg=isolinux/grub.cfg&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 组合可引导的 grub cdboot.img&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat /usr/lib/grub/i386-pc/cdboot.img isolinux/core.img &amp;gt; isolinux/bios.img
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 生成md5sum.txt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo /bin/bash -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;(find . -type f -print0 | xargs -0 md5sum | grep -v &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\.&lt;/span&gt;/md5sum.txt&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;gt; md5sum.txt)&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 使用命令行从镜像目录创建iso&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo xorriso &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   -as mkisofs &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   -iso-level &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   -full-iso9660-filenames &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   -volid &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ubuntu from scratch&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   -output &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;../ubuntu-from-scratch.iso&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   -eltorito-boot boot/grub/bios.img &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;      -no-emul-boot &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;      -boot-load-size &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;      -boot-info-table &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;      --eltorito-catalog boot/grub/boot.cat &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;      --grub2-boot-info &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;      --grub2-mbr /usr/lib/grub/i386-pc/boot_hybrid.img &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   -eltorito-alt-boot &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;      -e EFI/efiboot.img &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;      -no-emul-boot &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   -append_partition &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; 0xef isolinux/efiboot.img &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;isolinux/efiboot.img&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;isolinux/bios.img&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   -graft-points &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/EFI/efiboot.img=isolinux/efiboot.img&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/boot/grub/bios.img=isolinux/bios.img&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;另一种方法如果前一个失败创建一个混合-iso&#34;&gt;另一种方法，如果前一个失败，创建一个混合 ISO
&lt;/h1&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 创建 ISOLINUX (syslinux) 启动菜单&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;EOF&amp;gt; isolinux/isolinux.cfg
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;UI vesamenu.c32
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;MENU TITLE Boot Menu
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;DEFAULT linux
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;TIMEOUT 600
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;MENU RESOLUTION 640 480
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;MENU COLOR border       30;44   #40ffffff #a0000000 std
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;MENU COLOR title        1;36;44 #9033ccff #a0000000 std
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;MENU COLOR sel          7;37;40 #e0ffffff #20ffffff all
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;MENU COLOR unsel        37;44   #50ffffff #a0000000 std
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;MENU COLOR help         37;40   #c0ffffff #a0000000 std
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;MENU COLOR timeout_msg  37;40   #80ffffff #00000000 std
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;MENU COLOR timeout      1;37;40 #c0ffffff #00000000 std
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;MENU COLOR msg07        37;40   #90ffffff #a0000000 std
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;MENU COLOR tabmsg       31;40   #30ffffff #00000000 std
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;LABEL linux
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; MENU LABEL Try Ubuntu FS
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; MENU DEFAULT
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; KERNEL /casper/vmlinuz
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; APPEND initrd=/casper/initrd boot=casper
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;LABEL linux
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; MENU LABEL Try Ubuntu FS (nomodeset)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; MENU DEFAULT
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; KERNEL /casper/vmlinuz
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; APPEND initrd=/casper/initrd boot=casper nomodeset
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 包括 syslinux bios 模块&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt install -y syslinux-common &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;cp /usr/lib/ISOLINUX/isolinux.bin isolinux/ &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;cp /usr/lib/syslinux/modules/bios/* isolinux/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 从镜像目录创建iso&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo xorriso &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   -as mkisofs &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   -iso-level &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   -full-iso9660-filenames &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   -volid &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ubuntu from scratch&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   -output &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;../ubuntu-from-scratch.iso&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt; -isohybrid-mbr /usr/lib/ISOLINUX/isohdpfx.bin &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt; -eltorito-boot &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;     isolinux/isolinux.bin &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;     -no-emul-boot &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;     -boot-load-size &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;     -boot-info-table &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;     --eltorito-catalog isolinux/isolinux.cat &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt; -eltorito-alt-boot &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;     -e /EFI/boot/efiboot.img &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;     -no-emul-boot &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;     -isohybrid-gpt-basdat &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt; -append_partition &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; 0xef EFI/boot/efiboot.img &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$HOME&lt;span style=&#34;color:#e6db74&#34;&gt;/live-ubuntu-from-scratch/image&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;制作可启动的-usb-映像&#34;&gt;制作可启动的 USB 映像
&lt;/h1&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo dd &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ubuntu-from-scratch.iso of&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;device&amp;gt; status&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;progress oflag&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sync
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;小结&#34;&gt;小结
&lt;/h1&gt;&lt;p&gt;生成的 ISO 可以在虚拟机中进行测试，例如VirtualBox或写入媒体并从标准 PC 启动。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>ssh</title>
        <link>/post/tech/ssh/</link>
        <pubDate>Fri, 29 Apr 2022 08:04:17 +0800</pubDate>
        
        <guid>/post/tech/ssh/</guid>
        <description>&lt;h2 id=&#34;use&#34;&gt;Use
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh -L 4333:localhost:8000 root@xxxxx -N -f
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 将本地的4333端口转发到远程的8000端口,这意味着你在本地调用localhost:4333即可以获取到xxxxx服务器上8000端口的结果.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh -L 3333:prod:3306 root@jump -N -f
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 所有请求本地3333端口的请求,都会被转发为jump机器上对prod:3306的请求&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh -R 8092:localhost:6666 root@xxxxx -N -f
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 将对xxxxx服务器8092端口的访问转发到本地的6666端口上,现在你可以让请求API的人直接请求xxxxxx:8092&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>如何解决包安装失败的问题</title>
        <link>/post/tech/fix-apt-broken-packages/</link>
        <pubDate>Thu, 28 Apr 2022 23:54:47 +0800</pubDate>
        
        <guid>/post/tech/fix-apt-broken-packages/</guid>
        <description>&lt;h2 id=&#34;背景&#34;&gt;背景
&lt;/h2&gt;&lt;p&gt;经常我们会遇到在安装一个包时遇到错误的问题，有时是要安装的包不存在或损坏，有时是下载不下来，有时是版本依赖链问题……本文将集中收录所有安装时遇到错误的情形及解决办法&lt;/p&gt;
&lt;h2 id=&#34;问题及解决&#34;&gt;问题及解决
&lt;/h2&gt;&lt;h3 id=&#34;包更新失败及中断&#34;&gt;包更新失败及中断
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt clean
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install xxxxx
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install -f
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo dpkg --configure -a
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt update
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;包信息缺失包列表问题包列表文件无法解析或打开&#34;&gt;包信息缺失，包列表问题，包列表文件无法解析或打开
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo rm /var/lib/apt/lists/* -vf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt update
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;锁操作失败could-not-get-lock-varcacheaptarchiveslock&#34;&gt;锁操作失败&lt;code&gt;Could not get lock /var/cache/apt/archives/lock&lt;/code&gt;
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo fuser -cuk /var/lib/dpkg/lock
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo rm -f /var/lib/dpkg/lock
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo fuser -cuk /var/cache/apt/archives/lock
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo rm -f /var/cache/apt/archives/lock
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;未满足已安装依赖包unmet-dependencies-for-installed-packages&#34;&gt;未满足已安装依赖包&lt;code&gt;Unmet dependencies for installed packages&lt;/code&gt;
&lt;/h3&gt;&lt;p&gt;通常情况下 建议使用 &lt;code&gt;Synaptic Package Manager&lt;/code&gt;
-&amp;gt; 点击 &lt;code&gt;Status&lt;/code&gt; (左边)
-&amp;gt; 选择 &lt;code&gt;Broken&lt;/code&gt;
-&amp;gt; 删除损坏的包&lt;/p&gt;
&lt;h3 id=&#34;依赖旧包但已经装了新的包&#34;&gt;依赖旧包但已经装了新的包
&lt;/h3&gt;&lt;p&gt;建议卸载那个新的包，安装就版本的包
通过 &lt;code&gt;apt-cache policy {PkgName}&lt;/code&gt; 方式来查看&lt;/p&gt;
</description>
        </item>
        <item>
        <title>debootstrap</title>
        <link>/post/tech/debootstrap/</link>
        <pubDate>Wed, 27 Apr 2022 23:54:47 +0800</pubDate>
        
        <guid>/post/tech/debootstrap/</guid>
        <description>&lt;h2 id=&#34;install&#34;&gt;Install
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install debootstrap
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;use&#34;&gt;Use
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo debootstrap --arch &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;平台&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;发行版本代号&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;目录&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo debootstrap --arch amd64 buster ./
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 此句收尾代表成功&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# I: Base system installed successfully.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当前环境中 &lt;code&gt;debootstrap&lt;/code&gt; 支持的发行版本可以在 &lt;code&gt;/usr/share/debootstrap/scripts&lt;/code&gt; 查看，补充两个版本代号信息相关的链接有兴趣可以了解一下，版本代号网上都可以查到。&lt;/p&gt;
&lt;h2 id=&#34;应用场景&#34;&gt;应用场景
&lt;/h2&gt;&lt;h3 id=&#34;构建一个编译环境&#34;&gt;构建一个编译环境
&lt;/h3&gt;&lt;p&gt;amd64架构debian10案例&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 创建环境进入&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir buster&amp;amp;cd buster
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo debootstrap --arch amd64 buster ./
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo chroot .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 修改云源&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo deb http://mirrors.ustc.edu.cn/debian buster main &amp;gt; /etc/apt/sources.list
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo deb-src http://mirrors.ustc.edu.cn/debian buster main &amp;gt;&amp;gt; /etc/apt/sources.list
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get update
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 部分版本是没有装编译工具包的&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get install dpkg-dev
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get install debhelper
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 下载编译源码&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd /tmp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get source redis
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get build-dep redis
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd redis.x.x
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dpkg-buildpackage
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find ../*.deb
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;从软件源构建一个系统的基础镜像&#34;&gt;从软件源构建一个系统的基础镜像
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;确定软件源(loongarch64)
deb &lt;a class=&#34;link&#34; href=&#34;https://education-packages.chinauos.com/desktop-education&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://education-packages.chinauos.com/desktop-education&lt;/a&gt; uranus/dc80 main&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;开始构建(同架构下的debootstrap用同样的方法应该已经安装好了)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo debootstrap --no-check-gpg uranus/dc80 rootfs https://education-packages.chinauos.com/desktop-education sid
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 需要确保当前路径下 不存在 rootfs 目录 或者只有 空的 rootfs 目录。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo du --human-readable --summarize rootfs
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;391M    rootfs/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 我这里省略了下面的步骤&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sudo mount --bind /dev     rootfs/dev&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sudo mount --bind /dev/pts rootfs/dev/pts&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sudo mount --bind /proc    rootfs/proc&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sudo mount --bind /sys     rootfs/sys&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo chroot rootfs/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get remove --allow-remove-essential e2fsprogs e2fslibs nano pinentry-curses whiptail kmod iptables iproute2 dmidecode
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get clean
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find /var/lib/apt/lists/ -maxdepth &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; -type f -delete
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;exit
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 因为先前没有挂载，所以我也不用做这个步骤&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sudo umount rootfs/dev/pts&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sudo umount rootfs/dev&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sudo umount rootfs/proc&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sudo umount rootfs/sys&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo du --human-readable --summarize rootfs
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;203M    rootfs/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo rm rootfs/var/log/bootstrap.log
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo rm -rf rootfs/var/log/*
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo rm rootfs/var/log/apt/*
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo du --human-readable --summarize rootfs
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;203M    rootfs/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo su
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar -C rootfs/ -c . | docker import -
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker tag 259ce466a72d3d4c35c203d7912b7067ef4b1f85c1fdcc27aa1a0d0cd7afe4a9 registry.linakesi.com/uos-edu-desktop:loongarch64
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;测试使用&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run --rm -it registry.linakesi.com/uos-edu-desktop:loongarch64 bash
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt install git
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 测试成功&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 后续使用中如果有问题，考虑从 apt-get remove 操作中找原因，比如我发现执行 remove 时有 deepin-keyring 包被卸载。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>apt-cache</title>
        <link>/post/tech/apt-cache/</link>
        <pubDate>Tue, 26 Apr 2022 08:01:47 +0800</pubDate>
        
        <guid>/post/tech/apt-cache/</guid>
        <description>&lt;h2 id=&#34;install&#34;&gt;Install
&lt;/h2&gt;&lt;p&gt;debian 系的发行版自带，无需安装。&lt;/p&gt;
&lt;h2 id=&#34;use&#34;&gt;Use
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://debian-handbook.info/browse/zh-CN/stable/sect.apt-cache.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官方解释&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;重点摘录:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-cache search php &lt;span style=&#34;color:#75715e&#34;&gt;# 搜索包含关键词的包&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-cache show php &lt;span style=&#34;color:#75715e&#34;&gt;# 显示包名信息&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-cache policy php &lt;span style=&#34;color:#75715e&#34;&gt;# 显示软件包来源及个别软件包的优先级&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-cache depends php &lt;span style=&#34;color:#75715e&#34;&gt;# 显示依赖的软件包&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-cache rdepends php &lt;span style=&#34;color:#75715e&#34;&gt;# 递归显示所有依赖的软件包&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-cache showsrc php &lt;span style=&#34;color:#75715e&#34;&gt;# 显示&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-cache pkgnames php &lt;span style=&#34;color:#75715e&#34;&gt;# 显示出现在缓存至少一次的软件包清单&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;除了 &lt;code&gt;apt-cache pkgnames php&lt;/code&gt; 外，其它命令都 将 &lt;code&gt;apt-cache&lt;/code&gt; 简写为 &lt;code&gt;apt&lt;/code&gt; 之后，使用起来没有发现什么区别(search 命令的输出略有不同)，都可以离线使用。&lt;/p&gt;
&lt;h2 id=&#34;扩展阅读&#34;&gt;扩展阅读
&lt;/h2&gt;&lt;h3 id=&#34;优先级&#34;&gt;优先级
&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;    &amp;lt; 0
        will never be installed,
        永远不会被安装
    1..99
        will only be installed if no other version of the package is already installed,
        只在没有其它版本的包时才安装
    100..499
        will only be installed if there is no other newer version installed or available in another distribution,
        只在没有别的更新版本时(或另发行版可用时)才安装
    500....989
        will only be installed if there is no newer version installed or available in the target distribution,
        只在目标发行版中没有安装或没有可用的新版本时才会安装
    990..1000
        will be installed except if the installed version is newer,
        将安装，除非安装的版本较新
    &amp;gt; 1000
        will always be installed, even if it forces APT to downgrade to an older version.
        将始终安装，即使它强制 APT 降级到旧版本
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
        <item>
        <title>简易在线音乐播放器</title>
        <link>/post/tech/web.music/</link>
        <pubDate>Tue, 19 Apr 2022 08:06:15 +0800</pubDate>
        
        <guid>/post/tech/web.music/</guid>
        <description>&lt;p&gt;简易在线音乐播放器&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt; /&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;音乐播放器&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;link&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;rel&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;stylesheet&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text/css&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./index.css&amp;#34;&lt;/span&gt;/&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;header&lt;/span&gt;&amp;gt;音乐播放器&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;header&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;section&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;ul&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;Here We Are Again&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;不谓侠&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;多想在平庸的生活拥抱你&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;浪子回头&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;那个女孩&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;那女孩对我说&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;平胸女子&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;情深深雨濛濛&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;雅俗共赏&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;野狼disco&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;这一生关于你的风景&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;ul&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;section&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;audio&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ado&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;controls&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;controls&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;audio&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;footer&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			当前播放的是：&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;con&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;span&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;footer&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./index.js&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text/javascript&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/* 写样式通常首先-清空所有标签的内外边距 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;margin&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;padding&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/*  */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;width&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;31.25&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;rem&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;overflow&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;auto&lt;/span&gt;;		&lt;span style=&#34;color:#75715e&#34;&gt;/* overflow 属性规定当内容溢出元素框时发生的事情 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;margin&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;auto&lt;/span&gt;;  &lt;span style=&#34;color:#75715e&#34;&gt;/* 外边距 上下20 水平居中 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/* 设置头部和底部样式 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;header&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;footer&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;height&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;line-height&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;  &lt;span style=&#34;color:#75715e&#34;&gt;/* 与模块同高 可以字体上下居中显示 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;background&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;#808080&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;text-align&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;center&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;/* 文本居中 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/* 给音乐列表写样式 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;li&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;height&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;line-height&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;border&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;solid&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;red&lt;/span&gt;;  &lt;span style=&#34;color:#75715e&#34;&gt;/* 添加边框属性 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;border-top&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;none&lt;/span&gt;;  		&lt;span style=&#34;color:#75715e&#34;&gt;/* 上下线条重合 so清空上线条 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;font-size&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;		&lt;span style=&#34;color:#75715e&#34;&gt;/* 字体大小设置 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;text-indent&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;		&lt;span style=&#34;color:#75715e&#34;&gt;/* text-indent 属性规定文本块中首行文本的缩进。 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;							&lt;span style=&#34;color:#75715e&#34;&gt;/* 注释：允许使用负值。如果使用负值，那么首行会被缩进到左边 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;list-style&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;none&lt;/span&gt;;		&lt;span style=&#34;color:#75715e&#34;&gt;/* 清空一下列表的样式-列表前方的点或数字 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/* 音频文件的样式设置 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;#ado{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;width&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;%&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;height&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;margin-top&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;px&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/* 设置控制列表的类名样式 */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;sty&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;background&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;#FF0000&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lis&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;getElementsByTagName&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;li&amp;#39;&lt;/span&gt;);   &lt;span style=&#34;color:#75715e&#34;&gt;//获取dom元素
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ado&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;getElementById&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ado&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;con&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; document.&lt;span style=&#34;color:#a6e22e&#34;&gt;getElementById&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;con&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//创建数组存放音乐文件路径，通过下标找到相应文件
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;audio/Here We Are Again.mp3&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;audio/不谓侠.mp3&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;audio/多想在平庸的生活拥抱你.mp3&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;audio/浪子回头.mp3&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;audio/那个女孩.mp3&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;audio/那女孩对我说.mp3&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;audio/平胸女子.mp3&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;audio/情深深雨濛濛.mp3&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;audio/雅俗共赏.mp3&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;audio/野狼disco.mp3&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;audio/这一生关于你的风景.mp3&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//通过循环遍历的方式添加点击事件
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lis&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#a6e22e&#34;&gt;lis&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;].&lt;span style=&#34;color:#a6e22e&#34;&gt;onclick&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lis&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;this&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lis&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;]) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#a6e22e&#34;&gt;lis&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;].&lt;span style=&#34;color:#a6e22e&#34;&gt;className&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sty&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#a6e22e&#34;&gt;ado&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#a6e22e&#34;&gt;ado&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;play&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#a6e22e&#34;&gt;con&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;innerHTML&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lis&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;].&lt;span style=&#34;color:#a6e22e&#34;&gt;innerHTML&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#75715e&#34;&gt;//通过ended事件监听是否播放完毕
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;				&lt;span style=&#34;color:#a6e22e&#34;&gt;ado&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;onended&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;lis&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;						&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					&lt;span style=&#34;color:#75715e&#34;&gt;//通过for循环清空所有样式列表
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;					&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lis&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;length&lt;/span&gt;; &lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;						&lt;span style=&#34;color:#a6e22e&#34;&gt;lis&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;j&lt;/span&gt;].&lt;span style=&#34;color:#a6e22e&#34;&gt;className&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					&lt;span style=&#34;color:#75715e&#34;&gt;//通过下标a给相应的列表进行样式的修饰和音乐的播放
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;					&lt;span style=&#34;color:#a6e22e&#34;&gt;con&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;innerHTML&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lis&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;].&lt;span style=&#34;color:#a6e22e&#34;&gt;innerHTML&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					&lt;span style=&#34;color:#a6e22e&#34;&gt;ado&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;arr&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					&lt;span style=&#34;color:#a6e22e&#34;&gt;ado&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;play&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					&lt;span style=&#34;color:#a6e22e&#34;&gt;lis&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;a&lt;/span&gt;].&lt;span style=&#34;color:#a6e22e&#34;&gt;className&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sty&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			} &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;				&lt;span style=&#34;color:#a6e22e&#34;&gt;lis&lt;/span&gt;[&lt;span style=&#34;color:#a6e22e&#34;&gt;i&lt;/span&gt;].&lt;span style=&#34;color:#a6e22e&#34;&gt;className&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>go-callvis</title>
        <link>/post/tech/graph-go.go-callvis/</link>
        <pubDate>Tue, 19 Apr 2022 00:06:03 +0800</pubDate>
        
        <guid>/post/tech/graph-go.go-callvis/</guid>
        <description>&lt;h1 id=&#34;go-callvis&#34;&gt;go-callvis
&lt;/h1&gt;&lt;p&gt;go-callvis是一个开发工具，可帮助使用交互式视图可视化 Go 程序的调用图。
该工具的目的是为开发人员提供使用调用图数据及其与包和类型的关系的 Go 程序的可视化概览。这在代码复杂性更高的大型项目中或当您只是试图理解其他人的代码时特别有用。&lt;/p&gt;
&lt;h2 id=&#34;安装&#34;&gt;安装
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;go install github.com/ofabry/go-callvis
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;使用&#34;&gt;使用
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;go-callvis -nointer -nostd -nodesep 0.1 ./client
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;参数说明&#34;&gt;参数说明
&lt;/h2&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;   -debug
         输出详细日志
   -file string
         以文件新式输出结果，并将忽略server交互模式
   -focus string
         Focus specific package using name or import path. (default &amp;#34;main&amp;#34;)
   -format string
         输出文件的格式 [svg | png | jpg | ...] (默认 &amp;#34;svg&amp;#34;)
   -graphviz
         使用Graphviz渲染图像
   -group string
         分组功能，根据包 与/或 类型分组 [pkg, type] (用逗号分开) (默认 &amp;#34;pkg&amp;#34;)，例如 -group pkg,type
   -http string
         HTTP 服务地址 (默认 &amp;#34;:7878&amp;#34;)
   -ignore string
        忽略包含给定前缀的包路径(用逗号分开)
   -include string
         包含具有给定前缀的包路径 (用逗号分开)
   -limit string
         Limit package paths to given prefixes (separated by comma)
   -minlen uint
         Minimum edge length (for wider output). (default 2)
   -nodesep float
         Minimum space between two adjacent nodes in the same rank (for taller output). (default 0.35)
   -nointer
         忽略对未导出函数的调用。
   -nostd
         忽略标准库的调用
   -skipbrowser
         跳过打开浏览器
   -tags build tags
         a list of build tags to consider satisfied during the build. For more information about build tags, see the description of build constraints in the documentation for the go/build package
   -tests
         包含测试代码
   -version
         显示版本号
&lt;/code&gt;&lt;/pre&gt;</description>
        </item>
        <item>
        <title>构建一个x11Docker</title>
        <link>/post/tech/buildx11docker/</link>
        <pubDate>Tue, 29 Mar 2022 23:50:47 +0800</pubDate>
        
        <guid>/post/tech/buildx11docker/</guid>
        <description>&lt;h1 id=&#34;构建一个运行于docker中的图形界面软件&#34;&gt;构建一个运行于Docker中的图形界面软件
&lt;/h1&gt;&lt;h2 id=&#34;软件仓库的软件&#34;&gt;软件仓库的软件
&lt;/h2&gt;&lt;p&gt;通常情况下，我们如果要将一个软件直接安装进 Docker，直接 install 即可。因为依赖会自动安装好。&lt;/p&gt;
&lt;h2 id=&#34;修改的软件&#34;&gt;修改的软件
&lt;/h2&gt;&lt;p&gt;如果一个软件包是修改自软件仓库的软件，一般也可以通过 &lt;code&gt;apt-cache depends packageName&lt;/code&gt; 查看到依赖的软件包。
依次安装这些包即可。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-cache depends firefox
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  依赖: lsb-release
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  依赖: libasound2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  依赖: libatk1.0-0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  依赖: libc6
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  依赖: libcairo-gobject2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  依赖: libcairo2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  依赖: libdbus-1-3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  依赖: libdbus-glib-1-2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  依赖: libfontconfig1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  依赖: libfreetype6
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  依赖: libgcc-s1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  依赖: libgdk-pixbuf2.0-0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  依赖: libglib2.0-0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  依赖: libgtk-3-0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  依赖: libharfbuzz0b
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  依赖: libpango-1.0-0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  依赖: libpangocairo-1.0-0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  依赖: libstdc++6
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  依赖: libx11-6
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  依赖: libx11-xcb1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  依赖: libxcb-shm0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  依赖: libxcb1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  依赖: libxcomposite1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  依赖: libxcursor1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  依赖: libxdamage1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  依赖: libxext6
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  依赖: libxfixes3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  依赖: libxi6
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  依赖: libxrandr2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  依赖: libxrender1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  依赖: libxtst6
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  推荐: xul-ext-ubufox
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  推荐: libcanberra0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  推荐: libdbusmenu-glib4
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  推荐: libdbusmenu-gtk3-4
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  建议: fonts-lyx
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;修改较大的软件&#34;&gt;修改较大的软件
&lt;/h2&gt;&lt;p&gt;如果一个软件包修改程度较大，添加了新的依赖。
则可以通过先上述方式，在容器环境中 安装好已经查明的依赖包。
然后就可以用类似完全未知来源的软件方法来查找所需的软件依赖包了。&lt;/p&gt;
&lt;h2 id=&#34;未知依赖的软件&#34;&gt;未知依赖的软件
&lt;/h2&gt;&lt;h3 id=&#34;ldd找出缺失的依赖库&#34;&gt;ldd找出缺失的依赖库
&lt;/h3&gt;&lt;p&gt;通过 ldd 查看没有链接到的库。通过这些没有链接到的库名即可找到所需的依赖包。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;root@d444d316c665:/opt/lithium# ldd lithium
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;linux-vdso.so.1 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x00007ffdb53c8000&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;libX11.so.6 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; /lib/x86_64-linux-gnu/libX11.so.6 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x00007ff8ce496000&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;libcef.so &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; ./libcef.so &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x00007ff8c108a000&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;libgtk-3.so.0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; /lib/x86_64-linux-gnu/libgtk-3.so.0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x00007ff8c08d9000&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;libgdk-3.so.0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; /lib/x86_64-linux-gnu/libgdk-3.so.0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x00007ff8c07d4000&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;libgdk_pixbuf-2.0.so.0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; /lib/x86_64-linux-gnu/libgdk_pixbuf-2.0.so.0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x00007ff8c07ac000&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;libgobject-2.0.so.0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; /lib/x86_64-linux-gnu/libgobject-2.0.so.0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x00007ff8c074c000&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;libc.so.6 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; /lib/x86_64-linux-gnu/libc.so.6 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x00007ff8c00a9000&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;libxcb.so.1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; /lib/x86_64-linux-gnu/libxcb.so.1 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x00007ff8c007f000&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;libXtst.so.6 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; not found
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;libgbm.so.1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; not found
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;libpango-1.0.so.0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; /lib/x86_64-linux-gnu/libpango-1.0.so.0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x00007ff8bfb06000&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;libcairo.so.2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; /lib/x86_64-linux-gnu/libcairo.so.2 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x00007ff8bf9e3000&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/lib64/ld-linux-x86-64.so.2 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x00007ff8ce5d9000&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;libxshmfence.so.1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; not found
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;libepoxy.so.0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; /lib/x86_64-linux-gnu/libepoxy.so.0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x00007ff8bf6a9000&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ldd -v lithium # 可以查看更多详细信息&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此时可以通过 &lt;code&gt;grep&lt;/code&gt; 筛选来快速查看缺少的库
&lt;code&gt;ldd /package/path/bin | grep &amp;quot;not found&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;root@d444d316c665:/opt/lithium# ldd lithium | grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;not found&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;libXtst.so.6 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; not found
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;libgbm.so.1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; not found
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;libxshmfence.so.1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; not found
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;使用apt-file根据动态库找依赖包&#34;&gt;使用&lt;code&gt;apt-file&lt;/code&gt;根据动态库找依赖包
&lt;/h3&gt;&lt;p&gt;有关 &lt;code&gt;apt-file&lt;/code&gt; 的安装和使用，请参见我的 &lt;a class=&#34;link&#34; href=&#34;/p/apt/&#34; &gt;另一篇&lt;code&gt;apt&lt;/code&gt;笔记&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 以下两种方式都可以找到所需的依赖包&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dpkg -S libX11.so.6 &lt;span style=&#34;color:#75715e&#34;&gt;# 只能用来查找已经安装好的包所带的库，换言之只能用来查询已知库与软件包的关系，而不能查找未知的包&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-file search /usr/lib32/libstdc++.so.6
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;工具脚本&#34;&gt;工具脚本
&lt;/h1&gt;&lt;p&gt;理解了以上流程后，快速安装好一个软件的依赖库的步骤就可以比较方便的封装进一个个脚本来代替手动操作。
一次解决 &lt;code&gt;apt-file&lt;/code&gt; 环境，在安装软件时，如果速度很慢，可以通过我的另一个&lt;a class=&#34;link&#34; href=&#34;https://gitee.com/clh21/sh&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;脚本工具&lt;/a&gt;快速替换软件源为国内源&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt update; apt install apt-file; apt-file update
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;核心逻辑就是通过查找出来的动态库循环查找对应的软件包&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ldd /bin/bash | awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/=&amp;gt;/{print $(NF-1)}&amp;#39;&lt;/span&gt;  |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; read n; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; apt-file search $n; &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt; |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $1}&amp;#39;&lt;/span&gt; | sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/://&amp;#39;&lt;/span&gt; | sort | uniq
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;优化后，大概可以总结为如下脚本&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pkgsLithium&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;ldd lithium | grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;not found&amp;#34;&lt;/span&gt; | awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/=&amp;gt;/{print $(NF-3)}&amp;#39;&lt;/span&gt;  | &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; read n; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; apt-file search $n; &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt; | awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $1}&amp;#39;&lt;/span&gt; | sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/://&amp;#39;&lt;/span&gt; | sort | uniq&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pkgsGecko&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;ldd gecko/libxul.so | grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;not found&amp;#34;&lt;/span&gt; | awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/=&amp;gt;/{print $(NF-3)}&amp;#39;&lt;/span&gt;  | &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; read n; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; apt-file search $n; &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt; | awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $1}&amp;#39;&lt;/span&gt; | sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/://&amp;#39;&lt;/span&gt; | sort | uniq&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pkgsChrome&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;ldd libcef.so | grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;not found&amp;#34;&lt;/span&gt; | awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/=&amp;gt;/{print $(NF-3)}&amp;#39;&lt;/span&gt;  | &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; read n; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; apt-file search $n; &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt; | awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{print $1}&amp;#39;&lt;/span&gt; | sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/://&amp;#39;&lt;/span&gt; | sort | uniq&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$pkgsLithium&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; echo pkgsLithium
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$pkgsGecko&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; echo pkgsLithium  &lt;span style=&#34;color:#75715e&#34;&gt;# 此处包含有仅火狐才具备的动态库，注意不要安装，可以运行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$pkgsChrome&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; echo pkgsLithium
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>Shell Script Template</title>
        <link>/post/tech/bash.script/</link>
        <pubDate>Tue, 29 Mar 2022 00:22:18 +0800</pubDate>
        
        <guid>/post/tech/bash.script/</guid>
        <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# leehom Chen clh021@gmail.com&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 本脚本旨在提供一个用于快速编写 shell 脚本模板&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set -e
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 路径准备&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;OldPath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;pwd&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# SCRIPT_PATH=$(realpath &amp;#34;${BASH_SOURCE[0]}&amp;#34;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SCRIPT_PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;realpath &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$0&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ProjectPath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;dirname &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;dirname &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$SCRIPT_PATH&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pushd $ProjectPath &amp;gt; /dev/null
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$ProjectPath&lt;span style=&#34;color:#e6db74&#34;&gt;/.env&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  source &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$ProjectPath&lt;span style=&#34;color:#e6db74&#34;&gt;/.env&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# arch=`dpkg --print-architecture` # amd64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;arch&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;uname -m&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# x86_64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;当前系统架构为: &lt;/span&gt;$arch&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nowTime&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;date +%Y%m%d_%H%M%S&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pkgTime&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;git log -1 --format&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;%at | xargs -I&lt;span style=&#34;color:#f92672&#34;&gt;{}&lt;/span&gt; date -d @&lt;span style=&#34;color:#f92672&#34;&gt;{}&lt;/span&gt; +%Y%m%d_%H%M%S&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;LITHIUM_BIN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 为适应不同打包环境(仅拷贝脚本等文件而非整个项目即可打包)，本脚本会自动寻找浏览器程序进行容器打包&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 查找 lithium 程序&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;findLithiumBin&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; test -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$ProjectPath&lt;span style=&#34;color:#e6db74&#34;&gt;/lithium/lithium&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      LITHIUM_BIN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$ProjectPath&lt;span style=&#34;color:#e6db74&#34;&gt;/lithium/lithium&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; test -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$ProjectPath&lt;span style=&#34;color:#e6db74&#34;&gt;/../lithium/lithium&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      LITHIUM_BIN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$ProjectPath&lt;span style=&#34;color:#e6db74&#34;&gt;/../lithium/lithium&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; test -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$ProjectPath&lt;span style=&#34;color:#e6db74&#34;&gt;/build/dist/lithium/lithium&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      LITHIUM_BIN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$ProjectPath&lt;span style=&#34;color:#e6db74&#34;&gt;/build/dist/lithium/lithium&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; test -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$ProjectPath&lt;span style=&#34;color:#e6db74&#34;&gt;/../../lithium/lithium&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      LITHIUM_BIN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$ProjectPath&lt;span style=&#34;color:#e6db74&#34;&gt;/../../lithium/lithium&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;generateSha512sumFile&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  echo &amp;gt; SHA512SUMS
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; f in $1; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -r $f &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;date +%Y-%m-%d_%H:%M:%S&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;$f&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      sha512sum &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$f&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; SHA512SUMS
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Not find &lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt; files.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;display_usage&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;example:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &lt;/span&gt;$0&lt;span style=&#34;color:#e6db74&#34;&gt; -b -u https://baidu.com
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Usage:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    b build before test (default:false)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    a appid (default:12as.ji_a.com)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    u URL to open
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    g Whether use gecko engine
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    c Whether clear cache&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# \t\n&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 解析传递的参数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;_URL&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;_CLEAR&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;_BUILD&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;_USE_GECKO&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;_APPID&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;12as.ji_a.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;parseArg&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# check whether user had supplied -h or --help . If yes display usage&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt; $* &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;--help&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt;  $* &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-h&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      display_usage
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; getopts &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ba:u:cg&amp;#34;&lt;/span&gt; arg; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; $arg in
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      b&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; _BUILD&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;true ;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      a&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; _APPID&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;OPTARG&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; ;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      u&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; _URL&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;OPTARG&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; ;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      c&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; _CLEAR&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;true ;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      g&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; _USE_GECKO&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;true ;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      ?&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; display_usage ;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;esac&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;parseArg &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$@&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;showOptions&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_URL: &lt;/span&gt;$_URL&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_CLEAR: &lt;/span&gt;$_CLEAR&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_BUILD: &lt;/span&gt;$_BUILD&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_USE_GECKO: &lt;/span&gt;$_USE_GECKO&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_APPID: &lt;/span&gt;$_APPID&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;main&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  findLithiumBin
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; test -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$LITHIUM_BIN&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;&lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;找到了要打包的浏览器。&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$_CLEAR&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;正在清理缓存&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; -z &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$_URL&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      _URL&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://localhost:8000&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# /gecko.html&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;正在打开测试页面&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    export DEBUG_GECKO&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    COMMAND&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PROJ_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/build/dist/lithium/lithium &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;_OPTIONS&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;_URL&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$COMMAND&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;#strace -f -o &amp;#34;${PROJ_DIR}/tools/run-lithium-in-strace.log&amp;#34; \&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# $COMMAND | grep --color -E &amp;#39;^|JavaScript|error|x11ID|lastSet&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cd -
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;没有找到要打包的浏览器。&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;showOptions
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export LANG&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;en_US.UTF-8
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./child.python &amp;amp;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PID_P1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$!
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./detect &amp;amp;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PID_P2&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$!
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./main &amp;amp;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PID_P3&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$!
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./kit &amp;amp;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PID_P4&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$!
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;on_exit&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;clean on_exit, kill &lt;/span&gt;$PID_P1&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;$PID_P2&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;$PID_P3&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;$PID_P4&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	kill -9 &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PID_P4&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; :
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	kill -9 &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PID_P3&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; :
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	kill -9 &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PID_P2&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; :
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	kill -9 &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;PID_P1&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; :
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;trap on_exit EXIT SIGTERM SIGINT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;main
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;popd &amp;gt; /dev/null
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$OldPath&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Makefile&#34; data-lang=&#34;Makefile&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;.PHONY&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; init
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;init&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; .git/hooks/pre-push .air
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;.git/hooks/pre-push&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;makefile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	@echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#!/usr/bin/env bash&amp;#34;&lt;/span&gt; &amp;gt; $@
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	@echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;set -e&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; $@
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	@echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;make test&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; $@
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	@echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cd web &amp;amp;&amp;amp; npm run lint&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; $@
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	@chmod a+x $@
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;.PHONY&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; clean
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;clean&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	rm -rf dist/webdist
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	rm -rf web/dist
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	rm -rf web/node_modules
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;.PHONY&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; test
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;test&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	sh -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ulimit -n 20000; go test ./...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#TODO: move to k8s or jenkins
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;upload-cos&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	cd web &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; npm run build &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cd dist &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; coscmd upload -rs . /
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;.PHONY&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; .air
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;.air&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	go get -u github.com/cosmtrek/air
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	touch .air
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;.PHONY&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; dev
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dev&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; p1=&amp;#34;air&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dev&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; p2=[&amp;#34;sh&amp;#34;, &amp;#34;-c&amp;#34;, &amp;#34;cd web &amp;amp;&amp;amp; exec npm run serve&amp;#34;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;dev&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; .air test_data
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	@echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;import subprocess; [p.wait() for p in subprocess.Popen(${p1}),subprocess.Popen(${p2})]&amp;#39;&lt;/span&gt; | python2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;.PHONY&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; test_data
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;test_data&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	mkdir test_data
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;为什么 echo 出来的命令在terminal中直接执行没问题，而在脚本中执行有问题呢？
因为 terminal 中直接执行可以读取到当前用户所有环境变量，而脚本中执行却不可以。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 将输出的命令和脚本结果对比即可得到差异，(由公司产品无法切换中文输入法问题发现)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 可以通过 sudo -E 的方式保持所有环境变量(如果没有保持的权限会报错)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SCRIPT_PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;realpath &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$0&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;UID&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt; -gt &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt; ; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sudo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;SCRIPT_PATH&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    exit
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo sudo -u &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;SUDO_USER&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; env
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo -u &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;SUDO_USER&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; env
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;例子，是否可以切换中文输入法输入中文&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sudo apt install gedit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 命令行中执行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo gedit &lt;span style=&#34;color:#75715e&#34;&gt;# 不能&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo -u chenlianghong gedit &lt;span style=&#34;color:#75715e&#34;&gt;# 可以&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 脚本中执行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo -u &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;SUDO_USER&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; gedit &lt;span style=&#34;color:#75715e&#34;&gt;# 不可以&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo -E -u &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;SUDO_USER&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; gedit &lt;span style=&#34;color:#75715e&#34;&gt;# 不可以,输入法相关的环境变量没有带过来&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 有关输入法的问题，经过几轮研究(不同软件和不同发行版测试)，发现最好是直接模拟普通用户再来执行脚本，以完整获取环境变量&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;目前发现，不同发行版&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;可能还包含同样发行版的不同版本&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;对于环境变量的传递处理方式都不一样，所以目前只能当作是对产品运行环境的提前测试。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>lsof</title>
        <link>/post/tech/lsof/</link>
        <pubDate>Fri, 25 Mar 2022 20:17:18 +0800</pubDate>
        
        <guid>/post/tech/lsof/</guid>
        <description>&lt;h2 id=&#34;介绍&#34;&gt;介绍
&lt;/h2&gt;&lt;p&gt;linux环境下，任何事物都以文件的形式存在。不仅仅可以访问常规数据，还可以访问网络连接和硬件。系统在后台为应用程序分配一个文件描述符，文件描述符为应用程序与基础操作系统之间的交互提供了通用接口。应用程序打开文件的描述符列表提供了大量关于这个应用程序本身的信息，通过lsof工具能够查看这个列表对系统监测以及排错很有帮助。&lt;/p&gt;
&lt;p&gt;列出所有打开的文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@ecs-centos-7 ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# lsof | more&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;COMMAND     PID   TID    USER   FD      TYPE             DEVICE  SIZE/OFF       NODE NAME
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemd       &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;          root  cwd       DIR              253,1      &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt;          &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; /
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemd       &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;          root  rtd       DIR              253,1      &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt;          &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; /
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemd       &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;          root  txt       REG              253,1   &lt;span style=&#34;color:#ae81ff&#34;&gt;1624520&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;530313&lt;/span&gt; /usr/lib/systemd/systemd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemd       &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;          root  mem       REG              253,1     &lt;span style=&#34;color:#ae81ff&#34;&gt;20064&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;528340&lt;/span&gt; /usr/lib64/libuuid.so.1.3.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;......
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;输出信息&#34;&gt;输出信息
&lt;/h2&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;COMMAND(进程名) 、PID(进程ID)、USER(所属用户)、DEVICE(设备ID)、SIZE/OFF(进程大小)、NODE(文件的Inode号)、NAME(路径/链接)
FD(文件描述符):
  cwd	当前目录
  txt	txt文件
  rtd	root目录
  mem	内存映射文件
TYPE(文件类型):
  DIR	目录
  REG	普通文件
  CHR	字符
  a_inode	Inode文件
  FIFO	管道或者socket文件
  netlink	网络
  unknown	未知
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;是&#34;&gt;是
&lt;/h2&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;lsof   /filepath/file # 查看谁正在使用某个文件
lsof +D /filepath/filepath2/ # 递归查看某个目录的文件信息 # 使用了+D，对应目录下的所有子目录和文件都会被列出
lsof | grep ‘/filepath/filepath2/’ # 比使用+D选项，遍历查看某个目录的所有文件信息 的方法
lsof  -u username # 列出某个用户打开的文件信息 # -u 选项，u其实是user的缩写
lsof -c mysql # 列出某个程序所打开的文件信息 # -c 选项将会列出所有以mysql开头的程序的文件，其实你也可以写成lsof | grep mysql,但是第一种方法明显比第二种方法要少打几个字符了
lsof -c mysql -c apache # 列出多个程序多打开的文件信息
lsof -u test -c mysql # 列出某个用户以及某个程序所打开的文件信息
lsof -u ^root # 列出除了某个用户外的被打开的文件信息 ^这个符号在用户名之前，将会把是root用户打开的进程不让显示
lsof -p 1 # 通过某个进程号显示该进行打开的文件
lsof -p 123,456,789 # 列出多个进程号对应的文件信息
lsof -p ^1 # 列出除了某个进程号，其他进程号所打开的文件信息
lsof -i # 列出所有的网络连接
lsof  -i tcp # 列出所有tcp 网络连接信息
lsof  -i udp # 列出所有udp网络连接信息
lsof -i :3306 # 列出谁在使用某个端口
lsof -i TCP:3306
lsof -i udp:55 # 列出谁在使用某个特定的udp端口
lsof -i tcp:80 # 特定的tcp端口
lsof  -a -u test -i # 列出某个用户的所有活跃的网络端口
lsof -N # 列出所有网络文件系统
lsof -u # 域名socket文件
lsof -g 5555 # 某个用户组所打开的文件信息
lsof -d description(like 2) # 根据文件描述列出对应的文件信息
lsof -d 2-3 # 根据文件描述范围列出文件信息
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;实用命令&#34;&gt;实用命令
&lt;/h2&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;lsof `which httpd` //那个进程在使用apache的可执行文件
lsof /etc/passwd //那个进程在占用/etc/passwd
lsof /dev/hda6 //那个进程在占用hda6
lsof /dev/cdrom //那个进程在占用光驱
lsof -c sendmail //查看sendmail进程的文件使用情况
lsof -c courier -u ^zahn //显示出那些文件被以courier打头的进程打开，但是并不属于用户zahn
lsof -p 30297 //显示那些文件被pid为30297的进程打开
lsof -D /tmp 显示所有在/tmp文件夹中打开的instance和文件的进程。但是symbol文件并不在列
lsof -u1000 //查看uid是100的用户的进程的文件使用情况
lsof -utony //查看用户tony的进程的文件使用情况
lsof -u^tony //查看不是用户tony的进程的文件使用情况(^是取反的意思)
lsof -i //显示所有打开的端口
lsof -i:80 //显示所有打开80端口的进程
lsof -i -U //显示所有打开的端口和UNIX domain文件
lsof -i UDP@[url]www.akadia.com:123 //显示那些进程打开了到www.akadia.com的UDP的123(ntp)端口的链接
lsof -i tcp@ohaha.ks.edu.tw:ftp -r //不断查看目前ftp连接的情况(-r，lsof会永远不断的执行，直到收到中断信号,+r，lsof会一直执行，直到没有档案被显示,缺省是15s刷新)
lsof -i tcp@ohaha.ks.edu.tw:ftp -n //lsof -n 不将IP转换为hostname，缺省是不加上-n参数
&lt;/code&gt;&lt;/pre&gt;</description>
        </item>
        <item>
        <title>rsync</title>
        <link>/post/tech/rsync/</link>
        <pubDate>Sun, 20 Mar 2022 02:04:17 +0800</pubDate>
        
        <guid>/post/tech/rsync/</guid>
        <description>&lt;h2 id=&#34;scp&#34;&gt;scp
&lt;/h2&gt;&lt;p&gt;scp节约资源，系统负荷小，但断点续传是个问题&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;scp
scp [OPTION] SRC DEST
常用参数：
-r：递归拷贝目录
-q：不显示进度
-l：限制传输带宽，单位是kbits/s
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;示例&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scp -r -l &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt; path/to/dir user@192.168.1.1:/home/user/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;rsync&#34;&gt;rsync
&lt;/h2&gt;&lt;p&gt;scp 是通过ssh协议传输数据，如果是想传输一个很大的数据，有可能遇到服务器断电什么的悲剧问题，类似scp拷贝的另一个命令 rsync就可以实现意外中断后，下次继续传&lt;/p&gt;
&lt;p&gt;rsync速度更快，断点续传方便，但系统负荷大，尤其是传输很多文件的时候，硬盘I/O非常高。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意，传输的双方都必须安装 rsync
安装&lt;/p&gt;&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Debian&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo apt-get install rsync
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Red Hat&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo yum install rsync
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Arch Linux&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo pacman -S rsync
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;参数说明&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;rsync
rsync [OPTION] SRC DEST
常用参数：
-b、--backup：参数指定在删除或更新目标目录已经存在的文件时，将该文件更名后进行备份，默认行为是删除。更名规则是添加由--suffix参数指定的文件后缀名，默认是~
--progress： 显示拷贝进度
--partial：保留不完整文件，实现断点续传
--partial-dir=DIR：指定不完整文件的存储目录，而不是默认存储到目的地目录，比如--partial-dir=.rsync-partial。一般需要与--append或--append-verify配合使用。
-P：包含--progress和--partial
--rsh=ssh：使用ssh方式传输文件，注意：如果之前设置过ssh免密码登录，那么此时也就不需要密码了，非常方便
-v：-v参数表示输出细节。-vv表示输出更详细的信息，-vvv表示输出最详细的信息。
-a：归档模式。也就是以递归方式传输文件，并保持所有文件属性。
--append：参数指定文件接着上次中断的地方，继续传输。
--append-verify：参数跟--append参数类似，但会对传输完成后的文件进行一次校验。如果校验失败，将重新发送整个文件。
-z ：传输时进行压缩提高效率。
--bwlimit参数指定带宽限制，默认单位是 KB/s，比如--bwlimit=100
-c、--checksum参数改变rsync的校验方式。默认情况下，rsync 只检查文件的大小和最后修改日期是否发生变化，如果发生变化，就重新传输；使用这个参数以后，则通过判断文件内容的校验和，决定是否重新传输。
-i参数表示输出源目录与目标目录之间文件差异的详细情况。
--existing、--ignore-non-existing参数表示不同步目标目录中不存在的文件和目录。
--ignore-existing参数表示只要该文件在目标目录中已经存在，就跳过去，不再同步这些文件。
-u、--update参数表示同步时跳过目标目录中修改时间更新的文件，即不同步这些有更新的时间戳的文件。
-r：递归方式传输文件
--remove-source-files：参数表示传输成功后，删除发送方的文件。
-n：-n或--dry-run参数模拟执行的结果，不真的执行
--delete：默认只保证复制到，不保证相同所以不删除，添加此参数会删除不存在于源的内容，进而保证一致
--link-dest：参数用来指定同步时的基准目录
--size-only：参数表示只同步大小有变化的文件，不考虑文件修改时间的差异。
--port ：连接daemon时使用的端口号，默认为873端口。
--password-file ：daemon模式时的密码文件，可以从中读取密码实现非交互式。注意，这不是远程shell认证的密码，而是rsync模块认证的密码。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;示例&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rsync -P --rsh&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ssh home.tar user@192.168.1.2:/home/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rsync -P --rsh&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ssh user@192.168.1.2:/home/test.tar.gz /root
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -P: 是包含了 “–partial –progress”， 部分传送和显示进度&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 省略参数的写法 alias scpr=&amp;#34;rsync -P --rsh=ssh&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# scpr home.tar 192.168.205.34:/home/home.tar&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rsync -a source destination &lt;span style=&#34;color:#75715e&#34;&gt;# 复制目录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rsync -a source/ destination &lt;span style=&#34;color:#75715e&#34;&gt;# 复制目录的内容&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rsync -anv source/ destination &lt;span style=&#34;color:#75715e&#34;&gt;# 模拟执行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rsync -av --delete source/ destination &lt;span style=&#34;color:#75715e&#34;&gt;# 保证完全一致，删除多余文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 早期 rsync 不使用 SSH 协议，需要用-e参数指定协议&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 现在 下面的 -e ssh可以省略&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rsync -av -e ssh source/ user@remote_host:/destination
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 操作当前目录并排除部分目录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rsync -ave ssh &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --exclude .git &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --exclude dist &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  . &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  user@192.168.1.1:~/person/dev/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rsync -av --include&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*.txt&amp;#34;&lt;/span&gt; --exclude&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt; source/ destination &lt;span style=&#34;color:#75715e&#34;&gt;# 排除所有文件，只同步 txt 文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rsync -av -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ssh -p 2234&amp;#39;&lt;/span&gt; source/ user@remote_host:/destination &lt;span style=&#34;color:#75715e&#34;&gt;# -e 参数指定使用 2234 端口&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;jumphost&#34;&gt;JumpHost
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Upload&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scp -oProxyCommand&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ssh -W %h:%p JUMP_HOST&amp;#34;&lt;/span&gt; FILE_TO_SEND DEST_HOST:/home/gareth/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Download&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scp -oProxyCommand&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ssh -W %h:%p JUMP_HOST&amp;#34;&lt;/span&gt; DEST_HOST:FILE_TO_DOWNLOAD ~/Downloads/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Upload&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rsync -av -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ssh -A JUMP_HOST ssh&amp;#34;&lt;/span&gt; FILE_TO_SEND DEST_HOST:/home/gareth/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Download&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rsync -av -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ssh -A JUMP_HOST ssh&amp;#34;&lt;/span&gt; DEST_HOST:~/FILE_TO_DOWNLOAD ~/Downloads/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# file copy line: serverC(file) -&amp;gt; serverB -&amp;gt; serverA&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rsync -avzhP -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ssh -p portB -A user1@serverB ssh&amp;#34;&lt;/span&gt; user2@serverC:somedir/ localdir/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;rsync-协议&#34;&gt;rsync 协议
&lt;/h2&gt;&lt;p&gt;除了使用 SSH，如果另一台服务器安装并运行了 rsync 守护程序，则也可以用rsync://协议（默认端口873）进行传输。具体写法是服务器与目标目录之间使用双冒号分隔::。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rsync -av source/ 192.168.122.32::module/destination
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 地址中的module并不是实际路径名，而是 rsync 守护程序指定的一个资源名，由管理员分配。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rsync rsync://192.168.122.32
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 列出rsync 守护程序分配的所有 module 列表&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rsync -av source/ rsync://192.168.122.32/module/destination
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# rsync 协议除了使用双冒号，也可以直接用rsync://协议指定地址&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;增量备份&#34;&gt;增量备份
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rsync -a --delete --link-dest /compare/path /source/path /target/path
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;增量备份脚本&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;每一次同步都会生成一个新目录${BACKUP_DIR}/${DATETIME}，并将软链接${BACKUP_DIR}/latest指向这个目录。下一次备份时，就将${BACKUP_DIR}/latest作为基准目录，生成新的备份目录。最后，再将软链接${BACKUP_DIR}/latest指向新的备份目录。&lt;/p&gt;&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# A script to perform incremental backups using rsync&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set -o errexit
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set -o nounset
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set -o pipefail
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;readonly SOURCE_DIR&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;HOME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;readonly BACKUP_DIR&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/mnt/data/backups&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;readonly DATETIME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;date &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;+%Y-%m-%d_%H:%M:%S&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;readonly BACKUP_PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;BACKUP_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;DATETIME&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;readonly LATEST_LINK&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;BACKUP_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/latest&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir -p &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;BACKUP_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rsync -av --delete &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;SOURCE_DIR&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --link-dest &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;LATEST_LINK&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  --exclude&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.cache&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;BACKUP_PATH&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm -rf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;LATEST_LINK&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ln -s &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;BACKUP_PATH&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;LATEST_LINK&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>ps</title>
        <link>/post/tech/ps/</link>
        <pubDate>Sun, 13 Mar 2022 10:56:17 +0800</pubDate>
        
        <guid>/post/tech/ps/</guid>
        <description>&lt;h2 id=&#34;简介&#34;&gt;简介
&lt;/h2&gt;&lt;p&gt;ps （英文全拼：process status）命令用于显示当前进程的状态，类似于 windows 的任务管理器。
ps 的参数非常多, 在此仅列出几个常用的参数并大略介绍含义。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;-A 列出所有的进程与 -e 一样
-w 显示加宽可以显示较多的资讯
-au 显示较详细的资讯
-aux 显示所有包含其他使用者的行程
au(x) 输出格式 :

USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND
USER: 行程拥有者
PID: pid
%CPU: 占用的 CPU 使用率
%MEM: 占用的记忆体使用率
VSZ: 占用的虚拟记忆体大小
RSS: 占用的记忆体大小
TTY: 终端的次要装置号码 (minor device number of tty)
STAT: 该行程的状态:
  D: 无法中断的休眠状态 (通常 IO 的进程)
  R: 正在执行中
  S: 静止状态
  T: 暂停执行
  Z: 不存在但暂时无法消除
  W: 没有足够的记忆体分页可分配
  &amp;lt;: 高优先序的行程
  N: 低优先序的行程
  L: 有记忆体分页分配并锁在记忆体内 (实时系统或捱A I/O)
START: 行程开始时间
TIME: 执行的时间
COMMAND:所执行的指令

输出格式规划：

l ：较长、较详细的将该PID 的的信息列出；
j ：工作的格式 (jobs format)
-f ：做一个更为完整的输出。
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;use&#34;&gt;Use
&lt;/h2&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ps #显示当前进程
ps -A #显示所有进程
ps -ef #显示所有命令，连带命令行
ps -ef | egrep &amp;#39;(x11vnc|sshd)&amp;#39; # 查找与 x11vnc 和 sshd 相关的进程信息
ps -aux | egrep &amp;#39;(x11vnc|sshd)&amp;#39; # 查找与 x11vnc 和 sshd 相关的进程PID
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;other&#34;&gt;Other
&lt;/h2&gt;&lt;p&gt;要对系统中进程进行监测控制，查看状态，内存，CPU的使用情况，使用命令：/bin/ps&lt;/p&gt;
&lt;p&gt;（1）         ps ：是显示瞬间进程的状态，并不动态连续；&lt;/p&gt;
&lt;p&gt;（2）         top：如果想对进程运行时间监控，应该用 top 命令；&lt;/p&gt;
&lt;p&gt;（3）         kill 用于杀死进程或者给进程发送信号；&lt;/p&gt;
&lt;p&gt;（4）        查看文章最后的man手册，可以查看ps的每项输出的含义，to find: STANDARD FORMAT SPECIFIERS&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;===================================&lt;/span&gt;ps 的参数说明&lt;span style=&#34;color:#f92672&#34;&gt;=============================&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;l 长格式输出；
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;u 按用户名和启动时间的顺序来显示进程；
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;j 用任务格式来显示进程；
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;f 用树形格式来显示进程；
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a 显示所有用户的所有进程（包括其它用户）；
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x 显示无控制终端的进程；
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;r 显示运行中的进程；
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ww 避免详细参数被截断；
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-A 列出所有的进程
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-w 显示加宽可以显示较多的资讯
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-au 显示较详细的资讯
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-aux 显示所有包含其他使用者的进程
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-e 显示所有进程,环境变量
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-f 全格式
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-h 不显示标题
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-l 长格式
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-w 宽输出
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a   显示终端上地所有进程,包括其他用户地进程
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;r   只显示正在运行地进程
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x   显示没有控制终端地进程
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;我们常用的选项是组合是 aux 或 lax，还有参数 f 的应用。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pids 只列出进程标识符,之间运用逗号分隔.该进程列表必须在命令行参数地最后一个选项后面紧接着给出,中间不能插入空格.比如：ps -f1,4,5 显示的是进程ID为1,4,5的进程
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;下介绍长命令行选项,这些选项都运用“--”开头：
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--sort X&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;+|-&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; key &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;+|-&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; key &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;,…&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt; 从SORT KEYS段中选一个多字母键.“+”字符是可选地,因为默认地方向就是按数字升序或者词典顺序，“-”字符是逆序排序（即降序）.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;比如： ps -jax -sort&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;uid,-ppid,+pid.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--help 显示帮助信息.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--version 显示该命令地版本信息.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;在前面地选项说明中提到了排序键,接下来对排序键作进一步说明.需要注意地是排序中运用地值是ps运用地内部值,并非仅用于某些输出格式地伪值.排序键列表见下表.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;============&lt;/span&gt;排序键列表&lt;span style=&#34;color:#f92672&#34;&gt;==========================&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c cmd   可执行地简单名称
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C cmdline   完整命令行
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;f flags   长模式标志
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;g pgrp   进程地组ID
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;G tpgid   控制tty进程组ID
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;j cutime   累计用户时间
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;J cstime   累计系统时间
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;k utime   用户时间
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;K stime   系统时间
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;m min_flt   次要页错误地数量
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;M maj_flt   重点页错误地数量
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;n cmin_flt 累计次要页错误
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;N cmaj_flt 累计重点页错误
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;o session   对话ID
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p pid   进程ID
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;P ppid   父进程ID
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;r rss   驻留大小
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;R resident 驻留页
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;s size   内存大小&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;千字节&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;S share   共享页地数量
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;t tty   tty次要设备号
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;T start_time 进程启动地时间
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;U uid   UID
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;u user   用户名
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;v vsize   总地虚拟内存数量&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;字节&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;y priority 内核调度优先级
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;========================================&lt;/span&gt;ps aux 或 lax 输出的解释&lt;span style=&#34;color:#f92672&#34;&gt;=========================&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2、ps aux 或 lax 输出的解释
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;au&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 输出格式 :
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;USER: 进程所有者
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PID: 进程ID
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;%CPU: 占用的 CPU 使用率
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;%MEM: 占用的内存使用率
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;VSZ: 占用的虚拟内存大小
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RSS: 占用的内存大小
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TTY: 终端的次要装置号码 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;minor device number of tty&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;STAT: 进程状态:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;START: 启动进程的时间；
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TIME: 进程消耗CPU的时间；
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;COMMAND:命令的名称和参数；
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=========================================&lt;/span&gt;进程STAT状态&lt;span style=&#34;color:#f92672&#34;&gt;==================================&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;D 无法中断的休眠状态（通常 IO 的进程）；
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;R 正在运行，在可中断队列中；
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;S 处于休眠状态，静止状态；
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;T 停止或被追踪，暂停执行；
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;W 进入内存交换（从内核2.6开始无效）；
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;X 死掉的进程；
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Z 僵尸进程不存在但暂时无法消除；
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;W: 没有足够的记忆体分页可分配
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;WCHAN 正在等待的进程资源；
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;: 高优先级进程
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;N: 低优先序进程
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;L: 有记忆体分页分配并锁在记忆体内 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;即时系统或捱A I/O&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;，即,有些页被锁进内存
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;s 进程的领导者（在它之下有子进程）；
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;l 多进程的（使用 CLONE_THREAD, 类似 NPTL pthreads）；
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+ 位于后台的进程组；
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>apt</title>
        <link>/post/tech/apt/</link>
        <pubDate>Fri, 18 Feb 2022 09:01:47 +0800</pubDate>
        
        <guid>/post/tech/apt/</guid>
        <description>&lt;h2 id=&#34;apt-file&#34;&gt;apt-file
&lt;/h2&gt;&lt;p&gt;apt-file 是一个软件包，它索引可用存储库中软件包的内容，并允许您在所有可用软件包中搜索特定文件。
例如，假设您下载一个软件尝试运行它时，收到一条消息，告诉您无法找到特定的库文件。您就可以使用 apt-file 快速找出包含特定库的软件包可以解决问题，满足该依赖关系。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get install apt-file &lt;span style=&#34;color:#75715e&#34;&gt;# 安装&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-file update &lt;span style=&#34;color:#75715e&#34;&gt;# 更新数据库&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-file search &amp;lt;filename&amp;gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 可以查找包含指定文件的软件包&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# example:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# apt-file search libmp3lame.so.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# libmp3lame0: /usr/lib/x86_64-linux-gnu/libmp3lame.so.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 这告诉我们要满足文件libmp3lame.so.0的依赖关系，我们需要安装包libmp3lame0。您还会注意到，在结果中包名称的右侧，它告诉我们如果您安装该特定包，文件将被安装到哪里。在上面的示例中，通过安装软件包 libmp3lame0 ，我们搜索的文件“libmp3lame.so.0”的副本将安装到文件夹“/usr/lib/x86_64-linux-gnu/”中。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;另一个方法&lt;/p&gt;&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dpkg -S libmp3lame.so.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;libmp3lame0:amd64: /usr/lib/x86_64-linux-gnu/libmp3lame.so.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 展示了相同的基本信息。注意：apt-file适用于所有可用的软件包，无论是否安装。而dpkg -S仅查看已安装的软件包。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;apt-source-pkg&#34;&gt;apt source {pkg}
&lt;/h2&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;apt source {pkg} # 可以用来下载指定包源码
# example
# apt source bash # 下载 bash 包源码(到当前目录)
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;以上如何帮助我们解决一个问题&#34;&gt;以上如何帮助我们解决一个问题？
&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;我们希望查找获取窗口状态的函数，通过手册我们找到了一个函数(&lt;code&gt;gdk_window_get_state&lt;/code&gt;)但是使用上有问题，并非我们所熟知的最大化，最小化，全屏等状态，而是还重叠了聚焦，平铺等状态。
而我们记得 &lt;code&gt;xwininfo&lt;/code&gt; 工具函数是有打印过 窗口状态的。&lt;/p&gt;&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xwininfo -all
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xwininfo: Please &lt;span style=&#34;color:#66d9ef&#34;&gt;select&lt;/span&gt; the window about which you
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          would like information by clicking the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          mouse in that window.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xwininfo: Window id: 0x3400007 &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;html : xwininfo — Konsole&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Root window id: 0x752 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;the root window&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;has no name&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Parent window id: 0x18003b5 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;has no name&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; children.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Absolute upper-left X:  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Absolute upper-left Y:  &lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Relative upper-left X:  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Relative upper-left Y:  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Width: &lt;span style=&#34;color:#ae81ff&#34;&gt;1920&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Height: &lt;span style=&#34;color:#ae81ff&#34;&gt;1005&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Depth: &lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Visual: 0x73b
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Visual Class: TrueColor
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Border width: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Class: InputOutput
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Colormap: 0x3400006 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;not installed&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Bit Gravity State: NorthWestGravity
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Window Gravity State: NorthWestGravity
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Backing Store State: NotUseful
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Save Under State: no
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Map State: IsViewable
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Override Redirect State: no
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Corners:  +0+29  -0+29  -0-46  +0-46
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  -geometry 1920x1005+0+29
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Bit gravity: NorthWestGravity
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Window gravity: NorthWestGravity
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Backing-store hint: NotUseful
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Backing-planes to be preserved: 0xffffffff
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Backing pixel: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Save-unders: No
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Someone wants these events:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      KeyPress
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      KeyRelease
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      ButtonPress
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      ButtonRelease
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      EnterWindow
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      LeaveWindow
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      PointerMotion
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      ButtonMotion
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      Exposure
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      StructureNotify
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      FocusChange
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      PropertyChange
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      ColormapChange
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Do not propagate these events:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Override redirection?: No
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Window manager hints:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      Client accepts input or input focus: Yes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      Initial state is Normal State
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      Displayed on desktop &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      Window type:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          Normal
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      Window state:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          Maximized Vert
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          Maximized Horz
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          Focused
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      Process id: &lt;span style=&#34;color:#ae81ff&#34;&gt;160622&lt;/span&gt; on host dev-computer
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      Frame extents: 0, 0, 29, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Normal window size hints:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      User supplied size: &lt;span style=&#34;color:#ae81ff&#34;&gt;1920&lt;/span&gt; by &lt;span style=&#34;color:#ae81ff&#34;&gt;1005&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      Program supplied minimum size: &lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt; by &lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      Program supplied window gravity: StaticGravity
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  No zoom window size hints defined
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  No window shape defined
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  No border shape defined
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;那么我们能否直接找到 &lt;code&gt;xwininfo&lt;/code&gt; 源码，参考他们的思路呢？&lt;/p&gt;&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;~: apt search xwininfo &lt;span style=&#34;color:#75715e&#34;&gt;# 通过平时用的命令查找到包名&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Sorting... Done
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Full Text Search... Done
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x11-utils/stable,now 7.7+5 amd64 &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;installed,automatic&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  X11 utilities
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;~: apt source x11-utils &lt;span style=&#34;color:#75715e&#34;&gt;# 通过包名下载包源码(到当前目录)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Reading package lists... Done
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NOTICE: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;x11-utils&amp;#39;&lt;/span&gt; packaging is maintained in the &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Git&amp;#39;&lt;/span&gt; version control system at:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;https://salsa.debian.org/xorg-team/app/x11-utils.git
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Please use:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://salsa.debian.org/xorg-team/app/x11-utils.git
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to retrieve the latest &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;possibly unreleased&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; updates to the package.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Need to get 3,059 kB of source archives.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Get:1 https://mirrors.ustc.edu.cn/debian bullseye/main x11-utils 7.7+5 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;dsc&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;2,136 B&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Get:2 https://mirrors.ustc.edu.cn/debian bullseye/main x11-utils 7.7+5 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tar&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;3,057 kB&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Fetched 3,059 kB in 0s &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;7,412 kB/s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dpkg-source: info: extracting x11-utils in x11-utils-7.7+5
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dpkg-source: info: unpacking x11-utils_7.7+5.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;~: ls -lah
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x11-utils-7.7+5/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x11-utils_7.7+5.dsc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x11-utils_7.7+5.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;~: grep -rni &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Window state&amp;#34;&lt;/span&gt; x11-utils-7.7+5 &lt;span style=&#34;color:#75715e&#34;&gt;# 根据关键字搜索下载好的源码&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x11-utils-7.7+5/xwininfo/xwininfo.c:1736:               printf &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;      Window state:\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x11-utils-7.7+5/xprop/xprop.c:376:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\t\twindow state: ?&lt;/span&gt;$0&lt;span style=&#34;color:#e6db74&#34;&gt;=0(Withdrawn)?&lt;/span&gt;$0&lt;span style=&#34;color:#e6db74&#34;&gt;=1(Normal)?&lt;/span&gt;$0&lt;span style=&#34;color:#e6db74&#34;&gt;=3(Iconic)\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;~: vim x11-utils-7.7+5/xwininfo/xwininfo.cs&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;     &lt;span style=&#34;color:#a6e22e&#34;&gt;if&lt;/span&gt; (atom_net_wm_state) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;     prop &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;xcb_get_property_reply&lt;/span&gt; (dpy, w&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;wm_state_cookie, NULL);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;     &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (prop &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; (prop&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;type &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; XCB_NONE) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; (prop&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;value_len &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;         &lt;span style=&#34;color:#66d9ef&#34;&gt;xcb_atom_t&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;atoms &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;xcb_get_property_value&lt;/span&gt; (prop);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;         &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; atom_count &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; prop&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;value_len;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;         &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (atom_count &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1736&lt;/span&gt;         &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;      Window state:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;         &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; atom_count; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;             &lt;span style=&#34;color:#a6e22e&#34;&gt;Display_Atom_Name&lt;/span&gt; (atoms[i], &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_NET_WM_STATE_&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;         }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;     }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;     &lt;span style=&#34;color:#a6e22e&#34;&gt;free&lt;/span&gt; (prop);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;     }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>Netstat</title>
        <link>/post/tech/netstat/</link>
        <pubDate>Fri, 24 Dec 2021 15:56:49 +0800</pubDate>
        
        <guid>/post/tech/netstat/</guid>
        <description>&lt;p&gt;&lt;code&gt;netstat&lt;/code&gt; 作为调试网络问题的必备工具, 有些常用选项, 在这里记录一下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;显示路由表: netstat -r&lt;/li&gt;
&lt;li&gt;显示所有连接: netstat -a&lt;/li&gt;
&lt;li&gt;显示所有 TCP 连接: netstat -at&lt;/li&gt;
&lt;li&gt;显示所有 UDP 连接: netstat -au&lt;/li&gt;
&lt;li&gt;显示所有的 TCP 监听服务: netstat -lt&lt;/li&gt;
&lt;li&gt;列举网络接口: netstat -ie&lt;/li&gt;
&lt;li&gt;最常用选项: netstat -plent 显示本地 TCP 监听服务及其对应的进程信息&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Grep</title>
        <link>/post/tech/grep/</link>
        <pubDate>Fri, 24 Dec 2021 15:56:15 +0800</pubDate>
        
        <guid>/post/tech/grep/</guid>
        <description>&lt;h1 id=&#34;grep&#34;&gt;grep
&lt;/h1&gt;&lt;h2 id=&#34;参数&#34;&gt;参数
&lt;/h2&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; -A&amp;lt;显示行数&amp;gt;: 除了显示符合范本样式的那一列之外，并显示该行之后的内容。
 -B&amp;lt;显示行数&amp;gt;: 除了显示符合样式的那一行之外，并显示该行之前的内容。
 -C&amp;lt;显示行数&amp;gt;: 除了显示符合样式的那一行之外，并显示该行之前后的内容。
 -c: 统计匹配的行数
 -e: 实现多个选项间的逻辑or 关系
 -E: 扩展的正则表达式
 -f FILE: 从FILE获取PATTERN匹配
 -F: 相当于fgrep
 -i --ignore-case #忽略字符大小写的差别。
 -n: 显示匹配的行号
 -n: 搜索结果显示行号
 -o: 仅显示匹配到的字符串
 -q: 静默模式，不输出任何信息
 -r: 递归查找
 -s: 不显示错误信息。
 -v: 显示不被pattern 匹配到的行，相当于[^] 反向匹配
 -w: 匹配 整个单词
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;常用法&#34;&gt;常用法
&lt;/h2&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;查找不区分大小写
grep -rni memcpy .
在搜索结果中用反向匹配”-v“排除*.o.cmd文件的匹配
grep -rn memcpy | grep -v .o.cmd
使用多个-v依次对上一次的结果进行反向匹配
grep -rn memcpy | grep -v .o.cmd | grep -v .s.cmd | grep -v .o | grep -v .map
使用-Ev一次进行多个反向匹配搜索
grep -rn memcpy | grep -Ev &amp;#39;\.o\.cmd|\.s\.cmd|\.o|\.map&amp;#39;
使用”--exclude=GLOB“来指定排除某些格式的文件，如不在“*.cmd”，“*.o”和“*.map”中搜索
grep -rn --exclude=*.cmd --exclude=*.o --exclude=*.map memcpy
跟“--exclude=GLOB”类似的用法有“--include=GLOB”，从指定的文件中搜索，如只在“*.cmd”，“*.o”和“*.map”中搜索
grep -rn --include=*.cmd --include=*.o --include=*.map memcpy
“--include=GLOB”在不确定某些函数是否被编译时特别有用
grep -rn --include=*.o rpi_is_serial_active
不在某些指定的目录查找
grep -rn --exclude-dir=out memcpy
忽略多个目录
grep -rn --exclude-dir=out --exclude-dir=doc memcpy
查找精确匹配结果
grep -rnw memcpy .
查找作为单词分界的结果
grep -rn -E &amp;#34;(\b|_)memcpy(\b|_)&amp;#34;
查看查找结果的上下文想看宏定义“MEMCPY”匹配的前三行和后两行
grep -rn -B 3 -A 2 MEMCPY

find命令先找出makefile类文件，然后再从结果中搜索CFLAGS
find . -iname Makefile -o -iname *.inc -o -iname *.mk | xargs grep -rn CFLAGS
grep -rn --include=Makefile --include=*.inc --include=*.mk CFLAGS .

在linux目录中查找所有的*.h，并在这些文件中查找“SYSCALL_VECTOR”
find linux -name *.h | xargs grep &amp;#34;SYSCALL_VECTOR&amp;#34;
打印出所有包含”SYSCALL_VECTOR”字符串的文件名
find linux -name *.h | xargs grep -l &amp;#34;SYSCALL_VECTOR&amp;#34;
grep的选项-l只打印匹配的文件名
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;实战脚本&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#echo &amp;lt;&amp;lt;&amp;lt;EOT &amp;gt; test.txt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#aaaa&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#bbbbbb&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#AAAaaa&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#BBBBBASDABBDA&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#EOT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------sleepAndExecDebug&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  set +x
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  sleep &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  set -x
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tee test.txt &amp;gt; /dev/null &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;EOT
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;aaa
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;bbbbbb
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;AAAaaa
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;BBBBBASDABBDA
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EOT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aaa&amp;#34;&lt;/span&gt; &amp;gt; grep.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# cat grep.txt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep -A2 b test.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------sleepAndExecDebug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep -B1 b test.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------sleepAndExecDebug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep -C1 b test.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------sleepAndExecDebug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep -c aaa test.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------sleepAndExecDebug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep -e AAA -e bbb test.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------sleepAndExecDebug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep -in b test.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------sleepAndExecDebug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep -o ASDA test.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------sleepAndExecDebug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep -q aa test.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------sleepAndExecDebug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep -v aaa test.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------sleepAndExecDebug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep -w aaa test.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------sleepAndExecDebug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep -f grep.txt test.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;正则表达式&#34;&gt;正则表达式
&lt;/h2&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; . 匹配任意单个字符，不能匹配空行
  [] 匹配指定范围内的任意单个字符
  [^] 取反
  [:alnum:] 或 [0-9a-zA-Z]
  [:alpha:] 或 [a-zA-Z]
  [:upper:] 或 [A-Z]
  [:lower:] 或 [a-z]
  [:blank:] 空白字符（空格和制表符）
  [:space:] 水平和垂直的空白字符（比[:blank:]包含的范围广）
  [:cntrl:] 不可打印的控制字符（退格、删除、警铃...）
  [:digit:] 十进制数字 或[0-9]
  [:xdigit:]十六进制数字
  [:graph:] 可打印的非空白字符
  [:print:] 可打印字符
  [:punct:] 标点符号
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;实战&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;------------------------sleepAndExecDebug&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  set +x
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  sleep &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  set -x
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;aaa&amp;#34;&lt;/span&gt; &amp;gt; grep.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tee test.reg.txt &amp;gt; /dev/null &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;EOT
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;abc
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;123
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;//[
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EOT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tee test.reg2.txt &amp;gt; /dev/null &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;EOT
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ggle
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;gogle
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;google
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;goooooooooooooooooooooooooogle
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;gagle
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EOT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep . test.reg.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------sleepAndExecDebug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;a/&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; test.reg.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------sleepAndExecDebug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;^abc&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; test.reg.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------sleepAndExecDebug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt;:alnum:&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt; test.reg.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------sleepAndExecDebug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;a-z&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; test.reg.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------sleepAndExecDebug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt;:space:&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt; test.reg.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------sleepAndExecDebug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep &lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt;:punct:&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt; test.reg.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------sleepAndExecDebug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;g[o]*gle&amp;#34;&lt;/span&gt; test.reg2.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------sleepAndExecDebug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;g[o].*gle&amp;#34;&lt;/span&gt; test.reg2.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------sleepAndExecDebug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;g[o]\?gle&amp;#34;&lt;/span&gt; test.reg2.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------sleepAndExecDebug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;g[o]\+gle&amp;#34;&lt;/span&gt; test.reg2.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------sleepAndExecDebug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;g[o]\{1,2\}gle&amp;#34;&lt;/span&gt; test.reg2.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------sleepAndExecDebug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep -E &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;g[o]{10,}gle&amp;#34;&lt;/span&gt; test.reg2.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------sleepAndExecDebug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;egrep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;g[o]{,10}gle&amp;#34;&lt;/span&gt; test.reg2.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;位置锚定&#34;&gt;位置锚定
&lt;/h3&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  ^  行首锚定，用于模式的最左侧
  $  行尾锚定，用于模式的最右侧
  ^PATTERN$，用于模式匹配整行
  ^$ 空行
  ^[[:space:]].*$  空白行
  \&amp;lt; 或 \b  词首锚定，用于单词模式的左侧
  \&amp;gt; 或 \b  词尾锚定；用于单词模式的右侧
  \&amp;lt;PATTERN\&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;实战&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;------------------------sleepAndExecDebug&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  set +x
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  sleep &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  set -x
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tee test.reg3.txt &amp;gt; /dev/null &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;EOT
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;aaa
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;bbbbbb
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;acdfsddsfb
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EOT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------sleepAndExecDebug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep ^a test.reg3.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------sleepAndExecDebug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep b$ test.reg3.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------sleepAndExecDebug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep ^$ test.reg3.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------sleepAndExecDebug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep ^&lt;span style=&#34;color:#f92672&#34;&gt;[[&lt;/span&gt;:space:&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;.*$ test.reg3.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------sleepAndExecDebug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\&amp;lt;a.*b\&amp;gt;&amp;#34;&lt;/span&gt; test.reg3.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;分组和后向引用&#34;&gt;分组和后向引用
&lt;/h3&gt;&lt;p&gt;① 分组：() 将一个或多个字符捆绑在一起，当作一个整体进行处理
　　分组括号中的模式匹配到的内容会被正则表达式引擎记录于内部的变量中，这些变量的命名方式为: \1, \2, \3, &amp;hellip;
② 后向引用
引用前面的分组括号中的模式所匹配字符，而非模式本身
\1 表示从左侧起第1个左括号以及与之匹配右括号之间的模式所匹配到的字符
\2 表示从左侧起第2个左括号以及与之匹配右括号之间的模式所匹配到的字符，以此类推
&amp;amp; 表示前面的分组中所有字符&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/tech/grep/1.png&#34;
	width=&#34;487&#34;
	height=&#34;135&#34;
	srcset=&#34;/post/tech/grep/1_hu_6f7c7e74a1a1cc64.png 480w, /post/tech/grep/1_hu_12b16602ff2bb148.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;1.png&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;360&#34;
		data-flex-basis=&#34;865px&#34;
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;------------------------sleepAndExecDebug&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  set +x
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  sleep &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  set -x
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tee test.reg4.txt &amp;gt; /dev/null &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;EOT
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Hello world Hello world
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Heiii world Heiii world
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Hello world Heiii wwwww
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EOT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------sleepAndExecDebug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\(He\)&amp;#34;&lt;/span&gt; test.reg4.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------sleepAndExecDebug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\(He\).*\1&amp;#34;&lt;/span&gt; test.reg4.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;------------------------sleepAndExecDebug
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\(He\).*\(wo\).*\2&amp;#34;&lt;/span&gt; test.reg4.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;扩展正则表达式&#34;&gt;扩展正则表达式
&lt;/h3&gt;&lt;p&gt;（1）字符匹配：
.  任意单个字符
[]  指定范围的字符
[^] 不在指定范围的字符
次数匹配：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;：匹配前面字符任意次
?  : 0 或1次&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;：1 次或多次
{m} ：匹配m次 次
{m,n} ：至少m ，至多n次&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（2）位置锚定：
^ : 行首
$ : 行尾
&amp;lt;, \b : 语首
&amp;gt;, \b : 语尾
分组：()
后向引用：\1, \2, &amp;hellip;&lt;/p&gt;
&lt;p&gt;（3）总结
　　除了&amp;lt;, \b : 语首、&amp;gt;, \b : 语尾；使用其他正则都可以去掉\；&lt;/p&gt;
&lt;h1 id=&#34;ack&#34;&gt;ack
&lt;/h1&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# http://betterthangrep.com/documentation/
# http://codeseekah.com/2012/03/11/ack-vs-grep/
sudo apt install ack
# 速度非常快,因为它只搜索有意义的东西。
# 更友好的搜索，忽略那些不是你源码的东西。
# 为源代码搜索而设计，用更少的击键完成任务。
# 非常轻便，移植性好。
# 免费且开源

-c(统计)/ -i(忽略大小)/ -h(不显示名称)/
-l(只显文件名)/ -n(加行号)/ -v(显示不匹配)

文本搜索
ack hello
ack -i hello  # -i, --ignore-case   屏蔽大小写
                   # -I, --no-ignore-case  不屏蔽大小写(默认)
ack -v hello  # -v, --invert-match  反向匹配
ack -w hello  # -w, --word-regexp   单词匹配
ack -Q &amp;#39;hello*&amp;#39;    # -Q, --literal  引用所有元字符； PATTERN 是文字

文件搜索
ack --line=1       # 输出所有文件第二行
ack -l &amp;#39;hello&amp;#39;     # 包含的文件名
ack -L &amp;#39;print&amp;#39;     # 非包含文件名


ack hello --pager=&amp;#39;less -R&amp;#39;    # 以less形式展示
ack hello --noheading      # 不在头上显示文件
ack hello --nocolor        # 不对匹配字符着色


ack -f hello.py    # 查找全匹配文件
ack -g hello.py$    # 查找正则匹配文件
ack -g hello  --sort-files     #查找然后排序


ack --python hello #查找所有python文件
ack -G hello.py$ hello     # 查找匹配正则的文件

ack配置
# 设置排序
--sort-files
#设置文件过滤
--python
--html
--js
--conf
# 设置显示
--noheading
# 定义新的文件类型
--type-set=conf=.conf
# 智能识别大小写
--smart-case
# 设置以less形式展示，设定less参数
--pager=less -R -M --shift 5 -i
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;ag&#34;&gt;ag
&lt;/h1&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo apt-get install silversearcher-ag

ag main
ag &amp;#34;main(&amp;#34;
ag &amp;#34;main\(&amp;#34; src
ag &amp;#34;main\(&amp;#34; --ignore-dir 3rdparty
ag &amp;#34;main\(&amp;#34; --ignore-dir 3rdparty --ignore-dir doc
ag &amp;#34;http&amp;#34; -l | xargs sed -i &amp;#39;s/http/https/g&amp;#39;
grep -ri &amp;#34;http&amp;#34; * -l | xargs sed -i &amp;#39;s/http/https/g&amp;#39;

ag 另外其他很有用的選項是
ag -i 使用大小寫不敏感的匹配方式
ag -w 全詞匹配
ag -G &amp;#34;.+\.java&amp;#34; 搜索 java 類型的檔案
ag -l 顯示有匹配的檔案路徑
ag -L 顯示沒有任何匹配的檔案路徑
ag -v 反向匹配，將匹配到的資料排除

ag 搭配正規表達式
ag ^abc log.txt
ag abc$ log.txt
ag abc[0-9] log.txt
&lt;/code&gt;&lt;/pre&gt;</description>
        </item>
        <item>
        <title>Find</title>
        <link>/post/tech/find/</link>
        <pubDate>Fri, 24 Dec 2021 15:56:03 +0800</pubDate>
        
        <guid>/post/tech/find/</guid>
        <description>&lt;p&gt;find 是最常见最强大的查找命令，可找到任何想找的文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ find &amp;lt;目录&amp;gt; &amp;lt;条件&amp;gt; &amp;lt;动作&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ find path -option &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -print&lt;span style=&#34;color:#f92672&#34;&gt;][&lt;/span&gt;-exec -ok command&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find . -name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;my*&amp;#39;&lt;/span&gt; -ls &lt;span style=&#34;color:#75715e&#34;&gt;# 当前目录所有以 my 开头的文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find . -type -f -mmin -10 &lt;span style=&#34;color:#75715e&#34;&gt;# 10分钟内更新过的普通文件(-type f)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find ~ -mtime -7 &lt;span style=&#34;color:#75715e&#34;&gt;# 查找主目录一周内修改的文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find ~ -mtime +1 -mtime -7 &lt;span style=&#34;color:#75715e&#34;&gt;# 查找修改时间超过1天，不超过1周的文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -type: d 目录; f 文件; l 链接; s 套接字; p 命名管道; b 块设备;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find /usr -maxdepth &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; -iname &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*xml&amp;#34;&lt;/span&gt; | wc -l
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -maxdepth 最大深度&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -mindepth 最小深度&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find . -name runme -exec rm &lt;span style=&#34;color:#f92672&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 任何名为 runme 的文件都会被立即删除&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find . -name runme -ok rm &lt;span style=&#34;color:#f92672&#34;&gt;{}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#查找明为 runme 的文件提示后 y 确认删除&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find . -type f -perm &lt;span style=&#34;color:#ae81ff&#34;&gt;644&lt;/span&gt; -exec ls -l &lt;span style=&#34;color:#f92672&#34;&gt;{}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 查找当前目录中文件属主有读写权限，且文件属组用户和其它用户有读权限的文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;locate 其实是 &lt;code&gt;find -name&lt;/code&gt; 的另一种写法&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;locate /etc/sh &lt;span style=&#34;color:#75715e&#34;&gt;# etc 下以 sh 开头的文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;locate ~/m &lt;span style=&#34;color:#75715e&#34;&gt;# 主目录下 m 开头的文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;类似的查找命令还有: &lt;code&gt;which type&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;找到root用户的文件全部改成www-data用户的&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# find . -user root -group root -exec chown 1000:1000 {} \;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# find . -user root -group root -exec chown www-data:www-data {} \;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# find . -user root -group root | xargs chown 1000:1000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find . -user root -group root | xargs chown www-data:www-data
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# find . -user root -exec chown www-data {} \;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 更快的权限设置&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# chownspeed www-data /var/www&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; chownspeed&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;#find /var/www -not -user www-data -execdir chown www-data {} \+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  find &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$2&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; -not -user &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; -execdir chown &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>Binwalk</title>
        <link>/post/tech/binwalk/</link>
        <pubDate>Fri, 24 Dec 2021 15:55:36 +0800</pubDate>
        
        <guid>/post/tech/binwalk/</guid>
        <description>&lt;p&gt;本周一 &lt;code&gt;安恒萌新粉丝群：928102972&lt;/code&gt;分享的工具为 &lt;code&gt;binwalk&lt;/code&gt;。 &lt;code&gt;Binwalk&lt;/code&gt;是一款快速、易用，用于分析，逆向工程和提取固件映像的工具。简单易用，完全自动化脚本，并通过自定义签名，提取规则和插件模块，还重要一点的是可以轻松地扩展。 在CTF的MISC类题型和IOT安全的固件解包分析中广泛应用，可以大大提高效率。该工具对linux支持较好，对于windows功能支持较差，有条件的童鞋可以在linux上使用练习该神器。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;binwalk&lt;/code&gt;github项目：https://github.com/ReFirmLabs/binwalk &lt;code&gt;binwalk&lt;/code&gt;的wiki：https://github.com/devttys0/binwalk/wiki &lt;code&gt;binwalk&lt;/code&gt;是一款 &lt;code&gt;python&lt;/code&gt;编写的工具，目前 &lt;code&gt;python2.x&lt;/code&gt;和 &lt;code&gt;python3.x&lt;/code&gt;都较好的支持，不过在 &lt;code&gt;Python3.x&lt;/code&gt;中运行速度更快。在 &lt;code&gt;kali&lt;/code&gt;里面已经预装了，在其他发行版 &lt;code&gt;linux&lt;/code&gt;中安装也很简单，不过在 &lt;code&gt;windows&lt;/code&gt;上会稍微繁琐一些。 &lt;code&gt;windows&lt;/code&gt;下的安装和使用方法可以参考 &lt;code&gt;pcat&lt;/code&gt;大表哥的方法https://www.cnblogs.com/pcat/p/5256288.html。 &lt;code&gt;wiki&lt;/code&gt;上对于安装使用已经说的非常详细了。建议英文好的童鞋可以直接看官方的资料。网上资料也很多，这里就简单的翻译总结一下。 这里使用 &lt;code&gt;kali linux&lt;/code&gt;演示（基于Debian的linux发行版开发的一个渗透数字取证的系统） &lt;strong&gt;注意：&lt;/strong&gt; 如果原来系统已经安装了旧版 &lt;code&gt;binwalk&lt;/code&gt;，这里建议先卸载再安装新版本，以防止出现不兼容和API冲突等问题。&lt;/p&gt;
&lt;p&gt;$ sudo su
$ binwalk
$ sudo apt-get remove binwalk
$ sudo apt-get update
$ git clone &lt;a class=&#34;link&#34; href=&#34;https://github.com/ReFirmLabs/binwalk&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/ReFirmLabs/binwalk&lt;/a&gt;
$ cd binwalk
$ sudo python setup.py install
$ sudo apt-get install python-lzma&lt;/p&gt;
&lt;p&gt;如果执行命令的中途出现了 &lt;code&gt;无法获得锁/var/lib/dpkg/lock-open(11:资源暂时不可用)ubuntu安装vim及遇到的错误处理&lt;/code&gt;，执行下面命令:&lt;/p&gt;
&lt;p&gt;sudo rm /var/cache/apt/archives/lock
sudo rm /var/lib/dpkg/lock&lt;/p&gt;
&lt;p&gt;&lt;code&gt;binwalk&lt;/code&gt;还需要安装一些依赖项，具体的大家可以去 &lt;code&gt;Wilk&lt;/code&gt;上查看，如果是 &lt;code&gt;Debian/Ubuntu&lt;/code&gt;源代码里已经给了一键自动安装依赖项的脚本，运行命令：&lt;/p&gt;
&lt;p&gt;$ sudo ./deps.sh&lt;/p&gt;
&lt;h3 id=&#34;安装ida插件&#34;&gt;安装IDA插件
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;binwalk&lt;/code&gt;还可以安装 &lt;code&gt;binwalk IDA&lt;/code&gt;插件，这个功能对于做固件逆向的功能是非常方便的。安装：&lt;/p&gt;
&lt;p&gt;$ python setup.py idainstall --idadir = / home / user / ida&lt;/p&gt;
&lt;p&gt;卸载：&lt;/p&gt;
&lt;p&gt;$ python setup.py idauninstall --idadir = / home / user / ida&lt;/p&gt;
&lt;h3 id=&#34;显示binwalk帮助输出-h-help&#34;&gt;显示binwalk帮助输出(`-h, &amp;ndash;help)
&lt;/h3&gt;&lt;p&gt;$ binwalk --help&lt;/p&gt;
&lt;h3 id=&#34;扫描固件&#34;&gt;扫描固件
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;binwalk&lt;/code&gt;的主要功能 - 也是迄今为止最受欢迎的功能。 &lt;code&gt;Binwalk&lt;/code&gt;可以扫描许多不同嵌入式文件类型和文件系统的固件映像，只需给它一个要扫描的文件列表：&lt;/p&gt;
&lt;p&gt;$ binwalk firmware.bin&lt;/p&gt;
&lt;p&gt;DECIMAL       HEX         DESCRIPTION
-------------------------------------------------------------------------------------------------------------------
0             0x0         DLOB firmware header, boot partition: &amp;ldquo;dev=/dev/mtdblock/2&amp;rdquo;
112           0x70        LZMA compressed data, properties: 0x5D, dictionary size: 33554432 bytes, uncompressed size: 3797616 bytes
1310832       0x140070    PackImg section delimiter tag, little endian size: 13644032 bytes; big endian size: 3264512 bytes
1310864       0x140090    Squashfs filesystem, little endian, version 4.0, compression:lzma, size: 3264162 bytes,  1866 inodes, blocksize: 65536 bytes, created: Tue Apr  3 04:12:22 2012&lt;/p&gt;
&lt;p&gt;这个功能也是一个常用的功能，在CTF中很多文件分解的 &lt;code&gt;misc题&lt;/code&gt;都可以使用 &lt;code&gt;binwalk&lt;/code&gt;提高效率相对于使用 &lt;code&gt;winhex&lt;/code&gt;这类工具。 可以使用 &lt;code&gt;-e&lt;/code&gt;选项提取它在固件映像中找到的任何文件。&lt;/p&gt;
&lt;p&gt;$ binwalk -e firmware.bin&lt;/p&gt;
&lt;h3 id=&#34;签名分析--b--signature&#34;&gt;签名分析( &lt;code&gt;-B,--signature&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;对目标文件执行签名分析，如果未指定其他分析选项，则这是默认值。 如果希望将签名分析与其他分析器（例如 - 熵）结合使用，请使用此选项：&lt;/p&gt;
&lt;p&gt;$ binwalk --signature firmware.bin&lt;/p&gt;
&lt;p&gt;DECIMAL       HEX         DESCRIPTION
-------------------------------------------------------------------------------------------------------------------
0             0x0         DLOB firmware header, boot partition: &amp;ldquo;dev=/dev/mtdblock/2&amp;rdquo;
112           0x70        LZMA compressed data, properties: 0x5D, dictionary size: 33554432 bytes, uncompressed size: 3797616 bytes
1310832       0x140070    PackImg section delimiter tag, little endian size: 13644032 bytes; big endian size: 3264512 bytes
1310864       0x140090    Squashfs filesystem, little endian, version 4.0, compression:lzma, size: 3264162 bytes,  1866 inodes, blocksize: 65536 bytes, created: Tue Apr  3 04:12:22 2012&lt;/p&gt;
&lt;h3 id=&#34;熵分析--e--entropy&#34;&gt;熵分析( &lt;code&gt;-E,--entropy&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;对输入文件执行熵分析，打印原始熵数据并生成熵图。 熵分析可以与&amp;ndash;signature，&amp;ndash; raw或&amp;ndash;opcodes结合使用，以便更好地理解目标文件。 用于识别签名扫描可能遗漏的有趣数据部分：&lt;/p&gt;
&lt;p&gt;$ binwalk -E firmware.bin
DECIMAL       HEXADECIMAL     ENTROPY
--------------------------------------------------------------------------------
0             0x0             Rising entropy edge (0.983751)
1155072       0x11A000        Falling entropy edge (0.000000)
1181696       0x120800        Rising entropy edge (0.990546)
3780608       0x39B000        Falling entropy edge (0.000000)&lt;/p&gt;
&lt;p&gt;与&amp;ndash;verbose选项结合使用时，将打印为每个数据块计算的原始熵：&lt;/p&gt;
&lt;p&gt;$ binwalk -E --verbose firmware.bin&lt;/p&gt;
&lt;p&gt;DECIMAL         HEX             ENTROPY ANALYSIS
--------------------------------------------------------------------------------
0               0x0             0.964914
1024            0x400           0.978591
2048            0x800           0.973048
3072            0xC00           0.976195
4096            0x1000          0.976072
5120            0x1400          0.976734
6144            0x1800          0.976861
7168            0x1C00          0.972385
8192            0x2000          0.972518
&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt; 如果是使用 &lt;code&gt;python API&lt;/code&gt;调用熵分析，需要禁用图形（&amp;ndash;nplot）以防止脚本过早退出。&lt;/p&gt;
&lt;h3 id=&#34;保存熵图为png文件并不显示--j--save&#34;&gt;保存熵图为PNG文件并不显示( &lt;code&gt;-J,--save&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;$ binwalk --save -E firmware.bin&lt;/p&gt;
&lt;h3 id=&#34;搜索字符串--r--rawstring&#34;&gt;搜索字符串( &lt;code&gt;-R，--raw=&amp;lt;string&amp;gt;&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;搜索字符串包括转义的八进制和/或十六进制值。 需要搜索自定义的原始字节序列时，可以使用此选项：&lt;/p&gt;
&lt;p&gt;$ binwalk -R &amp;ldquo;\x00\x01\x02\x03\x04&amp;rdquo; firmware.bin&lt;/p&gt;
&lt;p&gt;DECIMAL       HEX         DESCRIPTION
-------------------------------------------------------------------------------------------------------------------
377654        0x5C336     Raw string signature&lt;/p&gt;
&lt;h3 id=&#34;搜索各种cpu架构常见的可执行操作码--a--opcodes&#34;&gt;搜索各种CPU架构常见的可执行操作码( &lt;code&gt;-A,--opcodes&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;binwalk&lt;/code&gt;可以在指定文件中搜索各种CPU架构常见的可执行操作码。&lt;strong&gt;注：&lt;/strong&gt; 某些操作码签名很短，因此容易产生误报结果。 当需要在文件中找到可执行代码时，如果需要确定可执行文件的体系结构时，可以使用此选项：&lt;/p&gt;
&lt;p&gt;$ binwalk -A firmware.bin&lt;/p&gt;
&lt;p&gt;DECIMAL         HEX             DESCRIPTION
-------------------------------------------------------------------------------------------------------------------
268             0x10C           MIPS instructions, function prologue
412             0x19C           MIPS instructions, function prologue
636             0x27C           MIPS instructions, function prologue
812             0x32C           MIPS instructions, function epilogue
920             0x398           MIPS instructions, function epilogue
948             0x3B4           MIPS instructions, function prologue
1056            0x420           MIPS instructions, function epilogue
1080            0x438           MIPS instructions, function prologue
1356            0x54C           MIPS instructions, function epilogue
1392            0x570           MIPS instructions, function prologue
1836            0x72C           MIPS instructions, function epilogue
2012            0x7DC           MIPS instructions, function prologue
2260            0x8D4           MIPS instructions, function epilogue
2512            0x9D0           MIPS instructions, function prologue
2552            0x9F8           MIPS instructions, function epilogue&lt;/p&gt;
&lt;h3 id=&#34;搜索签名的自定义魔术签名文件--m--magicfile&#34;&gt;搜索签名的自定义魔术签名文件( &lt;code&gt;-m，--magic=&amp;lt;file&amp;gt;&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;加载备用魔术签名文件而不是默认文件。&lt;/p&gt;
&lt;p&gt;$ binwalk -m ./foobar.mgc firmware.bin&lt;/p&gt;
&lt;p&gt;DECIMAL         HEX             DESCRIPTION
-------------------------------------------------------------------------------------------------------------------
268             0x10C           Foobar
412             0x19C           Foobar
636             0x27C           Foobar&lt;/p&gt;
&lt;h3 id=&#34;禁用智能签名匹配--b--dumb&#34;&gt;禁用“智能”签名匹配( &lt;code&gt;-b,--dumb&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;智能签名匹配可能导致错过其他有效签名时（例如，通过jump-to-offset关键字），可以使用：&lt;/p&gt;
&lt;p&gt;$ binwalk -b firmware.bin&lt;/p&gt;
&lt;h3 id=&#34;显示所有包括误标记为无效结果--i--invalid&#34;&gt;显示所有包括误标记为无效结果( &lt;code&gt;-I,--invalid&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;binwalk将有效结果误标记为无效结果，并产生大量垃圾输出，可以使用：&lt;/p&gt;
&lt;p&gt;$ binwalk -I firmware.bin&lt;/p&gt;
&lt;h3 id=&#34;签名排除过滤器--x--excludefilter&#34;&gt;签名排除过滤器( &lt;code&gt;-x，--exclude=&amp;lt;filter&amp;gt;&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;不过滤被过滤器匹配的签名，过滤器是小写的正则表达式; 可以指定多个过滤器。第一行与指定过滤器匹配的魔术签名根本不会被加载; 因此，使用此过滤器可以帮助减少签名扫描时间。用于排除不需要或不感兴趣的结果：&lt;/p&gt;
&lt;p&gt;$ binwalk -x &amp;lsquo;mach-o&amp;rsquo; -x &amp;lsquo;^hp&amp;rsquo; firmware.bin # exclude HP calculator and OSX mach-o signatures&lt;/p&gt;
&lt;h3 id=&#34;签名过滤器--y--includefilter&#34;&gt;签名过滤器( &lt;code&gt;-y，--include=&amp;lt;filter&amp;gt;&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;过滤被过滤器匹配的签名，过滤器是小写的正则表达式; 可以指定多个过滤器。只会加载第一行与指定过滤器匹配的魔术签名; 因此，使用此过滤器可以帮助减少签名扫描时间。仅搜索特定签名或签名类型时很有用：&lt;/p&gt;
&lt;p&gt;$ binwalk -y &amp;lsquo;filesystem&amp;rsquo; firmware.bin # only search for filesystem signatures&lt;/p&gt;
&lt;h3 id=&#34;识别反汇编代码的cpu体系结构--y--disasm&#34;&gt;识别反汇编代码的CPU体系结构( &lt;code&gt;-Y，--disasm&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;capstone&lt;/code&gt;反汇编程序识别文件中包含的可执行代码的CPU体系结构。 使用此扫描指定 &lt;code&gt;--verbose&lt;/code&gt;将另外打印反汇编的指令。 通常比 &lt;code&gt;--opcodes&lt;/code&gt;执行的简单签名分析更健壮，但支持更少的体系结构：&lt;/p&gt;
&lt;p&gt;$ binwalk --disasm firmware.bin&lt;/p&gt;
&lt;p&gt;DECIMAL       HEXADECIMAL     DESCRIPTION
--------------------------------------------------------------------------------
428           0x1AC           MIPS executable code, 32/64-bit, little endian, at least 750 valid instructions&lt;/p&gt;
&lt;h3 id=&#34;设置反汇编结果的最小连续指令数--t--minsn&#34;&gt;设置反汇编结果的最小连续指令数( &lt;code&gt;-T,--minsn&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;将&amp;ndash;disasm结果的最小连续指令数设置为有效。默认值为500条指令：&lt;/p&gt;
&lt;p&gt;$ binwalk --minsn=1200 -Y firmware.bin&lt;/p&gt;
&lt;p&gt;DECIMAL       HEXADECIMAL     DESCRIPTION
--------------------------------------------------------------------------------
428           0x1AC           MIPS executable code, 32/64-bit, little endian, at least 1250 valid instructions&lt;/p&gt;
&lt;h3 id=&#34;反汇编结果连续执行--k--continue&#34;&gt;反汇编结果连续执行( &lt;code&gt;-k,--continue&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;指示 - disasm不会停在第一个结果：&lt;/p&gt;
&lt;p&gt;$ binwalk --continue -Y firmware.bin&lt;/p&gt;
&lt;p&gt;DECIMAL       HEXADECIMAL     DESCRIPTION
--------------------------------------------------------------------------------
428           0x1AC           MIPS executable code, 32/64-bit, little endian, at least 1250 valid instructions
1048576       0x100000        MIPS executable code, 32/64-bit, little endian, at least 1250 valid instructions
&amp;hellip;&lt;/p&gt;
&lt;h3 id=&#34;忽略entropy生成的熵图中的图例--q--nngend&#34;&gt;忽略&amp;ndash;entropy生成的熵图中的图例( &lt;code&gt;-Q，--nngend&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;$ binwalk --entropy -Q firmware.bin&lt;/p&gt;
&lt;h3 id=&#34;禁止对图形熵地块entropy扫描--n--nplot&#34;&gt;禁止对图形熵地块&amp;ndash;entropy扫描( &lt;code&gt;-N，--nplot&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;$ binwalk --entropy -N firmware.bin&lt;/p&gt;
&lt;h3 id=&#34;设置上升沿熵触发电平--h--highfloat&#34;&gt;设置上升沿熵触发电平( &lt;code&gt;-H，--high=&amp;lt;float&amp;gt;&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;仅在与&amp;ndash;entropy一起使用时有效。指定的值应介于0和1之间：&lt;/p&gt;
&lt;p&gt;$ binwalk --entropy -H .9 firmware.bin&lt;/p&gt;
&lt;h3 id=&#34;设置下降沿熵触发电平--l--lowfloat&#34;&gt;设置下降沿熵触发电平( &lt;code&gt;-L，--low=&amp;lt;float&amp;gt;&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;仅在与&amp;ndash;entropy一起使用时有效。指定的值应介于0和1之间：&lt;/p&gt;
&lt;p&gt;$ binwalk --entropy -L .3 firmware.bin&lt;/p&gt;
&lt;h3 id=&#34;十六进制字节彩色输出--w--hexdump&#34;&gt;十六进制字节彩色输出( &lt;code&gt;-W，--hexdump&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;绿色 - 所有文件中的这些字节都相同 红色 - 这些字节在所有文件中都不同 蓝色 - 这些字节在某些文件中只有不同 可以任意数量的任意文件; 其他有用的选项是&amp;ndash;block， - offset， - length和&amp;ndash;terse：&lt;/p&gt;
&lt;p&gt;$ binwalk -W --block = 8 --length = 64 firmware1.bin firmware2.bin firmware3.bin&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt; 如果您需要页面输出安装most实用程序，因为它更好地支持彩色输出的分页。 仅在&amp;ndash;hexdump期间显示包含 &lt;code&gt;绿色&lt;/code&gt;字节的行：&lt;/p&gt;
&lt;p&gt;$ binwalk -W --green firmware1.bin firmware2.bin firmware3.bin&lt;/p&gt;
&lt;p&gt;仅在&amp;ndash;hexdump期间显示包含 &lt;code&gt;红色&lt;/code&gt;字节的行：&lt;/p&gt;
&lt;p&gt;$ binwalk -W --red firmware1.bin firmware2.bin firmware3.bin&lt;/p&gt;
&lt;p&gt;仅在&amp;ndash;hexdump期间显示包含 &lt;code&gt;蓝色&lt;/code&gt;字节的行：&lt;/p&gt;
&lt;p&gt;$ binwalk -W --blue firmware1.bin firmware2.bin firmware3.bin&lt;/p&gt;
&lt;h3 id=&#34;提取签名扫描期间识别的文件--d--ddtypeextcmd&#34;&gt;提取签名扫描期间识别的文件( &lt;code&gt;-D,--dd=&amp;lt;type[:ext[:cmd]]&amp;gt;&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;提取 - 签名扫描期间识别的文件。可以指定多个&amp;ndash;dd选项。 type是签名描述中包含的小写字符串（支持正则表达式） ext是保存数据磁盘时使用的文件扩展名（默认为none） cmd是在将数据保存到磁盘后执行的可选命令 默认情况下，文件名是找到签名的十六进制偏移量，除非在签名本身中指定了备用文件名。 以下示例演示如何使用&amp;ndash;dd选项指定提取规则，该选项将提取包含文件扩展名为“zip”的字符串“zip archive”的任何签名，然后执行“unzip”命令。此外，PNG图像按原样提取，带有&amp;rsquo;png&amp;rsquo;文件扩展名。 请注意使用&amp;rsquo;％e&amp;rsquo;占位符。执行unzip命令时，此占位符将替换为解压缩文件的相对路径：&lt;/p&gt;
&lt;p&gt;$ binwalk -D &amp;lsquo;zip archive:zip:unzip %e&amp;rsquo; -D &amp;lsquo;png image:png&amp;rsquo; firmware.bin&lt;/p&gt;
&lt;h3 id=&#34;签名扫描期间递归扫描提取的文件--m--matryoshka&#34;&gt;签名扫描期间递归扫描提取的文件( &lt;code&gt;-M,--matryoshka&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;只有有效使用时&amp;ndash;extract或&amp;ndash;dd。&lt;/p&gt;
&lt;p&gt;$ binwalk -e -M firmware.bin&lt;/p&gt;
&lt;h3 id=&#34;设置提取数据的输出目录--c--directorystr&#34;&gt;设置提取数据的输出目录( &lt;code&gt;-C,--directory=&amp;lt;str&amp;gt;&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;默认值：当前工作目录 仅适用与使用时&amp;ndash;extract或&amp;ndash;dd选项：&lt;/p&gt;
&lt;p&gt;$ binwalk -e --directory = / tmp firmware.bin&lt;/p&gt;
&lt;h3 id=&#34;限制matryoshka递归深度--d--depthint&#34;&gt;限制&amp;ndash;matryoshka递归深度( &lt;code&gt;-d,--depth=&amp;lt;int&amp;gt;&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;限制&amp;ndash;matryoshka递归深度。默认情况下，深度设置为8。 仅在与&amp;ndash;matryoshka选项一起使用时才适用：&lt;/p&gt;
&lt;p&gt;$ binwalk -Me -d 5 firmware.bin&lt;/p&gt;
&lt;h3 id=&#34;限制从目标文件中分割出的数据大小--j--sizeint&#34;&gt;限制从目标文件中分割出的数据大小( &lt;code&gt;-j,--size=&amp;lt;int&amp;gt;&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;默认情况下，没有大小限制。 只有有效使用时&amp;ndash;extract或&amp;ndash;dd。 请注意，此选项不限制外部提取实用程序提取/解压缩的数据大小。 从具有有限磁盘空间的大型文件中雕刻或提取数据时非常有用：&lt;/p&gt;
&lt;p&gt;$ binwalk -e --size=0x100000 firmware.bin&lt;/p&gt;
&lt;h3 id=&#34;清除无法处理的零文件和文件--r--rm&#34;&gt;清除无法处理的零文件和文件( &lt;code&gt;-r,--rm&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;只有有效使用时&amp;ndash;extract或&amp;ndash;dd。 用于清除在提取期间从目标文件复制的误报文件：&lt;/p&gt;
&lt;p&gt;$ binwalk -e -r firmware.bin&lt;/p&gt;
&lt;h3 id=&#34;刻录数据但不自动提取解压缩该数据--z--carve&#34;&gt;刻录数据但不自动提取/解压缩该数据( &lt;code&gt;-z,--carve&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;只有有效使用时&amp;ndash;extract或&amp;ndash;dd。&lt;/p&gt;
&lt;p&gt;$ binwalk -e --carve firmware.bin&lt;/p&gt;
&lt;h3 id=&#34;暴力识别原始deflate压缩数据流--x--deflate&#34;&gt;暴力识别原始deflate压缩数据流( &lt;code&gt;-X,--deflate&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;用于从具有损坏/修改/缺少标头的文件中恢复数据。可以与&amp;ndash;lzma结合使用。 此扫描可能很慢，因此使用&amp;ndash;offset和/或&amp;ndash;length限制扫描区域非常有用：&lt;/p&gt;
&lt;p&gt;$ binwalk --deflate -o 0x100 -l 10000 firmware.bin&lt;/p&gt;
&lt;h3 id=&#34;暴力识别原始lzma压缩数据流--z--lzma&#34;&gt;暴力识别原始LZMA压缩数据流( &lt;code&gt;-Z,--lzma&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;用于从具有损坏/修改/缺少标头的文件中恢复数据。可以与&amp;ndash;deflate结合使用。 由于LZMA压缩选项的数量不同，此扫描可能非常慢，因此使用&amp;ndash;offset和/或&amp;ndash;length限制扫描区域非常有用：&lt;/p&gt;
&lt;p&gt;$ binwalk --lzma -o 0x100 -l 10000 firmware.bin&lt;/p&gt;
&lt;h3 id=&#34;常见压缩选项搜索压缩流--p--partial&#34;&gt;常见压缩选项搜索压缩流( &lt;code&gt;-P,--partial&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;可以显着提高&amp;ndash;lzma扫描的速度：&lt;/p&gt;
&lt;p&gt;$ binwalk --partial -Z -o 0x100 -l 10000 firmware.bin&lt;/p&gt;
&lt;h3 id=&#34;在扫描到第一个结果停止--s--stop&#34;&gt;在扫描到第一个结果停止( &lt;code&gt;-S,--stop&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;与&amp;ndash;lzma和/或&amp;ndash;deflate选项一起使用时，这将在显示第一个结果后停止扫描：&lt;/p&gt;
&lt;p&gt;$ binwalk --stop -Z firmware.bin&lt;/p&gt;
&lt;h3 id=&#34;设置目标文件中要分析的字节数--l--lengthint&#34;&gt;设置目标文件中要分析的字节数( &lt;code&gt;-l,--length=&amp;lt;int&amp;gt;&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;$ binwalk --length=0x100 firmware.bin&lt;/p&gt;
&lt;h3 id=&#34;设置起始偏移量--o--offsetint&#34;&gt;设置起始偏移量( &lt;code&gt;-o,--offset=&amp;lt;int&amp;gt;&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;设置开始分析目标文件的起始偏移量。还可以指定负偏移（距文件结束的距离）：&lt;/p&gt;
&lt;p&gt;$ binwalk --offset=0x100 firmware.bin&lt;/p&gt;
&lt;h3 id=&#34;设置所有打印偏移的基址--o--baseint&#34;&gt;设置所有打印偏移的基址( &lt;code&gt;-O,--base=&amp;lt;int&amp;gt;&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;此值将添加到所有打印结果的原始文件偏移量中：&lt;/p&gt;
&lt;p&gt;$ binwalk --base=0x80001000 firmware.bin&lt;/p&gt;
&lt;h3 id=&#34;设置分析期间使用的块大小--k--blockint&#34;&gt;设置分析期间使用的块大小( &lt;code&gt;-K,--block=&amp;lt;int&amp;gt;&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;设置分析期间使用的块大小（以字节为单位）。 与 - 熵一起使用时，这决定了在熵分析期间分析的每个块的大小。 与&amp;ndash;hexdump一起使用时，它设置十六进制输出中每行显示的字节数。&lt;/p&gt;
&lt;p&gt;$ binwalk --diff -K 8 firmware1.bin firmware2.bin&lt;/p&gt;
&lt;h3 id=&#34;扫描之前反转n个字节--g--swapint&#34;&gt;扫描之前反转n个字节( &lt;code&gt;-g,--swap=&amp;lt;int&amp;gt;&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;$ binwalk --swap=2 firmware.bin&lt;/p&gt;
&lt;h3 id=&#34;扫描结果记录到指定的文件--f--logfile&#34;&gt;扫描结果记录到指定的文件( &lt;code&gt;-f,--log=&amp;lt;file&amp;gt;&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;除非指定了&amp;ndash;csv，否则保存到日志文件的数据将与终端中显示的数据相同。 即使指定了&amp;ndash;quiet，数据也将保存到日志文件中：&lt;/p&gt;
&lt;p&gt;$ binwalk --log=binwalk.log firmware.bin&lt;/p&gt;
&lt;h3 id=&#34;日志数据以csv格式保存--c--csv&#34;&gt;日志数据以CSV格式保存( &lt;code&gt;-c,--csv&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;如果与&amp;ndash;cast或&amp;ndash;hexdump一起使用，则忽略此选项。 仅在与&amp;ndash;log选项结合使用时才有效：&lt;/p&gt;
&lt;p&gt;$ binwalk --log=binwalk.log --csv firmware.bin&lt;/p&gt;
&lt;h3 id=&#34;格式输出适应终端窗口宽度--t--term&#34;&gt;格式输出适应终端窗口宽度( &lt;code&gt;-t,--term&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;使输出更具可读性:&lt;/p&gt;
&lt;p&gt;$ binwalk --term firmware.bin&lt;/p&gt;
&lt;p&gt;DECIMAL       HEX         DESCRIPTION
-------------------------------------------------------------------------------------------------------
0             0x0         DLOB firmware header, boot partition: &amp;ldquo;dev=/dev/mtdblock/2&amp;rdquo;
112           0x70        LZMA compressed data, properties: 0x5D, dictionary size: 33554432
bytes, uncompressed size: 3805904 bytes
1310832       0x140070    PackImg section delimiter tag, little endian size: 15741184 bytes; big
endian size: 3272704 bytes
1310864       0x140090    Squashfs filesystem, little endian, version 4.0, compression:lzma,
size: 3268870 bytes,  1860 inodes, blocksize: 65536 bytes, created:
Mon Apr 22 04:56:42 2013&lt;/p&gt;
&lt;h3 id=&#34;禁用输出到stdout--q--quiet&#34;&gt;禁用输出到stdout( &lt;code&gt;-q,--quiet&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;与&amp;ndash;log或verbose扫描一起使用时最方便，例如&amp;ndash;entropy：&lt;/p&gt;
&lt;p&gt;$ binwalk --quiet -f binwalk.log firmware.bin&lt;/p&gt;
&lt;h3 id=&#34;启用详细输出包括目标文件md5和扫描时间戳--v--verbose&#34;&gt;启用详细输出，包括目标文件MD5和扫描时间戳( &lt;code&gt;-v,--verbose&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;如果指定了两次，如果还指定了&amp;ndash;extract，则将显示外部提取实用程序的输出：&lt;/p&gt;
&lt;p&gt;$ binwalk --verbose firmware.bin&lt;/p&gt;
&lt;p&gt;Scan Time:     2013-11-10 21:04:04
Signatures:    265
Target File:   firmware.bin
MD5 Checksum:  6b91cdff1b4f0134b24b7041e079dd3e&lt;/p&gt;
&lt;p&gt;DECIMAL       HEX         DESCRIPTION
-------------------------------------------------------------------------------------------------------------------
0             0x0         DLOB firmware header, boot partition: &amp;ldquo;dev=/dev/mtdblock/2&amp;rdquo;
112           0x70        LZMA compressed data, properties: 0x5D, dictionary size: 33554432 bytes, uncompressed size: 3805904 bytes
1310832       0x140070    PackImg section delimiter tag, little endian size: 15741184 bytes; big endian size: 3272704 bytes
1310864       0x140090    Squashfs filesystem, little endian, version 4.0, compression:lzma, size: 3268870 bytes,  1860 inodes, blocksize: 65536 bytes, created: Mon Apr 22 04:56:42 2013&lt;/p&gt;
&lt;h3 id=&#34;扫描名称与给定正则表达式字符串匹配的文件--a--fincludestr&#34;&gt;扫描名称与给定正则表达式字符串匹配的文件( &lt;code&gt;-a,--finclude=&amp;lt;str&amp;gt;&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;当与组合&amp;ndash;matryoshka和&amp;ndash;extract&lt;/p&gt;
&lt;p&gt;$ binwalk -M -e --finclude=&amp;rsquo;\.bin$&amp;rsquo; firmware.bin&lt;/p&gt;
&lt;h3 id=&#34;不要扫描名称与给定正则表达式字符串匹配的文件--p--fexcludestr&#34;&gt;不要扫描名称与给定正则表达式字符串匹配的文件( &lt;code&gt;-p,--fexclude=&amp;lt;str&amp;gt;&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;当与组合&amp;ndash;matryoshka和&amp;ndash;extract&lt;/p&gt;
&lt;p&gt;$ binwalk -M -e --fexclude=&amp;rsquo;\.pdf$&amp;rsquo; firmware_archive.zip&lt;/p&gt;
&lt;h3 id=&#34;指定的端口号上启用状态服务器--s--statusint&#34;&gt;指定的端口号上启用状态服务器( &lt;code&gt;-s,--status=&amp;lt;int&amp;gt;&lt;/code&gt;)
&lt;/h3&gt;&lt;p&gt;状态服务器仅侦听localhost并打印出与当前扫描状态相关的人类可读ASCII数据。您可以使用telnet，netcat等连接到它。&lt;/p&gt;
&lt;p&gt;$ binwalk --status=8080 firmware_archive.zip&lt;/p&gt;
&lt;h3 id=&#34;总结&#34;&gt;总结
&lt;/h3&gt;&lt;p&gt;binwalk还有很多功能，比如python API，和IDA配合使用，以及实际应用会遇到很多小技巧，能大大提高取证，逆向固件和CTF misc的效率。当然也存在特别多的问题，也欢迎童鞋们去使用解决这些问题提交 &lt;code&gt;issue&lt;/code&gt;。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Awk</title>
        <link>/post/tech/awk/awk/</link>
        <pubDate>Fri, 24 Dec 2021 15:54:47 +0800</pubDate>
        
        <guid>/post/tech/awk/awk/</guid>
        <description>&lt;p&gt;awk输出指定列
awk &amp;lsquo;{print $0}&amp;rsquo; file    #打印所有列
awk &amp;lsquo;{print $1}&amp;rsquo; file  #打印第一列
awk &amp;lsquo;{print $1, $3}&amp;rsquo; file   #打印第一和第三列
cat file | awk &amp;lsquo;{print $3, $1}&amp;rsquo;   #打印第三列和第一列，注意先后顺序。
cat file | awk &amp;lsquo;{print $3, $NF}&amp;rsquo; #打印第三列和最后一列
awk -F &amp;ldquo;:&amp;rdquo; &amp;lsquo;{print $1, $3}&amp;rsquo;  #以“:”为分隔符分割列，然后打印第一列和第三列
$0表示所有列&lt;/p&gt;
&lt;p&gt;-F：指定分隔符&lt;/p&gt;
&lt;p&gt;$(NF)表示最后一列，$(NF-1)表示倒数第二列，以此类推。&lt;/p&gt;
&lt;p&gt;特殊案例：如果我想打印N列之后的所有列，该怎么办?&lt;/p&gt;
&lt;p&gt;解决方法是，把前N列都赋值为空，然后打印所有列。&lt;/p&gt;
&lt;p&gt;awk &amp;lsquo;{for(i=1;i&amp;lt;=N;i++){$i=&amp;quot;&amp;quot;}; print $0}&amp;rsquo; file&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.jianshu.com/u/242f108d3236&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;img src=&#34;https://cdn2.jianshu.io/assets/default_avatar/13-394c31a9cb492fcb39c27422ca7d2815.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;0.6372016.03.07 14:24:15字数 3,558阅读 28,100&lt;/p&gt;
&lt;p&gt;&amp;lsquo;#Gun awk的相关用法&lt;/p&gt;
&lt;h4 id=&#34;awk的工作原理&#34;&gt;awk的工作原理
&lt;/h4&gt;&lt;p&gt;一次读取一行文本，按输入分隔符进行切片，切成多个组成部分，将每片直接保存在内建的变量中，$1,$2,$3&amp;hellip;.，引用指定的变量，可以显示指定断，或者多个断。如果需要显示全部的，需要使用$0来引用。可以对单个片断进行判断，也可以对所有断进行循环判断。其默认分隔符为空格&lt;/p&gt;
&lt;h4 id=&#34;awk的基本用法格式&#34;&gt;awk的基本用法格式
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;h6 id=&#34;awk-options-program-file&#34;&gt;awk [options] &amp;lsquo;program&amp;rsquo; FILE&amp;hellip;&amp;hellip;
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;语句之间用分号分隔&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h6 id=&#34;options&#34;&gt;[options]
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-F&lt;/code&gt; : 指明输入时用到的字段分隔符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v var=VALUE&lt;/code&gt; : 自定义变量
&lt;ul&gt;
&lt;li&gt;在awk中变量的引用不需要加&lt;code&gt;$&lt;/code&gt;，而是直接引用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;awk用法的简要介绍&#34;&gt;awk用法的简要介绍
&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;
&lt;h6 id=&#34;第一种模式&#34;&gt;第一种模式
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;awk [options] &amp;lsquo;scripts&amp;rsquo; file1,file2&amp;hellip;..&lt;/p&gt;
&lt;p&gt;在这种模式中，scripts主要是命令的堆砌，对输入的文本行进行处理，通过命令print,printf或是输出重定向的方式显示出来，这里经常用到的知识点是：awk的内置变量，以及命令print和printf的使用&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h6 id=&#34;第二种模式&#34;&gt;第二种模式
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;awk [options] &amp;lsquo;PATTERN{action}&amp;rsquo; file,file2&amp;hellip;..&lt;/p&gt;
&lt;p&gt;在这种模式中，最重要的是5种模式和5种action的使用，以及awk的数组的使用和内置函数&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;第一种模式-1&#34;&gt;第一种模式
&lt;/h3&gt;&lt;h6 id=&#34;1print&#34;&gt;1、print
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;1、各项目之间使用逗号隔开，而输出时则以空白字符分隔&lt;/li&gt;
&lt;li&gt;2、输出的Item可以为字符串或数值，当前记录的字段（如$1）、变量或awk的表达式，数值会先转换为字符串，而后再输出&lt;/li&gt;
&lt;li&gt;3、print命令后面的Item可以省略，此时其功能相当于print $0,因此，如果想输出空白行，则需要使用print&amp;quot;&amp;quot;&lt;/li&gt;
&lt;li&gt;4、如果引用变量$1或其他的，是不能使用引号引起来&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;2内置变量&#34;&gt;2、内置变量
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;FS&lt;/code&gt; : input field seperator,输入的分隔符，默认为空白字符&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;OFS&lt;/code&gt;: output field seperator,输出的分隔符，默认为空白字符&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;RS&lt;/code&gt; : input record seperator,输入的换行符&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ORS&lt;/code&gt;: output record seperator,输出时的换行符&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;NF&lt;/code&gt; : number of field ,字段个数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;awk &amp;lsquo;{print NF}&amp;rsquo; /etc/fstab :打印每行的最后一个字段为第几个字段，这里是数量引用，不是对应的值引用&lt;/li&gt;
&lt;li&gt;awk &amp;lsquo;{print $NF}&amp;rsquo; /etc/fstab : 打印每行中的最后一个字段&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;NR&lt;/code&gt; : number of record,文件中的行数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;awk &amp;lsquo;{print NR}&amp;rsquo; /etc/fstab: 打印行号，其会个行号都显示&lt;/li&gt;
&lt;li&gt;awk &amp;lsquo;END{print NR}&amp;rsquo; /etc/fstab: 显示文本的总行数，其只是在文本处理完成后，只显示一次行号&lt;/li&gt;
&lt;li&gt;awk &amp;lsquo;{print NR}&amp;rsquo; file1 file2 : 会每把所有文档进行总的编号，而不是单独对文件进行编号&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;FNR&lt;/code&gt; : 对每个文件进行行数单独编号&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;awk &amp;lsquo;{print FNR}&amp;rsquo; file1 file2 : 会对每个文件的行数进行单独的编号显示&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;FILENAME&lt;/code&gt; : awk命令所处理的文件的名称&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;awk &amp;lsquo;{print FILENAME}&amp;rsquo; file1 : 显示当前文件名，但会每行显示一次&lt;/li&gt;
&lt;li&gt;awk &amp;lsquo;END{print FILENAME}&amp;rsquo; file1 : 显示当前文件名，但只会显示一次&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ARGC&lt;/code&gt; : 命令行中参数的个数，其awk命令也算一个参数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;awk &amp;lsquo;END{print ARGC}&amp;rsquo; /etc/fstab : 显示共有几个参数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ARGV&lt;/code&gt; : 其是一个数组，保存的是命令行所给定的各参数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;awk &amp;lsquo;END{print ARGV[0]}&amp;rsquo; /etc/fstab : 显示第一个参数，默认第一个参数个awk命令本身&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;3自定义变量&#34;&gt;3、自定义变量
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;-v var=VALUE&lt;/code&gt; : 在选项位置定义&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;awk &#39;BEGIN{test=&amp;quot;hello&amp;quot;;print test}&#39;&lt;/code&gt; : 在program中定义&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;4printf命令&#34;&gt;4、printf命令
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;其格式化输出：printf FORMAT,item1,item2&amp;hellip;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;要点&#34;&gt;要点：
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;1、其与print命令最大不同是，printf需要指定format&lt;/li&gt;
&lt;li&gt;2、printf后面的字串定义内容需要使用双引号引起来&lt;/li&gt;
&lt;li&gt;3、字串定义后的内容需要使用&amp;quot;,&amp;ldquo;分隔，后面直接跟Item1,item2&amp;hellip;.&lt;/li&gt;
&lt;li&gt;4、format用于指定后面的每个item的输出格式&lt;/li&gt;
&lt;li&gt;5、printf语句不会自动打印换行符，\n&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;格式符&#34;&gt;格式符
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;%c&lt;/code&gt;: 显示字符的ASCII码&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%d&lt;/code&gt;,&lt;code&gt;%i&lt;/code&gt; : 显示十进制整数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%e&lt;/code&gt;,&lt;code&gt;%E&lt;/code&gt;: 科学计数法数值显示&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%f&lt;/code&gt; : 显示为浮点数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%g&lt;/code&gt;,&lt;code&gt;%G&lt;/code&gt;: 以科学数法或浮点形式显示数值&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%s&lt;/code&gt;: 显示字符串&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%u&lt;/code&gt;: 无符号整数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%%&lt;/code&gt;: 显示%号自身，相当于转义&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;修饰符&#34;&gt;修饰符
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;N&lt;/code&gt; : 显示宽度&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;-&lt;/code&gt; : 左对齐（默认为右对齐）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;+&lt;/code&gt; : 显示数值符号&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;awk -F: &amp;lsquo;{printf &amp;ldquo;%s\n&amp;rdquo;,$1}&amp;rsquo; /etc/fstab&lt;/li&gt;
&lt;li&gt;awk -F: &amp;lsquo;{printf &amp;ldquo;username: %s,UID:%d\n&amp;rdquo;,$1,$3}&amp;rsquo; /etc/passwd&lt;/li&gt;
&lt;li&gt;awk -F: &amp;lsquo;{printf &amp;ldquo;username: %-20s shell: %s\n&amp;rdquo;,$1,$NF}&amp;rsquo; /etc/passwd&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;输出重定向&#34;&gt;输出重定向
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;print items &amp;gt; &amp;ldquo;output-file&amp;rdquo;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;print items &amp;raquo; &amp;ldquo;output-file&amp;rdquo;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;print items | command&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  特殊文件描述符：
  /dev/stdin :标准输入
  /dev/stdout:标准输出
  /dev/stderr:错误输出
  /dev/fd/N : 某特定文件描述符，如/dev/stdin就相当于/dev/fd/0
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;示例&lt;/li&gt;
&lt;li&gt;awk -F: &amp;lsquo;{printf &amp;ldquo;%-15s %i\n&amp;rdquo;,$1,$3 &amp;gt; &amp;ldquo;/dev/stderr&amp;rdquo;}&amp;rsquo; /etc/passwd&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;第二种模式-1&#34;&gt;第二种模式
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;awk [option] &amp;lsquo;PATTERN{action}&amp;rsquo; file1,file2&amp;hellip;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;pattern的使用&#34;&gt;PATTERN的使用
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;REGEXP&lt;/code&gt;：正则表达式，格式为&lt;code&gt;/regular expression/&lt;/code&gt;,仅处理能够被此处模式匹配到的行&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  awk &amp;#39;/^UUID/{print $1}&amp;#39; /etc/fstab
  awk &amp;#39;!/^UUID/{print $1}&amp;#39; /etc/fstab
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;relational expression&lt;/code&gt;:表达式，其值非0或为非空字符时满足条件,用运算符&lt;code&gt;~&lt;/code&gt;(匹配)和&lt;code&gt;!~&lt;/code&gt;（不匹配）&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  $1 ~ /foo/ 或者 $1 == &amp;#34;magedu&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Ranges&lt;/code&gt; : 指定匹配范围，格式为&lt;code&gt;/pat1/,/pat2/&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  awk -F: &amp;#39;{NR&amp;gt;=2&amp;amp;&amp;amp;&amp;lt;=10){print $1}&amp;#39; /etc/passwd
  awk -F: /^root/,/^myuser/{print $1}&amp;#39; /etc/passwd
  注意：不支持直接给出数字的格式
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;BEGIN/END模式&lt;/code&gt; : 特殊模式，仅在awk命令执行前运行一次或结束前运行一次&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  awk -F: &amp;#39;BEGIN{print &amp;#34;Username    ID    Shell&amp;#34;}{printf &amp;#34;%-10s%-10s%-20s\n&amp;#34;,$1,$3,$7}&amp;#39; /etc/passwd ：先打印一个表头
  awk -F: &amp;#39;BEGIN{print &amp;#34;username   ID     Shell&amp;#34;}{printf &amp;#34;%-10s%-10s%-20s\n&amp;#34;,$1,$3,$7}END{print &amp;#34;end of report.&amp;#34;} /etc/passwd ：打印一个表尾
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Empty(空模式)：匹配任意输入行&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  /正则表达式/：使用通配符的扩展集。
  关系表达式：可以用下面运算符表中的关系运算符进行操作，可以是字符串或数字的比较，如$2&amp;gt;$1选择第二个字段比第一个字段长的行。
  模式匹配表达式：
  模式，模式：指定一个行的范围。该语法不能包括BEGIN和END模式。
  BEGIN：让用户指定在第一条输入记录被处理之前所发生的动作，通常可在这里设置全局变量。
  END：让用户在最后一条输入记录被读取之后发生的动作。
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;常见的action&#34;&gt;常见的Action
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;1）Expressions&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Control statements :if while等&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Compound statements:组合语句&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Input statements&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Output statements&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;控制语句&#34;&gt;控制语句
&lt;/h5&gt;&lt;h6 id=&#34;1if-else&#34;&gt;1、if-else
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;语法：if (condition){then-body} else{[else-body]}&lt;/li&gt;
&lt;li&gt;示例：
&lt;ul&gt;
&lt;li&gt;awk -F: &amp;lsquo;{if($3&amp;gt;=1000)print $1,$3}&amp;rsquo; /etc/passwd&lt;/li&gt;
&lt;li&gt;awk -F: &amp;lsquo;{if($3&amp;gt;=1000){printf &amp;ldquo;Common user: %s\n&amp;rdquo;,$1} else {printf &amp;ldquo;root or sysuser: %s\n&amp;rdquo;,$1}}&amp;rsquo; /etc/passwd&lt;/li&gt;
&lt;li&gt;awk -F: &amp;lsquo;{if($NF==&amp;quot;/bin/bash&amp;rdquo;)print $1}&amp;rsquo; /etc/passwd&lt;/li&gt;
&lt;li&gt;awk -F: &amp;lsquo;{if(NF&amp;gt;5) print $0}&amp;rsquo; /etc/fstab&lt;/li&gt;
&lt;li&gt;df -h | awk -F[%] &amp;lsquo;/^/dev/{print $1}&amp;rsquo; | awk {if($NF&amp;gt;=20) print $1}&amp;rsquo;&lt;/li&gt;
&lt;li&gt;awk -F: &amp;lsquo;{if($1==&amp;ldquo;root&amp;rdquo;) print $1,&amp;ldquo;Admin&amp;rdquo;;else print $1, &amp;ldquo;Common User&amp;rdquo;}&amp;rsquo; /etc/passwd&lt;/li&gt;
&lt;li&gt;awk -F: &amp;lsquo;{if($1==&amp;ldquo;root&amp;rdquo;) printf &amp;ldquo;%-15s: %s\n&amp;rdquo;,$1,&amp;ldquo;Admin&amp;rdquo;;else printf &amp;ldquo;%-15s: %s\n&amp;rdquo;,$1, &amp;ldquo;Common user&amp;rdquo;}&amp;rsquo; /etc/passwd&lt;/li&gt;
&lt;li&gt;awk -F: -v sum=0 &amp;lsquo;{if($3&amp;gt;=500) sum++}END{print sum}&amp;rsquo; /etc/passwd : 统计用户ID大于500的有多少行&lt;/li&gt;
&lt;li&gt;awk -F: -v OFS=&amp;quot;\t&amp;quot; &amp;lsquo;{if($3&amp;lt;=999)printf &amp;ldquo;Sys user:\t%-15s ID is :%d\n&amp;rdquo;, $1,$3;else{printf &amp;ldquo;Common user:\t%-15s ID is :%d\n&amp;rdquo;,$1,$3}}&amp;rsquo; /etc/passwd :可以使用\t制表符控制 输出格式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;2while用于循环字段的&#34;&gt;2、while：用于循环字段的
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;语法：while (condition){statement1;statment2;&amp;hellip;.}&lt;/li&gt;
&lt;li&gt;示例：
&lt;ul&gt;
&lt;li&gt;awk &amp;lsquo;/^[[:space:]]*linux16/{print}&amp;rsquo; /boot/grub2/grub.cfg&lt;/li&gt;
&lt;li&gt;awk &amp;lsquo;/^[[:space:]]*linux16/{i=1;while(i&amp;lt;=NF){print $i,length($i);i++}}&amp;rsquo; /etc/grub2.cfg :对每个字段进行字符个数统计&lt;/li&gt;
&lt;li&gt;awk &amp;lsquo;/^[[:space:]]]*linux16/{i=1;while(i&amp;lt;=NF){if(length($i)&amp;lt;=7)print $i,length($i);i++}}&amp;rsquo; /etc/grub2.cfg&lt;/li&gt;
&lt;li&gt;awk -F: &amp;lsquo;{i=1;while(i&amp;lt;=3){print $i;i++}}&amp;rsquo; /etc/passwd:打印用户名、密码占位符、ID&lt;/li&gt;
&lt;li&gt;awk -F: &amp;lsquo;{i=1;while(i&amp;lt;=NF){if(length($i)&amp;gt;=4){print $i};i++}}&amp;rsquo; /etc/passwd : 字段大小于等于4的都显示&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;3do-while&#34;&gt;3、do-while
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;语法：do {statement1,statement2,&amp;hellip;.} while (dondition)&lt;/li&gt;
&lt;li&gt;示例：
&lt;ul&gt;
&lt;li&gt;awk -F: &amp;lsquo;{i=1;do{print $i;i++}while(i&amp;lt;=3)}&amp;rsquo; /etc/passwd :打印用户名、密码占位符、UID&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;4for&#34;&gt;4、for
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;语法：for(variable assignment;condition;iteration process){ statement1,statement2,&amp;hellip;}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;awk &amp;lsquo;/^[[:space:]]*linux16/{for(i=1;i&amp;lt;=NF;i++) {print $i,length($i)}}&amp;rsquo; /etc/grub2.cfg&lt;/li&gt;
&lt;li&gt;awk -F: &amp;lsquo;{for(i=1;i&amp;lt;=3;i++)print $i}&amp;rsquo; /etc/passwd&lt;/li&gt;
&lt;li&gt;awk -F: &amp;lsquo;{for(i=1;i&amp;lt;=NF;i++) { if (length($i)&amp;gt;=4) {print $i}}}&amp;rsquo; /etc/passwd&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;5for循环还可以用来遍历数组元素&#34;&gt;5、for循环还可以用来遍历数组元素
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;语法：for (i in array) {statement1,statement2,&amp;hellip;.}&lt;/li&gt;
&lt;li&gt;示例
&lt;ul&gt;
&lt;li&gt;awk -F: &amp;lsquo;$NF!~/^$/{BASH[$NF]++}END{for(A in BASH){printf &amp;ldquo;%15s:%i\n&amp;rdquo;,A,BASH[A]}}&amp;rsquo; /etc/passwd&lt;/li&gt;
&lt;li&gt;awk ‘{for(i=1;i&amp;lt;=NF;i++){count[$i]++}}END{for(i in count) {print i,count[i]}}’ /etc/fstab&lt;/li&gt;
&lt;li&gt;awk &amp;lsquo;/^UUID/{filesystem[$3]++}END{for (i in filesystem) {print i,filesystem[i]}}&amp;rsquo; /etc/fstab ：统计/etc/fstab中各文件系统的次数&lt;/li&gt;
&lt;li&gt;netstat -tan | awk &amp;lsquo;/^tcp&amp;gt;/{state[$NF]++}END{for(i in state) {print i,state[i]}}&amp;rsquo; ： 统计各连接状态的次数&lt;/li&gt;
&lt;li&gt;awk &amp;lsquo;{ip[$1]++} END {for (i in ip) {print i,ip[i]}}&amp;rsquo; /var/log/httpd/access_log : 统计访问日志中各IP的访问次数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;6case&#34;&gt;6、case
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;语法：switch (expression) { case VALUE or /REGEXP/: statement1, statement2,&amp;hellip; default: statement1, &amp;hellip;}&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;7break和continue&#34;&gt;7、break和continue
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;break [n]&lt;/li&gt;
&lt;li&gt;continue : 进入下一个字段&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;8next&#34;&gt;8、next
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;功能：提前结束本行文本的处理，并接着处理下一行&lt;/li&gt;
&lt;li&gt;示例：
&lt;ul&gt;
&lt;li&gt;awk -F: &amp;lsquo;{if($3%2==0) next;print $1,$3}&amp;rsquo; /etc/passwd&lt;/li&gt;
&lt;li&gt;awk -F: ‘{if ($3%2!=0) next;print $1,$3}’ /etc/passwd&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;awk的操作符&#34;&gt;awk的操作符
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;
&lt;h6 id=&#34;1算术操作符&#34;&gt;1、算术操作符
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-x&lt;/code&gt; : 负值&lt;/li&gt;
&lt;li&gt;&lt;code&gt;+x&lt;/code&gt; : 转换为数值&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x^y&lt;/code&gt; :&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x**y&lt;/code&gt; : 次方&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x*y&lt;/code&gt; : 乘法&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x/y&lt;/code&gt; : 除法&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x+y&lt;/code&gt; :&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x-y&lt;/code&gt; :&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x%y&lt;/code&gt; :&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h6 id=&#34;2字符串操作符&#34;&gt;2、字符串操作符
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;只有一个，而且不用写出来，用于实现字符串连接&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h6 id=&#34;3赋值操作符&#34;&gt;3、赋值操作符
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;=&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;+=&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-=&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;*=&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/=&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;%=&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^=&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;**=&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;++&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;需要注意的是，如果某模式为&lt;code&gt;=&lt;/code&gt;号，此时使用/=/可能会有语法错误，就以/[=]/替代&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h6 id=&#34;4布尔值&#34;&gt;4、布尔值
&lt;/h6&gt;&lt;p&gt;awk中，任何非0值或非空字符串都为真，反之为假&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h6 id=&#34;5比较操作符&#34;&gt;5、比较操作符
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;x&amp;lt;y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x&amp;lt;=y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x&amp;gt;y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x&amp;gt;=y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x==y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x!=y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x~y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x!~y&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h6 id=&#34;6逻辑操作符&#34;&gt;6、逻辑操作符
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;||&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h6 id=&#34;7函数调用&#34;&gt;7、函数调用
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;`func_name(argu1,argu2,&amp;hellip;.)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h6 id=&#34;8条件表达式&#34;&gt;8、条件表达式
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;selector?if-true-expression:if-false-expression
&lt;ul&gt;
&lt;li&gt;awk -F: ‘{$3&amp;gt;=1000?usertype=“Common user”:usertype=“Sysadmin or sysUser”;printf “%15s:%-s\n&amp;quot;,$1,usertype}’ /etc/passwd&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;awk的数组&#34;&gt;awk的数组
&lt;/h5&gt;&lt;h6 id=&#34;1定义数组的注意事项&#34;&gt;1、定义数组的注意事项
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;1、可使用任意字符串，字符串要使用双引号&lt;/li&gt;
&lt;li&gt;2、如果某数组元素事先不存在，在引用时awk会自动创建此元素，并将其初始化为空串&lt;/li&gt;
&lt;li&gt;3、要遍历数组中的每个元素，要使用for循环
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;for(var in array){statement1,&amp;hellip;..}&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  注意：var用于引用数组时，是引用的下标，而不是元素值
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;定义数组的格式&#34;&gt;定义数组的格式
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;awk &amp;lsquo;BEGIN{weekdays[&amp;ldquo;mon&amp;rdquo;]=&amp;ldquo;Monday&amp;rdquo;;weekdays[&amp;ldquo;tue&amp;rdquo;]=&amp;ldquo;Tuesday&amp;rdquo;;print week[&amp;ldquo;mon&amp;rdquo;]}&amp;rsquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;示例&#34;&gt;示例：
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;统计netstat -tan中各状态的次数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;netstat -tan | awk &amp;lsquo;/^tcp&amp;gt;/{state[$NF]++}END{for(i in state) {print i,state[i]}}’
&lt;ul&gt;
&lt;li&gt;每出现一被/^tcp/模式匹配到的行，数组S[$NF]就加1，NF为当前匹配到的行的最后一个字段，此处用其值做为数组S的元素索引&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;统计www服务的访问日志中IP数量&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;awk ‘{ip[$1]++} END {for (i in ip) {print i,ip[i]}}’ /var/log/httpd/access_log&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;统计/etc/fstab文件中每个文件系统类型出现的次数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;awk &amp;lsquo;/^UUID/{filesystem[$3]++}END{for (i in filesystem) {print i,filesystem[i]}}&amp;rsquo; /etc/fstab&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;统计指定文件中单词的出现次数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;awk ‘{for(i=1;i&amp;lt;=NF;i++){count[$i]++}}END{for(i in count) {print i,count[i]}}’ /etc/fstab&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;统计出/etc/passwd文件中shell的种类和个数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;awk -F: &amp;lsquo;{shell[$NF]++}END{for(A in shell){print A,shell[A]}}&amp;rsquo; /etc/passwd&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;    重点解析一下这条命令：
      首先，shell[$NF]++这个语句。其中的$NF所代表的是一个字符串，即shell的类型。也就是说在这个数组中的元素名称是shell的名称。而后面的++是对这个数组进行赋值。因为在/etc/passwd 这个文件中的shell类型只有两种，即/bin/bash和/sbin/nologin。也就是说这个数组就只有两个元素，并且它的值是不断被更新的。其次，语句for(A in shell)是设定了A是数组shell中的坐标变量，即是A是元素的名称，shell[A]是数组的值。
&lt;/code&gt;&lt;/pre&gt;&lt;h6 id=&#34;删除数组变量&#34;&gt;删除数组变量
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;delete array[index]&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;awk的内置函数&#34;&gt;awk的内置函数
&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;split(string, array [, fieldsep [, seps ] ])&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;功能：将string表示的字符串以fieldsep为分隔符进行分隔，并将分隔后的结果保存至array为名的数组中；数组下标为从0开始的序列；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  netstat -tn | awk &amp;#39;/^tcp\&amp;gt;/{split($5,ip,&amp;#34;:&amp;#34;);count[ip[1]]++}END{for(i in count)print i,count[i]}&amp;#39;
  netstat -ant | awk &amp;#39;/:80\&amp;gt;/{split($5,clients,&amp;#34;:&amp;#34;);IP[clients[1]]++}END{for(i in IP){print IP[i],i}}&amp;#39; | sort -rn | head -50
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;length([string])&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;功能：返回string字串中字符的个数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;substr(string, start [, length])&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;功能：取string字符串中的子串，从start开始，取length个；start从1开始计数&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;system(command)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;功能：执行系统command并将结果返回至awk命令&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;systime()&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;功能：取系统当前时间&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;tolower(s)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;功能：将s中的所有字母转为小写&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;toupper(s)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;功能：将s中的所有字母转为大写&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;番外篇&#34;&gt;番外篇！！！！
&lt;/h6&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;    Linux Web服务器网站故障分析常用的命令

    系统连接状态篇：
    1.查看TCP连接状态
    netstat -nat |awk ‘{print $6}’|sort|uniq -c|sort -rn

    netstat -n | awk ‘/^tcp/ {++S[$NF]};END {for(a in S) print a, S[a]}’ 或
    netstat -n | awk ‘/^tcp/ {++state[$NF]}; END {for(key in state) print key,&amp;#34;\t&amp;#34;,state[key]}’
    netstat -n | awk ‘/^tcp/ {++arr[$NF]};END {for(k in arr) print k,&amp;#34;t&amp;#34;,arr[k]}’

    netstat -n |awk ‘/^tcp/ {print $NF}’|sort|uniq -c|sort -rn

    netstat -ant | awk ‘{print $NF}’ | grep -v ‘[a-z]‘ | sort | uniq -c



    2.查找请求数请20个IP（常用于查找攻来源）：

    netstat -anlp|grep 80|grep tcp|awk ‘{print $5}’|awk -F: ‘{print $1}’|sort|uniq -c|sort -nr|head -n20

    netstat -ant |awk ‘/:80/{split($5,ip,&amp;#34;:&amp;#34;);++A[ip[1]]}END{for(i in A) print A[i],i}’ |sort -rn|head -n20

    3.用tcpdump嗅探80端口的访问看看谁最高

    tcpdump -i eth0 -tnn dst port 80 -c 1000 | awk -F&amp;#34;.&amp;#34; ‘{print $1&amp;#34;.&amp;#34;$2&amp;#34;.&amp;#34;$3&amp;#34;.&amp;#34;$4}’ | sort | uniq -c | sort -nr |head -20

    4.查找较多time_wait连接

    netstat -n|grep TIME_WAIT|awk ‘{print $5}’|sort|uniq -c|sort -rn|head -n20

    5.找查较多的SYN连接

    netstat -an | grep SYN | awk ‘{print $5}’ | awk -F: ‘{print $1}’ | sort | uniq -c | sort -nr | more

    6.根据端口列进程

    netstat -ntlp | grep 80 | awk ‘{print $7}’ | cut -d/ -f1
    netstat -tnlp | awk &amp;#39;/22/{split($NF,port,&amp;#34;/&amp;#34;);d[port[1]]++}END{for(i in d)print i}&amp;#39;



    网站日志分析篇1（Apache）：

    1.获得访问前10位的ip地址

    cat access.log|awk ‘{print $1}’|sort|uniq -c|sort -nr|head -10
    cat access.log|awk ‘{counts[$(11)]+=1}; END {for(url in counts) print counts[url], url}’

    2.访问次数最多的文件或页面,取前20

    cat access.log|awk ‘{print $11}’|sort|uniq -c|sort -nr|head -20

    3.列出传输最大的几个exe文件（分析下载站的时候常用）

    cat access.log |awk ‘($7~/.exe/){print $10 &amp;#34; &amp;#34; $1 &amp;#34; &amp;#34; $4 &amp;#34; &amp;#34; $7}’|sort -nr|head -20

    4.列出输出大于200000byte(约200kb)的exe文件以及对应文件发生次数

    cat access.log |awk ‘($10 &amp;gt; 200000 &amp;amp;&amp;amp; $7~/.exe/){print $7}’|sort -n|uniq -c|sort -nr|head -100

    5.如果日志最后一列记录的是页面文件传输时间，则有列出到客户端最耗时的页面

    cat access.log |awk ‘($7~/.php/){print $NF &amp;#34; &amp;#34; $1 &amp;#34; &amp;#34; $4 &amp;#34; &amp;#34; $7}’|sort -nr|head -100

    6.列出最最耗时的页面(超过60秒的)的以及对应页面发生次数

    cat access.log |awk ‘($NF &amp;gt; 60 &amp;amp;&amp;amp; $7~/.php/){print $7}’|sort -n|uniq -c|sort -nr|head -100

    7.列出传输时间超过 30 秒的文件

    cat access.log |awk ‘($NF &amp;gt; 30){print $7}’|sort -n|uniq -c|sort -nr|head -20

    8.统计网站流量（G)

    cat access.log |awk ‘{sum+=$10} END {print sum/1024/1024/1024}’

    9.统计404的连接

    awk ‘($9 ~/404/)’ access.log | awk ‘{print $9,$7}’ | sort

    10. 统计http status

    cat access.log |awk ‘{counts[$(9)]+=1}; END {for(code in counts) print code, counts[code]}&amp;#39;
    cat access.log |awk &amp;#39;{print $9}&amp;#39;|sort|uniq -c|sort -rn

    10.蜘蛛分析，查看是哪些蜘蛛在抓取内容。

    /usr/sbin/tcpdump -i eth0 -l -s 0 -w - dst port 80 | strings | grep -i user-agent | grep -i -E &amp;#39;bot|crawler|slurp|spider&amp;#39;

    网站日分析2(Squid篇）按域统计流量

    zcat squid_access.log.tar.gz| awk &amp;#39;{print $10,$7}&amp;#39; |awk &amp;#39;BEGIN{FS=&amp;#34;[ /]&amp;#34;}{trfc[$4]+=$1}END{for(domain in trfc){printf &amp;#34;%st%dn&amp;#34;,domain,trfc[domain]}}&amp;#39;

    数据库篇
    1.查看数据库执行的sql

    /usr/sbin/tcpdump -i eth0 -s 0 -l -w - dst port 3306 | strings | egrep -i &amp;#39;SELECT|UPDATE|DELETE|INSERT|SET|COMMIT|ROLLBACK|CREATE|DROP|ALTER|CALL&amp;#39;

    系统Debug分析篇
    1.调试命令
    strace -p pid
    2.跟踪指定进程的PID
    gdb -p pid
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;9.gawk应用实现&lt;/p&gt;
&lt;p&gt;（1）内建变量；
1）字段和数据行分隔符变量&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;    数据字段变量：
        允许你使用美元符号($)和数据字段在数据行中位置对应的数值来引用该数据行中的字段

    字段分隔符：
        默认情况下，字段分隔符是一个空白字符，也就是空格符或制表符(tab)。在命令行下使用命令行参数-F或者在gawk程序中使用特殊的内置变量FS来更改字段分隔符

    变量汇总：
        FIELDWIDTHS         由空格分隔开的定义了每个数据字段确切宽度的一列数字
        FS                  输入字段分隔符
        RS                  输入数据行分隔符
        OFS                 输出字段分隔符
        ORS                 输出数据行分隔符

    变量FS和OFS定义了gawk如何处理数据流中的数据字段

        [root@ahui ~]
        data11,data12,data13,data14,data15
        data21,data22,data23,data24,data25
        data31,data32,data33,data34,data35

        [root@ahui ~]
        data11-data12-data13
        data21-data22-data23
        data31-data32-data33

    FIELDWIDTHS变量允许你读取数据行，而不用字段分隔符来划分字段。一旦设置了FIELDWIDTHS变量，gawk就会忽略FS变量，而根据提供的字段宽度大小来计算字段

        [root@ahui ~]
        1005.3847887.37
        133-2.374893.23
        23987.8237488.9

        [root@ahui ~]
        100 5.384 78 87.37
        133 -2.37 48 93.23
        239 87.82 37 488.9

    默认情况下，gawk将RS和ORS设为换行符，但是有时会碰到数据流中字段占了多行的情况。
    经典的例子就是包含地址和电话号码的数据，其中地址和电话号码各占一行

        [root@ahui ~]
        Riley Mullen
        123 main street
        Chicago, IL 60601
        (312)555-2378

        Frank Williams
        123 main street
        Chicago, IL 60601
        (312)234-3253

        Haley Snell
        123 main street
        Chicago, IL 60601
        (312)123-2374

        [root@ahui ~]
        Riley Mullen  (312)555-2378
        Frank Williams (312)234-3253
        Haley Snell (312)123-2374

        只需把FS变量设置成换行符。这就表明数据流中的每行都是一个单独的字段，每行上的所有数据都属于同一个字段。
        接着只需把RS变量设置成空字符串，然后在数据行间留一个空白行。gawk会把每个空白行当做一个数据行分隔符

2）数据变量：
    ARGC        当前命令行参数个数
    ARGIND      当前文件在ARGV中的位置
    ARGV        包含命令行参数的数组
    CONVFMT     数字的转换格式(参见printf语句)；默认值为%.6 g
    ENVIRON     当前shell环境变量及其值组成的关联数组
    ERRNO       当读取或关闭输入文件发生错误时的系统错误号
    FILENAME    用作gawk输入数据的数据文件的文件名
    FNR         当前数据文件中的数据行数
    IGNORECASE  设成非零值时，忽略gawk命令中出现的字符串的字符大小写
    NF          数据文件中的字段总数
    NR          已处理的输入数据行数目
    OFMT        数字的输出格式；默认值为%.6 g
    RLENGTH     由match函数所匹配的子字符串的长度
    RSTART      由match函数所匹配的子字符串的起始位置

    相关实例：

        [root@ahui ~]
        2 data1

        注意：ARGC变量表明命令行上有两个参数，这包括gawk命令和data1参数(记住，程序脚本并不算参数)。
             ARGV数组从代表该命令的索引0开始，第一个数组值是gawk命令后的第一个命令行参数。


        [root@ahui ~]
        &amp;gt; BEGIN{
        &amp;gt; print ENVIRON[&amp;#34;HOME&amp;#34;]
        &amp;gt; print ENVIRON[&amp;#34;PATH&amp;#34;]
        &amp;gt; }&amp;#39;
        /root
        /usr/lib64/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin

        注意：ENVIRON变量使用关联数组来提取shell环境变量。关联数组用文本作为数组的索引值，而不用数值。可用这种方式来从shell中提取任何环境变量的值来在gawk程序中使用。

        [root@ahui ~]
        root:/bin/bash
        bin:/sbin/nologin
        daemon:/sbin/nologin
        adm:/sbin/nologin
        lp:/sbin/nologin
        sync:/bin/sync
        shutdown:/sbin/shutdown
        halt:/sbin/halt
        mail:/sbin/nologin
        uucp:/sbin/nologin
        operator:/sbin/nologin
        games:/sbin/nologin
        gopher:/sbin/nologin
        ftp:/sbin/nologin
        nobody:/sbin/nologin
        dbus:/sbin/nologin
        usbmuxd:/sbin/nologin
        vcsa:/sbin/nologin
        rpc:/sbin/nologin
        rtkit:/sbin/nologin
        avahi-autoipd:/sbin/nologin
        abrt:/sbin/nologin
        rpcuser:/sbin/nologin
        nfsnobody:/sbin/nologin
        haldaemon:/sbin/nologin
        gdm:/sbin/nologin
        ntp:/sbin/nologin
        apache:/sbin/nologin
        saslauth:/sbin/nologin
        postfix:/sbin/nologin
        pulse:/sbin/nologin
        sshd:/sbin/nologin
        tcpdump:/sbin/nologin
        ahui:/bin/bash

        注意：NF变量允许你指定数据行中的最后一个数据字段，即NF变量含有数据文件中最后一个数据字段的数字值。可以在它前面加个美元符将它用作字段变量。

        [root@ahui ~]
        &amp;gt; BEGIN{FS=&amp;#34;,&amp;#34;}
        &amp;gt; {print $1, &amp;#34;FNR=&amp;#34;FNR, &amp;#34;NR=&amp;#34;NR}
        &amp;gt; END{print &amp;#34;There were&amp;#34;,NR,&amp;#34;records processed&amp;#34;}&amp;#39; data1 data1
        data11 FNR=1 NR=1
        data21 FNR=2 NR=2
        data31 FNR=3 NR=3
        data11 FNR=1 NR=4
        data21 FNR=2 NR=5
        data31 FNR=3 NR=6
        There were 6 records processed

        注意：FNR变量的值在gawk处理第二个文件时被重置了,而NR变量则在进入第二个数据文件后继续计数
             注意变量赋值的语法结构：&amp;#34;FNR=&amp;#34;FNR。引号位置错了会出现语法错误
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;（2）自定义变量
1）在脚本中给变量赋值&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;    [root@ahui ~]# gawk &amp;#39;
    &amp;gt; BEGIN{
    &amp;gt; testing=&amp;#34;This is a test&amp;#34;
    &amp;gt; print testing
    &amp;gt; }&amp;#39;
    This is a test

    注意：gawk编程语言包含了用来处理数字值的标准数学操作符，其中包括求余符号(%)和幂运算符号(^或**)

2）在命令行上给变量赋值

    [root@ahui ~]# cat script1
    BEGIN{FS=&amp;#34;,&amp;#34;}
    {print $n}

    [root@ahui ~]# gawk -f script1 n=2 data1
    data12
    data22
    data32

    这个特性允许你改变脚本的行为而不需要修改实际的脚本代码。
    使用命令行参数来定义变量值会有个问题。在你设置了变量后，这个值在代码的BEGIN部分不可用

    [root@ahui ~]# cat script2
    BEGIN{print &amp;#34;The starting value is&amp;#34;,n; FS=&amp;#34;,&amp;#34;}
    {print $n}

    [root@ahui ~]# gawk -f script2 n=3 data1
    The starting value is
    data13
    data23
    data33

    可以用-v命令行参数来解决这个问题。它允许你指定在BEGIN代码部分之前设定的变量。在命令行上，-v命令行参数必须放在脚本代码之前

    [root@ahui ~]# gawk -v n=3 -f script2 data1
    The starting value is 3
    data13
    data23
    data33
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;（3）处理数组&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;gawk编程语言使用关联数组来提供数组功能，关联数组跟数字数组不同之处在于它的索引值可以是任意文本字符串。每个索引字符串都必须是唯一的，并唯一地标识赋给它的数据元素。

1）定义数组变量
    数组变量赋值的格式如下；
        var[index] = element
    其中var是变量名，index是关联数组的索引值，element是数据元素值。

    [root@ahui ~]
    &amp;gt; capital[&amp;#34;Illinois&amp;#34;] = &amp;#34;Springfiled&amp;#34;
    &amp;gt; print capital[&amp;#34;Illinois&amp;#34;]
    &amp;gt; }&amp;#39;
    Springfiled

2）遍历数组变量
    可以用for语句的一种特殊形式：
        for (var in array)
        {
            statements
        }
    这个for语句会在每次将关联数组array的下一个索引值赋给变量var时，执行一遍statements。重要的是记住这个变量是索引值而不是数据元素值。

        [root@ahui ~]# gawk &amp;#39;BEGIN{
        &amp;gt; var[&amp;#34;a&amp;#34;] = 1
        &amp;gt; var[&amp;#34;b&amp;#34;] = 2
        &amp;gt; var[&amp;#34;c&amp;#34;] = 3
        &amp;gt; var[&amp;#34;d&amp;#34;] = 4
        &amp;gt; for (test in var)
        &amp;gt; {
        &amp;gt; print &amp;#34;Index:&amp;#34;,test,&amp;#34; - value:&amp;#34;,var[test]
        &amp;gt; }
        &amp;gt; }&amp;#39;
        Index: a  - value: 1
        Index: b  - value: 2
        Index: c  - value: 3
        Index: d  - value: 4

3）删除数组变量
    从关联数组中删除数组索引要用一个特别的命令：
        delete array[index]

    删除命令会从数组中删除关联索引值和相关的数据元素值
        [root@ahui ~]# gawk &amp;#39;BEGIN{
        &amp;gt; var[&amp;#34;a&amp;#34;] = 1
        &amp;gt; var[&amp;#34;g&amp;#34;] = 2
        &amp;gt; for (test in var)
        &amp;gt; {
        &amp;gt; print &amp;#34;Index:&amp;#34;,test,&amp;#34; - value:&amp;#34;,var[test]
        &amp;gt; }
        &amp;gt; delete var[&amp;#34;g&amp;#34;]
        &amp;gt; print &amp;#34;---&amp;#34;
        &amp;gt; for (test in var)
        &amp;gt; print &amp;#34;Index:&amp;#34;,test,&amp;#34; - Value:&amp;#34;,var[test]
        &amp;gt; }&amp;#39;
        Index: a  - value: 1
        Index: g  - value: 2
        ---
        Index: a  - Value: 1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;（4）使用模式&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1）正则表达式
    在使用正则表达式时，正则表达式必须出现在它要控制的程序脚本的左花括号前：

        [root@ahui ~]
        data11

2）匹配操作符
    匹配操作符(matching operate)允许将正则表达式限定在数据行中的特定数据字段。匹配操作符是波浪线(~)。
        $1 ~ /^data/
    $1变量代表数据行中的第一个数据字段，这个表达式会过滤出第一个字段以文本data开头的所有数据行。

        [root@ahui ~]
        data21,data22,data23,data24,data25

    也可以使用!符号来排除正则表达式的匹配：
        $1 !~ /expression/

        [root@ahui ~]
        bin:x:1:1:bin:/bin:/sbin/nologin bin:x:1:1:bin:/bin:/sbin/nologin
        daemon:x:2:2:daemon:/sbin:/sbin/nologin daemon:x:2:2:daemon:/sbin:/sbin/nologin
        adm:x:3:4:adm:/var/adm:/sbin/nologin adm:x:3:4:adm:/var/adm:/sbin/nologin
        lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin
        sync:x:5:0:sync:/sbin:/bin/sync sync:x:5:0:sync:/sbin:/bin/sync
        shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
        halt:x:7:0:halt:/sbin:/sbin/halt halt:x:7:0:halt:/sbin:/sbin/halt
        mail:x:8:12:mail:/var/spool/mail:/sbin/nologin mail:x:8:12:mail:/var/spool/mail:/sbin/nologin
        uucp:x:10:14:uucp:/var/spool/uucp:/sbin/nologin uucp:x:10:14:uucp:/var/spool/uucp:/sbin/nologin
        games:x:12:100:games:/usr/games:/sbin/nologin games:x:12:100:games:/usr/games:/sbin/nologin
        gopher:x:13:30:gopher:/var/gopher:/sbin/nologin gopher:x:13:30:gopher:/var/gopher:/sbin/nologin
        ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin
        nobody:x:99:99:Nobody:/:/sbin/nologin nobody:x:99:99:Nobody:/:/sbin/nologin
        dbus:x:81:81:System bus:/:/sbin/nologin
        usbmuxd:x:113:113:usbmuxd user:/:/sbin/nologin
        vcsa:x:69:69:virtual owner:/dev:/sbin/nologin
        rpc:x:32:32:Rpcbind Daemon:/var/cache/rpcbind:/sbin/nologin
        rtkit:x:499:497:RealtimeKit:/proc:/sbin/nologin rtkit:x:499:497:RealtimeKit:/proc:/sbin/nologin
        avahi-autoipd:x:170:170:Avahi Stack:/var/lib/avahi-autoipd:/sbin/nologin
        abrt:x:173:173::/etc/abrt:/sbin/nologin abrt:x:173:173::/etc/abrt:/sbin/nologin
        rpcuser:x:29:29:RPC User:/var/lib/nfs:/sbin/nologin
        nfsnobody:x:65534:65534:Anonymous User:/var/lib/nfs:/sbin/nologin
        haldaemon:x:68:68:HAL daemon:/:/sbin/nologin
        gdm:x:42:42::/var/lib/gdm:/sbin/nologin gdm:x:42:42::/var/lib/gdm:/sbin/nologin
        ntp:x:38:38::/etc/ntp:/sbin/nologin ntp:x:38:38::/etc/ntp:/sbin/nologin
        apache:x:48:48:Apache:/var/www:/sbin/nologin apache:x:48:48:Apache:/var/www:/sbin/nologin
        saslauth:x:498:76:Saslauthd user:/var/empty/saslauth:/sbin/nologin
        postfix:x:89:89::/var/spool/postfix:/sbin/nologin postfix:x:89:89::/var/spool/postfix:/sbin/nologin
        pulse:x:497:496:PulseAudio Daemon:/var/run/pulse:/sbin/nologin
        sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin
        tcpdump:x:72:72::/:/sbin/nologin tcpdump:x:72:72::/:/sbin/nologin
        ahui:x:500:500:ahuihaerbin:/home/ahui:/bin/bash ahui:x:500:500:ahuihaerbin:/home/ahui:/bin/bash

3）数学表达式

    可以使用任意的普通股数学比较表达式
        x == y：值x等于y
        x &amp;lt;= y：
        x &amp;lt; y
        x &amp;gt;= y
        x &amp;gt; y

    可以对文本数据使用表达式，但是它跟正则表达式不同，表达式必须完全匹配。

        [root@ahui ~]

        [root@ahui ~]
        data11
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;（5）结构化命令
1）if语句
格式：
if (condition)
statement1
或
if (condition) statement1&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;    [root@ahui ~]# cat data4
    10
    5
    13
    50
    34

    [root@ahui ~]# gawk &amp;#39;{
    &amp;gt; if ($1 &amp;gt; 20)
    &amp;gt; {
    &amp;gt;   x = $1 * 2
    &amp;gt;   print x
    &amp;gt; }
    &amp;gt; }&amp;#39; data4
    100
    68

    gawk的if语句也支持else子句，允许在if语句条件不成立的情况下执行一条或多条语句

    [root@ahui ~]# gawk &amp;#39;{
    &amp;gt; if ($1 &amp;gt; 20)
    &amp;gt; {
    &amp;gt;   x = $1 * 2
    &amp;gt;   print x
    &amp;gt; } else
    &amp;gt; {
    &amp;gt;   x = $1 / 2
    &amp;gt;   print x
    &amp;gt; }}&amp;#39; data4
    5
    2.5
    6.5
    100
    68

    也可以在单行上使用else子句，但必须在if语句部分使用分号：

        if (condition) statement1; else statement2

    [root@ahui ~]# gawk &amp;#39;{if ($1 &amp;gt; 20) print $1 * 2; else print $1 / 2}&amp;#39; data4
    5
    2.5
    6.5
    100
    68


2）while语句

    while语句的格式：

        while (condition)
        {
        statements
        }

    while循环允许遍历一组数据，并检查结束迭代的条件

    [root@ahui ~]# gawk &amp;#39;{
    total = 0
    i = 1
    while (i &amp;lt; 4)
    {
       total += $i
       i++
    }
    avg = total / 3
    print &amp;#34;Average:&amp;#34; ,avg
    }&amp;#39; data5
    Average: 128.333
    Average: 137.667
    Average: 176.667

    [root@ahui ~]# gawk &amp;#39;{
    &amp;gt; total = 0
    &amp;gt; i = 1
    &amp;gt; while (i &amp;lt; 4)
    &amp;gt; {
    &amp;gt;   total += $i
    &amp;gt;   if (i == 2)
    &amp;gt;      break
    &amp;gt;   i++
    &amp;gt; }
    &amp;gt; avg = total / 2
    &amp;gt; print &amp;#34;The average of the first two data elements is:&amp;#34;,avg
    &amp;gt; }&amp;#39; data5
    The average of the first two data elements is: 125
    The average of the first two data elements is: 136.5
    The average of the first two data elements is: 157.5

3）do-while语句
    do-while语句类似于while语句，但会在检查条件语句之前执行命令。格式为：
        do
        {
            statement
        } while (condition)

    这种格式保证了语句会在条件被评估之前至少执行一次

4）for语句
    gawk支持C风格的for循环：
        for( variable assignment; condition; iteration process)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;（6）格式化打印
注意到print语句在gawk如何显示数据上并未提供多少控制。你能做的大概只是控制输出字段分隔符(OFS)。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;因此要用到格式化打印，我们需要printf命令。格式：
    printf &amp;#34;format string&amp;#34;, var1, var2...

format string是格式化输出地关键。它会用到文本元素和格式化指定符来具体指定如何呈现格式化输出。

格式化指定符采用如下格式：
    %[modifier]control-letter
其中control-letter是指明显示什么类型数据值的单字符码，而modifier定义了另一个可选的格式化特性。

    c           将一个数作为ASCII字符显示
    d           显示一个整数值
    i           显示一个整数值(跟d一样)
    e           用科学计数法显示一个数
    f           显示一个浮点数
    g           用科学计数法或浮点数中较短的显示
    o           显示一个八进制值
    s           显示一个文本字符串
    x           显示一个十六进制值
    X           显示一个十六进制值，但用大写字母A-F

除了控制字母外，还有3种修饰符可以用来进一步控制输出

    width：
        指定了输出字段最小宽度的数字值。如果输出短于这个值，printf会向右对齐，并用空格来填充这段空间。如果输出比指定的宽度还要长，它就会覆盖width值。
    prec：
        指定了浮点数中小数点后面位数的数字值，或者文本字符串中显示的最大字符数。
    -(减号)：
        减号指明在向格式化空间中放入数据时采用左对齐而不是右对齐

        [root@ahui ~]# gawk &amp;#39;BEGIN{FS=&amp;#34;\n&amp;#34;; RS=&amp;#34;&amp;#34;} {printf &amp;#34;%s %s\n&amp;#34;, $1, $4}&amp;#39; data2
        Riley Mullen  (312)555-2378
        Frank Williams (312)234-3253
        Haley Snell (312)123-2374

    注意：我们需要自己手动在printf命令的末尾添加换行符来生成新行。没加的话，printf命令会继续用同一行来打印后续输出。

    如果你需要用几个单独的printf命令来在同一行上打印多个输出，它会非常有用：

        [root@ahui ~]# gawk &amp;#39;BEGIN{FS=&amp;#34;,&amp;#34;} {printf &amp;#34;%s &amp;#34;, $1} END{printf &amp;#34;\n&amp;#34;}&amp;#39; data1
        data11 data21 data31

    接着我们用修饰符来格式化第一个字符串值：

        [root@ahui ~]# gawk &amp;#39;BEGIN{FS=&amp;#34;\n&amp;#34;; RS=&amp;#34;&amp;#34;} {printf &amp;#34;%16s  %s\n&amp;#34;,$1, $4}&amp;#39; data2
            Riley Mullen  (312)555-2378
          Frank Williams  (312)234-3253
             Haley Snell  (312)123-2374

    通过添加一个值为16的修饰符，我们强制第一个字符串的输出采用16位字符。默认情况下，printf命令使用右对齐来将数据放到格式化空间中。要改成左对齐，只要给修饰符加一个减号就可以了。

        [root@ahui ~]# gawk &amp;#39;BEGIN{FS=&amp;#34;\n&amp;#34;; RS=&amp;#34;&amp;#34;} {printf &amp;#34;%-16s  %s\n&amp;#34;, $1, $4}&amp;#39; data2
        Riley Mullen      (312)555-2378
        Frank Williams    (312)234-3253
        Haley Snell       (312)123-2374
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;（7）自定义函数
1）定义函数
要定义自己的函数，你必须使用function关键字：
function name([variables])
{
statements
}&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;    函数名必须能够唯一标识函数

2）使用自定义函数
    在定义函数时，它必须出现在所有代码块之前(包括BEGIN代码块)。

        [root@ahui ~]
        &amp;gt; function myprint()
        &amp;gt; {
        &amp;gt;     printf &amp;#34;%-16s - %s\n&amp;#34;, $1, $4
        &amp;gt; }
        &amp;gt; BEGIN{FS=&amp;#34;\n&amp;#34;; RS=&amp;#34;&amp;#34;}
        &amp;gt; {
        &amp;gt;     myprint()
        &amp;gt; }&amp;#39; data2
        Riley Mullen     - (312)555-2378
        Frank Williams   - (312)234-3253
        Haley Snell      - (312)123-2374

3）创建函数库
    首先创建一个存储所有gawk函数的文件

        [root@ahui ~]
        function myprint()
        {
            printf &amp;#34;%-16s - %s\n&amp;#34;, $1, $4
        }
        function myrand()
        {
            return int(limit * rand())
        }
        function printthird()
        {
            printf $3
        }

    注意：不能将-f命令行参数和内联gawk脚本放到一起使用，不过可以在同一个命令行中使用多个-f参数

        [root@ahui ~]
        BEGIN{ FS=&amp;#34;\n&amp;#34;; RS=&amp;#34;&amp;#34; }
        {
            myprint()
        }

        [root@ahui ~]
        Riley Mullen     - (312)555-2378
        Frank Williams   - (312)234-3253
        Haley Snell      - (312)123-2374
&lt;/code&gt;&lt;/pre&gt;</description>
        </item>
        <item>
        <title>sed</title>
        <link>/post/tech/sed/</link>
        <pubDate>Fri, 24 Dec 2021 15:54:47 +0800</pubDate>
        
        <guid>/post/tech/sed/</guid>
        <description>&lt;h1 id=&#34;sed&#34;&gt;sed
&lt;/h1&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sed &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;options&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;[地址定界] command&amp;#39;&lt;/span&gt; file&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;options:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -n：不输出模式空间内容到屏幕，即不自动打印，只打印匹配到的行
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -e：多点编辑，对每行处理时，可以有多个Script
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -f：把Script写到文件当中，在执行sed时-f 指定文件路径，如果是多个Script，换行写
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -r：支持扩展的正则表达式
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -i：直接将处理的结果写入文件
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; -i.bak：在将处理的结果写入文件之前备份一份
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;地址定界:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 不给地址：对全文进行处理
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 单地址：
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#: 指定的行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; /pattern/：被此处模式所能够匹配到的每一行
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 地址范围：
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#,#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#,+#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; /pat1/,/pat2/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#,/pat1/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ~：步进
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  sed -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1~2p&amp;#39;&lt;/span&gt;  只打印奇数行 （1~2 从第1行，一次加2行）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  sed -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2~2p&amp;#39;&lt;/span&gt;  只打印偶数行
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;command:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; d：删除模式空间匹配的行，并立即启用下一轮循环
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; p：打印当前模式空间内容，追加到默认输出之后
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; a：在指定行后面追加文本，支持使用&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;实现多行追加
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; i：在行前面插入文本，支持使用&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;实现多行追加
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; c：替换行为单行或多行文本，支持使用&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;实现多行追加
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; w：保存模式匹配的行至指定文件
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; r：读取指定文件的文本至模式空间中匹配到的行后
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;：为模式空间中的行打印行号
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; !：模式空间中匹配行取反处理
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; s///：查找替换，支持使用其它分隔符，如：s@@@，s###；
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 加g表示行内全局替换；
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 在替换时，可以加一下命令，实现大小写转换
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\l&lt;/span&gt;：把下个字符转换成小写。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\L&lt;/span&gt;：把replacement字母转换成小写，直到&lt;span style=&#34;color:#ae81ff&#34;&gt;\U&lt;/span&gt;或&lt;span style=&#34;color:#ae81ff&#34;&gt;\E&lt;/span&gt;出现。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\u&lt;/span&gt;：把下个字符转换成大写。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\U&lt;/span&gt;：把replacement字母转换成大写，直到&lt;span style=&#34;color:#ae81ff&#34;&gt;\L&lt;/span&gt;或&lt;span style=&#34;color:#ae81ff&#34;&gt;\E&lt;/span&gt;出现。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\E&lt;/span&gt;：停止以&lt;span style=&#34;color:#ae81ff&#34;&gt;\L&lt;/span&gt;或&lt;span style=&#34;color:#ae81ff&#34;&gt;\U&lt;/span&gt;开始的大小写转换
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;实战&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# options&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@along ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# cat demo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aaa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bbbb
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AABBCCDD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@along ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sed &amp;#34;/aaa/p&amp;#34; demo  #匹配到的行会打印一遍，不匹配的行也会打印&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aaa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aaa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bbbb
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AABBCCDD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@along ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sed -n &amp;#34;/aaa/p&amp;#34; demo  #-n不显示没匹配的行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aaa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@along ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sed -e &amp;#34;s/a/A/&amp;#34; -e &amp;#34;s/b/B/&amp;#34; demo  #-e多点编辑&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Aaa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Bbbb
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AABBCCDD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@along ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# cat sedscript.txt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;s/A/a/g
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@along ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sed -f sedscript.txt demo  #-f使用文件处理&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aaa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bbbb
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aaBBCCDD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@along ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sed -i.bak &amp;#34;s/a/A/g&amp;#34; demo  #-i直接对文件进行处理&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@along ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# cat demo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AAA
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bbbb
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AABBCCDD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@along ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# cat demo.bak&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aaa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bbbb
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AABBCCDD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 地址界定&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@along ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# cat demo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aaa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bbbb
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AABBCCDD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@along ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sed -n &amp;#34;p&amp;#34; demo  #不指定行，打印全文&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aaa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bbbb
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AABBCCDD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@along ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sed &amp;#34;2s/b/B/g&amp;#34; demo  #替换第2行的b-&amp;gt;B&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aaa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;BBBB
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AABBCCDD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@along ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sed -n &amp;#34;/aaa/p&amp;#34; demo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aaa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@along ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sed -n &amp;#34;1,2p&amp;#34; demo  #打印1-2行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aaa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bbbb
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@along ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sed -n &amp;#34;/aaa/,/DD/p&amp;#34; demo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aaa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bbbb
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AABBCCDD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@along ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sed -n &amp;#34;2,/DD/p&amp;#34; demo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bbbb
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AABBCCDD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@along ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sed &amp;#34;1~2s/[aA]/E/g&amp;#34; demo  #将奇数行的a或A替换为E&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;EEE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bbbb
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;EEBBCCDD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# command&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@along ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# cat demo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aaa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bbbb
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AABBCCDD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@along ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sed &amp;#34;2d&amp;#34; demo  #删除第2行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aaa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AABBCCDD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@along ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sed -n &amp;#34;2p&amp;#34; demo  #打印第2行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bbbb
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@along ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sed &amp;#34;2a123&amp;#34; demo  #在第2行后加123&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aaa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bbbb
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;123&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AABBCCDD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@along ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sed &amp;#34;1i123&amp;#34; demo  #在第1行前加123&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;123&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aaa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bbbb
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AABBCCDD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@along ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sed &amp;#34;3c123\n456&amp;#34; demo  #替换第3行内容&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aaa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bbbb
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;123&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;456&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@along ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sed -n &amp;#34;3w/root/demo3&amp;#34; demo  #保存第3行的内容到demo3文件中&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@along ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# cat demo3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AABBCCDD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@along ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sed &amp;#34;1r/root/demo3&amp;#34; demo  #读取demo3的内容到第1行后&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aaa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AABBCCDD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bbbb
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AABBCCDD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@along ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sed -n &amp;#34;=&amp;#34; demo  #=打印行号&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@along ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sed -n &amp;#39;2!p&amp;#39; demo  #打印除了第2行的内容&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aaa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AABBCCDD
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@along ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sed &amp;#39;s@[a-z]@\u&amp;amp;@g&amp;#39; demo  #将全文的小写字母替换为大写字母&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AAA
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;BBBB
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AABBCCDD
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;高级编辑命令
（1）格式&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; h：把模式空间中的内容覆盖至保持空间中
 H：把模式空间中的内容追加至保持空间中
 g：从保持空间取出数据覆盖至模式空间
 G：从保持空间取出内容追加至模式空间
 x：把模式空间中的内容与保持空间中的内容进行互换
 n：读取匹配到的行的下一行覆盖 至模式空间
 N：读取匹配到的行的下一行追加 至模式空间
 d：删除模式空间中的行
 D：删除 当前模式空间开端至\n 的内容（不再传 至标准输出），放弃之后的命令，但是对剩余模式空间重新执行sed
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;（2）一个案例+示意图演示
① 案例：倒序输出文本内容&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@along ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# cat num.txt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;One
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Two
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Three
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@along ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# sed &amp;#39;1!G;h;$!d&amp;#39; num.txt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Three
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Two
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;One
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;② 示意图如下：
&lt;img src=&#34;/post/tech/sed/1.png&#34;
	width=&#34;997&#34;
	height=&#34;420&#34;
	srcset=&#34;/post/tech/sed/1_hu_a0afa30f3124a0e9.png 480w, /post/tech/sed/1_hu_1d21390242d0ad9a.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;1.png&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;237&#34;
		data-flex-basis=&#34;569px&#34;
	
&gt;
③ 总结模式空间与保持空间关系：&lt;/p&gt;
&lt;p&gt;保持空间是模式空间一个临时存放数据的缓冲区，协助模式空间进行数据处理&lt;/p&gt;
&lt;p&gt;（3）演示&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;seq &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; |sed -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;n;p&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 显示偶数行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;seq &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; |sed  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1!G;h;$!d&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 倒序显示&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;seq &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; |sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;H;n;d&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 显示奇数行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;seq &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; |sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;N;D&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 显示最后一行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;seq &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; |sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;G&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 每行之间加空行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;seq &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; |sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;g&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 把每行内容替换成空行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;seq &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; |sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/^$/d;G&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 确保每一行下面都有一个空行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>backup mysql</title>
        <link>/post/tech/backup.mysql/</link>
        <pubDate>Fri, 20 Sep 2019 11:28:03 +0000</pubDate>
        
        <guid>/post/tech/backup.mysql/</guid>
        <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#10 8,13 * * * sh /home/xxxxx/exportXM.sh&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;statement&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;use dbname1;select a.dev_sn,a.last_online_time,a.last_offline_time from w_devices a, device_xiamen b where a.dev_sn = b.dev_sn;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mysql -u4g_svr -p4g_svr -hlogin.mysqlhost.com &amp;gt;/webapps/images/xiamen.xls &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt; EOF
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$statement
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;exporting&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>Wget</title>
        <link>/post/tech/wget/</link>
        <pubDate>Wed, 24 May 2017 15:57:25 +0800</pubDate>
        
        <guid>/post/tech/wget/</guid>
        <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget -r -p -k -nc -o laravel-china.org.down.log http://laravel-china.org/docs
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget -r -p -k -nc -o administrator.frozennode.com.down.log http://administrator.frozennode.com/docs
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget -r -p -k -nc -o laravel.com.down.log http://laravel.com/api/4.2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget -r -p -k -nc -o www.shouce.ren.log www.shouce.ren
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget -r -p -k -nc -o laozi.log http://www.8bei8.com/book/laozi.html
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>ab</title>
        <link>/post/tech/ab/</link>
        <pubDate>Thu, 24 Dec 2015 15:54:47 +0800</pubDate>
        
        <guid>/post/tech/ab/</guid>
        <description>&lt;h2 id=&#34;install&#34;&gt;Install
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt-get install apache2-utils
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;use&#34;&gt;Use
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./ab -c &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; -n &lt;span style=&#34;color:#ae81ff&#34;&gt;10000&lt;/span&gt; http://127.0.0.1/index.php
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#-c 100 即：每次并发100个&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#-n 10000 即： 共发送10000个请求&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#用ab测试时，最大并发不能超过1024，其实ab本身没有做这个限制，而是系统限制每个进程打开的最大的文件数为1024&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#ulimit -a&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#ulimit -n 1020&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#-n 可以指定最大请求数，但是也不能超过50000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#-v n   当n&amp;gt;=2 时，可以显示发送的http请求头，和响应的http头及内容； 压力测试时不要这么做&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        
    </channel>
</rss>
