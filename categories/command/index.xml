<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Command on 良宏</title>
    <link>/categories/command/</link>
    <description>Recent content in Command on 良宏</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 18 Feb 2022 09:01:47 +0800</lastBuildDate><atom:link href="/categories/command/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>apt</title>
      <link>/p/apt/</link>
      <pubDate>Fri, 18 Feb 2022 09:01:47 +0800</pubDate>
      
      <guid>/p/apt/</guid>
      <description>apt-file apt-file 是一个软件包，它索引可用存储库中软件包的内容，并允许您在所有可用软件包中搜索特定文件。 例如，假设您下载一个软件尝试运行它时，收到一条消息</description>
    </item>
    
    <item>
      <title>Netstat</title>
      <link>/p/netstat/</link>
      <pubDate>Fri, 24 Dec 2021 15:56:49 +0800</pubDate>
      
      <guid>/p/netstat/</guid>
      <description>netstat 作为调试网络问题的必备工具, 有些常用选项, 在这里记录一下 显示路由表: netstat -r 显示所有连接: netstat -a 显示所有 TCP 连接: netstat -at 显示所有 UDP 连接: netstat -au 显示所有</description>
    </item>
    
    <item>
      <title>Grep</title>
      <link>/p/grep/</link>
      <pubDate>Fri, 24 Dec 2021 15:56:15 +0800</pubDate>
      
      <guid>/p/grep/</guid>
      <description>#- Search for a pattern within a file: grep &amp;#34;search_pattern&amp;#34; path/to/file #- Search for an exact string (disables regular expressions): grep --fixed-strings &amp;#34;exact_string&amp;#34; path/to/file #- Search for a pattern in all files recursively in a directory, showing line numbers of matches, ignoring binary files: grep --recursive --line-number --binary-files=without-match &amp;#34;search_pattern&amp;#34; path/to/directory #- Use extended regular expressions (supports `?`, `+`, `{}`, `()` and `|`), in case-insensitive mode: grep --extended-regexp --ignore-case &amp;#34;search_pattern&amp;#34; path/to/file #- Print 3 lines of context around, before, or after each match: grep --context|before-context|after-context=3 &amp;#34;search_pattern&amp;#34; path/to/file #- Print file name and line number for each match: grep --with-filename --line-number &amp;#34;search_pattern&amp;#34; path/to/file #- Search for lines matching a pattern, printing only the matched text: grep --only-matching &amp;#34;search_pattern&amp;#34; path/to/file #- Search stdin for lines that do not match a pattern: cat path/to/file | grep --invert-match &amp;#34;search_pattern&amp;#34; </description>
    </item>
    
    <item>
      <title>Find</title>
      <link>/p/find/</link>
      <pubDate>Fri, 24 Dec 2021 15:56:03 +0800</pubDate>
      
      <guid>/p/find/</guid>
      <description>找到root用户的文件全部改成www-data用户的 #!/bin/bash # find . -user root -group root -exec chown 1000:1000 {} \; # find . -user root -group root -exec chown www-data:www-data {} \; # find . -user root -group root | xargs chown 1000:1000 find . -user root -group root | xargs</description>
    </item>
    
    <item>
      <title>Binwalk</title>
      <link>/p/binwalk/</link>
      <pubDate>Fri, 24 Dec 2021 15:55:36 +0800</pubDate>
      
      <guid>/p/binwalk/</guid>
      <description>本周一 安恒萌新粉丝群：928102972分享的工具为 binwalk。 Binwalk是一款快速、易用，用于分析，逆向工程和提取固件映像的工具。</description>
    </item>
    
    <item>
      <title>Awk</title>
      <link>/p/awk/</link>
      <pubDate>Fri, 24 Dec 2021 15:54:47 +0800</pubDate>
      
      <guid>/p/awk/</guid>
      <description>awk输出指定列 awk &amp;lsquo;{print $0}&amp;rsquo; file #打印所有列 awk &amp;lsquo;{print $1}&amp;rsquo; file #打印第一列 awk &amp;lsquo;{print $1, $3}&amp;rsquo; file #打印第一和第三列 cat file | awk &amp;lsquo;{print $3, $1}&amp;rsquo; #打印第三列和第一列，注意先后顺序。 cat file |</description>
    </item>
    
    <item>
      <title>backup mysql</title>
      <link>/p/backup-mysql/</link>
      <pubDate>Fri, 20 Sep 2019 11:28:03 +0000</pubDate>
      
      <guid>/p/backup-mysql/</guid>
      <description>#10 8,13 * * * sh /home/xxxxx/exportXM.sh #!/bin/bash statement=&amp;#34;use dbname1;select a.dev_sn,a.last_online_time,a.last_offline_time from w_devices a, device_xiamen b where a.dev_sn = b.dev_sn;&amp;#34; mysql -u4g_svr -p4g_svr -hlogin.mysqlhost.com &amp;gt;/webapps/images/xiamen.xls &amp;lt;&amp;lt; EOF $statement EOF echo &amp;#34;exporting&amp;#34; </description>
    </item>
    
    <item>
      <title>Wget</title>
      <link>/p/wget/</link>
      <pubDate>Wed, 24 May 2017 15:57:25 +0800</pubDate>
      
      <guid>/p/wget/</guid>
      <description>wget -r -p -k -nc -o laravel-china.org.down.log http://laravel-china.org/docs wget -r -p -k -nc -o administrator.frozennode.com.down.log http://administrator.frozennode.com/docs wget -r -p -k -nc -o laravel.com.down.log http://laravel.com/api/4.2 wget -r -p -k -nc -o www.shouce.ren.log www.shouce.ren wget -r -p -k -nc -o laozi.log http://www.8bei8.com/book/laozi.html </description>
    </item>
    
    <item>
      <title>ab</title>
      <link>/p/ab/</link>
      <pubDate>Thu, 24 Dec 2015 15:54:47 +0800</pubDate>
      
      <guid>/p/ab/</guid>
      <description>Install apt-get install apache2-utils Use ./ab -c 100 -n 10000 http://127.0.0.1/index.php #-c 100 即：每次并发100个 #-n 10000 即： 共发送10000个请求 #用ab测试时，最大并发不能超过1024，其实ab本身没有做这个</description>
    </item>
    
  </channel>
</rss>
